[{"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js":"1","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js":"2","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\reportWebVitals.js":"3","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js":"4","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js":"5","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\SignUp.js":"6","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js":"7","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js":"8","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js":"9","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js":"10","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js":"11","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js":"12","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js":"13","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js":"14","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\SignIn.js":"15","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\loginContext.js":"16","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\useLoginState.js":"17","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\LoginHome.js":"18","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Navbar.js":"19","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js":"20","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\FrontBack.js":"21","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\CoachTools.js":"22","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js":"23","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\style.js":"24","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Page.js":"25","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js":"26","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Schools.js":"27","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\random\\Auto.js":"28","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Individual.js":"29","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\random\\Form.js":"30","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Masters.js":"31"},{"size":781,"mtime":1627503863769,"results":"32","hashOfConfig":"33"},{"size":2600,"mtime":1628796498583,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1626205071132,"results":"35","hashOfConfig":"33"},{"size":618,"mtime":1628019014988,"results":"36","hashOfConfig":"33"},{"size":187,"mtime":1626205071069,"results":"37","hashOfConfig":"33"},{"size":10093,"mtime":1628710046716,"results":"38","hashOfConfig":"33"},{"size":4545,"mtime":1628796260890,"results":"39","hashOfConfig":"33"},{"size":175,"mtime":1626205071095,"results":"40","hashOfConfig":"33"},{"size":454,"mtime":1628796276702,"results":"41","hashOfConfig":"33"},{"size":461,"mtime":1628791420582,"results":"42","hashOfConfig":"33"},{"size":175,"mtime":1628025948920,"results":"43","hashOfConfig":"33"},{"size":228,"mtime":1627437744269,"results":"44","hashOfConfig":"33"},{"size":446,"mtime":1628796275704,"results":"45","hashOfConfig":"33"},{"size":439,"mtime":1628796274906,"results":"46","hashOfConfig":"33"},{"size":5610,"mtime":1628024301885,"results":"47","hashOfConfig":"33"},{"size":122,"mtime":1626722215027,"results":"48","hashOfConfig":"33"},{"size":419,"mtime":1626722250498,"results":"49","hashOfConfig":"33"},{"size":12759,"mtime":1628539009714,"results":"50","hashOfConfig":"33"},{"size":9406,"mtime":1628024475796,"results":"51","hashOfConfig":"33"},{"size":3845,"mtime":1628707284093,"results":"52","hashOfConfig":"33"},{"size":3820,"mtime":1628280697910,"results":"53","hashOfConfig":"33"},{"size":1478,"mtime":1628723081637,"results":"54","hashOfConfig":"33"},{"size":11189,"mtime":1628796550491,"results":"55","hashOfConfig":"33"},{"size":1807,"mtime":1628024092778,"results":"56","hashOfConfig":"33"},{"size":529,"mtime":1628793495666,"results":"57","hashOfConfig":"33"},{"size":1094,"mtime":1628713786161,"results":"58","hashOfConfig":"33"},{"size":167,"mtime":1628025959138,"results":"59","hashOfConfig":"33"},{"size":1353,"mtime":1628542059623,"results":"60","hashOfConfig":"33"},{"size":13787,"mtime":1628627241666,"results":"61","hashOfConfig":"33"},{"size":561,"mtime":1628716460238,"results":"62","hashOfConfig":"33"},{"size":10489,"mtime":1628796788434,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"s4ayer",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js",[],["132","133"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\reportWebVitals.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\SignUp.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js",["134","135","136"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\SignIn.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\loginContext.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\useLoginState.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\LoginHome.js",["137","138"],"import { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n }));\r\n\r\n//json\r\n//value\r\n//onChange\r\n//text\r\n//width\r\nfunction Auto(props){\r\n   return(\r\n      <div style={{display:\"flex\"}} name={props.name}>\r\n         <Grid item sm={3}>\r\n            <p>{props.title}</p>\r\n         </Grid>\r\n         <Autocomplete\r\n            options={props.options.map((option) => option.label)}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            freeSolo\r\n            renderInput={(params) => \r\n                           <TextField \r\n                              {...params} \r\n                              error={props.error && (props.value === null || props.value === \"\")}\r\n                              helperText={props.error && (props.value === null || props.value === \"\") ? \r\n                                             \"Please fill out to continue\" : \r\n                                             null\r\n                                          }\r\n                              label={props.text} \r\n                              variant=\"outlined\"\r\n                              required\r\n                              style={{ width: props.width }}\r\n                           />\r\n                        }\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction LoginHome(){\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({ loc: null, \r\n                                          lev: null, \r\n                                          school: null,\r\n                                          schoolData: {\r\n                                            value: null,\r\n                                            label: null,\r\n                                            div: null,\r\n                                          },\r\n                                          team1: null,\r\n                                          team2: null,\r\n                                          coach: \"\",\r\n                                          error: false,\r\n                                       });\r\n    var url = `https://docs.google.com/forms/d/e/1FAIpQLSeJ_fqnbSPgfrCmRAlcGN8lFCnLKw2zbvb8YUMRtYDjSTMXVQ/viewform?usp=pp_url\r\n                &entry.296234163=${choice.loc}\r\n                &entry.1262511676=${choice.lev}\r\n                &entry.2068664503=${choice.schoolData.label}\r\n                &entry.962283225=${choice.schoolData.value}\r\n                &entry.1420093772=${choice.schoolData.div}\r\n                &entry.75608970=${choice.team1}\r\n                &entry.2041045214=${choice.team2}\r\n                &entry.2062002355=${choice.coach}`\r\n\r\n   let longest = 0;\r\n\r\n   //finding length of longest string in options and resize search box accordingly\r\n   for(var option in options){\r\n      for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n         if(options[option][i].label.length > longest)\r\n            longest = options[option][i].label.length;\r\n      }\r\n   }\r\n\r\n   //don't know if there is a good way to do this, couldn't find anything\r\n   longest *= 10;\r\n\r\n   const onChange = (newValue, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team1\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team1: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team1: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team2\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team2: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team2: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"coach\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: newValue.target.value,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: \"\",\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n\r\n   //NEED TO ADD SUBMISSION TO STORAGE\r\n   const onSubmit = (event) => {\r\n      \r\n      //Setting error if something is not filled out.\r\n      for (const item in choice){\r\n         if(choice[item] === null || choice[item] === \"\"){\r\n            console.log(\"ERROR :\", item)\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               error: true,\r\n            }));\r\n            return;\r\n         }\r\n      }\r\n\r\n      //Getting all the data for that school\r\n      for(option in options.school){\r\n         if(options.school[option].label === choice.school){\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               schoolData: {\r\n                value: options.school[option].value,\r\n                label: options.school[option].label,\r\n                div: options.school[option].div,\r\n               }\r\n            }));\r\n            console.log(options.school[option])\r\n            break;\r\n         }\r\n      }\r\n\r\n      //send data to sheets/database\r\n      console.log(event)\r\n      console.log(choice)\r\n\r\n      // document.forms['test'].submit();\r\n      //Supposed to send data to a Google Sheets macro that puts the data in the next available line\r\n      // event.preventDefault();\r\n      // const scriptURL = \"https://script.google.com/macros/s/AKfycbxOl11cGTUBzAG_gA8AF8syE6nXBC29fcC5-BLoRCRySJz_OD1y7xUazYWd8-yavj92xw/exec\";\r\n      // const form = document.forms[\"test\"];\r\n      // var formData = new FormData(form);\r\n      // console.log(form)\r\n      // var test = formData.values()\r\n      // console.log(test)\r\n      // fetch(scriptURL, { method: \"POST\", body: formData})\r\n      //   .then(response => console.log(response))\r\n      //   .catch(error => console.log(error))\r\n  \r\n   }\r\n\r\n\r\n   return(\r\n      <div style={{display: \"flex\", flexDirection:\"row\"}}>\r\n         <div style={{borderRadius: \"4px\", margin:\"2%\", boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\"}}>\r\n            <div style={{marginLeft:\"1%\", marginRight:\"1%\",}}>\r\n               {!choice.schoolData.value ? <form className={classes.root}>\r\n                  \r\n                  <Auto\r\n                     title=\"Competition Location\"\r\n                     options={options.locations}\r\n                     text=\"Select Competition Location\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"location\")}\r\n                     width={longest}\r\n                     value={choice.loc}\r\n                     error={choice.error}\r\n                     name=\"Competition Location\"\r\n                  />\r\n                  \r\n                  <Auto\r\n                     title=\"Competition Level\"\r\n                     options={options.level}\r\n                     text=\"Select Your Grade Level\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"level\")}\r\n                     width={longest}\r\n                     value={choice.lev}\r\n                     error={choice.error}\r\n                     name=\"Competition Level\"\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"School Registering\"\r\n                     options={options.school}\r\n                     text=\"Select Your School\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"school\")}\r\n                     width={longest}\r\n                     value={choice.school}\r\n                     error={choice.error}\r\n                     name=\"School Registering\"\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number of 4, 5, 6, 7, or 9-10th Teams\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Teams\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"team1\")}\r\n                     width={longest}\r\n                     value={choice.team1}\r\n                     error={choice.error}\r\n                     name=\"Number of 4, 5, 6, 7, or 9-10th Teams\"\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number of 8 or 11-12th Teams\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Teams\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"team2\")}\r\n                     width={longest}\r\n                     value={choice.team2}\r\n                     error={choice.error}\r\n                     name=\"Number of 8 or 11-12th Teams\"\r\n                  />\r\n                  \r\n                  <div style={{display:\"flex\"}} name=\"Person Bringing Students to Event\">\r\n                    <Grid item sm={3}>\r\n                        <p>Person Bringing Students to Event</p>\r\n                    </Grid>\r\n                    <TextField\r\n                        error={choice.error && choice.coach === \"\"}\r\n                        helperText={choice.error && choice.coach === \"\" ? \r\n                                      \"Please fill out to continue\" : \r\n                                      null\r\n                                    }\r\n                        variant=\"outlined\" \r\n                        margin=\"normal\" \r\n                        required\r\n                        label=\"Coach\"\r\n                        value={choice.coach}\r\n                        onChange={(event) => onChange(event, \"coach\")}\r\n                        style={{ width: longest }}\r\n                    >\r\n                    </TextField>\r\n                  </div>\r\n\r\n                  <div name=\"submit\">\r\n                    <Grid container>\r\n                      <Grid item sm={3}></Grid>\r\n                      <Grid item sm={3} width={longest}>\r\n                          <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onSubmit}\r\n                            type=\"submit\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n               </form> :\r\n               <iframe \r\n                  src={url} \r\n                  width=\"640\" \r\n                  height=\"1379\" \r\n                  frameBorder=\"0\" \r\n                  marginHeight=\"0\" \r\n                  marginWidth=\"0\"\r\n               >\r\n                  Loading…\r\n               </iframe>}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LoginHome;","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Navbar.js",["139","140","141","142"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { AppBar, Toolbar, Button, Typography, MenuItem, MenuList, Popper, Grow, ClickAwayListener, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport image from \"../../assets/logo.5a82c15d88ad2d074447.png\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button:{\r\n    position:\"relative\",\r\n    overflow:\"hidden\",\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    justifyContent:\"center\",\r\n    color:\"inherit\",\r\n    borderRadius:\"5px\",\r\n    textDecoration:\"none\",\r\n    textTransform:\"uppercase\",\r\n    background:\"transparent\",\r\n    border:\"currentColor\",\r\n    fontSize:\"15px\",\r\n    padding:\"5px\",\r\n    '&:hover':{\r\n      backgroundColor:\"#2a3576\",\r\n      transition:\"background-color 250ms \\\r\n                  cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow \\\r\n                  250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border \\\r\n                  250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    }\r\n  }\r\n}));\r\n\r\nfunction HeadBar() {\r\n  const classes = useStyles();\r\n  const [about, setAbout] = useState(false);\r\n  const aboutRef = useRef(null);\r\n  const [info, setInfo] = useState(false);\r\n  const infoRef = useRef(null);\r\n  const [resource, setResource] = useState(false);\r\n  const resourceRef = useRef(null);\r\n\r\n\r\n  //Event handling for the About Us tab\r\n  const aboutClick = () => {\r\n    setAbout((prevAbout) => !prevAbout);\r\n  };\r\n\r\n  const aboutClose = (event) => {\r\n    if (aboutRef.current && aboutRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setAbout(false);\r\n  };\r\n\r\n  const prevAbout = useRef(about);\r\n  useEffect(() => {\r\n    if (prevAbout.current === true && about === false) {\r\n      aboutRef.current.focus();\r\n    }\r\n\r\n    prevAbout.current = about;\r\n  }, [about]);\r\n\r\n\r\n  //Event handling for the Information tab\r\n  const infoClick = () => {\r\n    setInfo((prevInfo) => !prevInfo);\r\n  };\r\n\r\n  const infoClose = (event) => {\r\n    if (infoRef.current && infoRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setInfo(false);\r\n  };\r\n\r\n  const prevInfo = useRef(info);\r\n  useEffect(() => {\r\n    if (prevInfo.current === true && info === false) {\r\n      infoRef.current.focus();\r\n    }\r\n\r\n    prevInfo.current = info;\r\n  }, [info]);\r\n\r\n  \r\n  //Event handling for the Resources tab\r\n  const resourceClick = (event) => {\r\n    setResource((prevResource) => !prevResource);\r\n  };\r\n\r\n  const resourceClose = (event) => {\r\n    if (resourceRef.current && resourceRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setResource(false);\r\n  };\r\n\r\n  const prevResource = useRef(info);\r\n  useEffect(() => {\r\n    if (prevResource.current === true && resource === false) {\r\n      resourceRef.current.focus();\r\n    }\r\n\r\n    prevResource.current = resource;\r\n  }, [resource]);\r\n\r\n  //Do we want to make navigation bar sticky or fixed?\r\n  return (\r\n    <AppBar position=\"static\" style={{display:\"flex\", background:`url(${image}) right center/contain no-repeat #3f51b5`}}>\r\n      \r\n      <Typography \r\n        style={{fontFamily:\"cursive\", \r\n                fontSize:\"40px\", \r\n                fontStyle:\"italic\", \r\n                marginLeft:\"20px\", \r\n                marginTop:\"10px\"}}\r\n      >\r\n              Math Is Cool\r\n      </Typography>\r\n\r\n      <Toolbar>\r\n        <div style={{display:\"flex\", flexDisplay:\"row\", justifyContent:\"space-around\",}}>\r\n          <Button className={classes.button} href=\"/\">\r\n            Home\r\n          </Button>\r\n        \r\n          <div style={{display:\"flex\", flexDisplay:\"row\", justifyContent:\"center\",}}>\r\n            <Button \r\n              ref={aboutRef}\r\n              aria-controls={about ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={aboutClick}\r\n              className={classes.button}\r\n            >\r\n              About Us\r\n            </Button>\r\n            <Popper open={about} anchorEl={aboutRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                      <Grow\r\n                        {...TransitionProps}\r\n                        style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r\n                      >\r\n                        <ClickAwayListener onClickAway={aboutClose}>\r\n                          <MenuList \r\n                            style={{backgroundColor:\"white\", \r\n                                    borderRadius:\"5px\", \r\n                                    boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), \\\r\n                                              0 2px 2px 0 rgb(0 0 0 / 14%), \\\r\n                                              0 1px 5px 0 rgb(0 0 0 / 12%)\"}} \r\n                            autoFocusItem={about}\r\n                          >\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/about/history\" onClick={aboutClose}>History</MenuItem>\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/about/contacts\" onClick={aboutClose}>Contacts</MenuItem>\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/about/locations\" onClick={aboutClose}>Locations</MenuItem>\r\n                          </MenuList>\r\n                        </ClickAwayListener>\r\n                      </Grow>\r\n                    )}\r\n            </Popper>\r\n          </div>\r\n\r\n          <div style={{display:\"flex\", flexDisplay:\"row\", justifyContent:\"center\",}}>\r\n            <Button \r\n              ref={infoRef}\r\n              aria-controls={info ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={infoClick}\r\n              className={classes.button}\r\n            >\r\n              Information\r\n            </Button>\r\n            <Popper open={info} anchorEl={infoRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                      <Grow\r\n                        {...TransitionProps}\r\n                        style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r\n                      >\r\n                        <ClickAwayListener onClickAway={infoClose}>\r\n                          <MenuList \r\n                            style={{backgroundColor:\"white\", \r\n                                    borderRadius:\"5px\", \r\n                                    boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), \\\r\n                                              0 2px 2px 0 rgb(0 0 0 / 14%), \\\r\n                                              0 1px 5px 0 rgb(0 0 0 / 12%)\"}} \r\n                            autoFocusItem={info} \r\n                            id=\"fade-menu\"\r\n                          >\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/information/rules\" onClick={infoClose}>Rules</MenuItem>\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/information/fees\" onClick={infoClose}>Fees</MenuItem>\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/information/faq\" onClick={infoClose}>FAQ</MenuItem>\r\n                          </MenuList>\r\n                        </ClickAwayListener>\r\n                      </Grow>\r\n                    )}\r\n            </Popper>\r\n          </div>\r\n\r\n          <div style={{display:\"flex\", flexDisplay:\"row\", justifyContent:\"center\",}}>\r\n            <Button \r\n              ref={resourceRef}\r\n              aria-controls={resource ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={resourceClick}\r\n              className={classes.button}\r\n            >\r\n              Resources\r\n            </Button>\r\n            <Popper open={resource} anchorEl={resourceRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                      <Grow\r\n                        {...TransitionProps}\r\n                        style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r\n                      >\r\n                        <ClickAwayListener onClickAway={resourceClose}>\r\n                          <MenuList \r\n                            style={{backgroundColor:\"white\", \r\n                                    borderRadius:\"5px\", \r\n                                    boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), \\\r\n                                              0 2px 2px 0 rgb(0 0 0 / 14%), \\\r\n                                              0 1px 5px 0 rgb(0 0 0 / 12%)\"}} \r\n                            autoFocusItem={resource}\r\n                          >\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/resources/rules\" onClick={resourceClose}>Rules</MenuItem>\r\n                            <MenuItem style={{color:\"black\"}} component={Link} to=\"/resources/past-tests\" onClick={resourceClose}>Past Tests</MenuItem>\r\n                          </MenuList>\r\n                        </ClickAwayListener>\r\n                      </Grow>\r\n                    )}\r\n            </Popper>\r\n          </div>\r\n\r\n          <Button className={classes.button} href=\"/competitions\">Competitions</Button>\r\n          {!localStorage.getItem(\"authorized\") ? <Button className={classes.button} href=\"/login\">Login</Button> :\r\n                                                 <Button className={classes.button} href=\"/home\">HomePage</Button>}\r\n          {localStorage.getItem(\"authorized\") ? <Button className={classes.button} href=\"/login\" onClick={() => {localStorage.removeItem(\"authorized\")}}>Logout</Button> : null}\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default HeadBar;\r\n",["143","144"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\FrontBack.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\CoachTools.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\style.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Page.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js",["145","146"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Schools.js",[],["147","148"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\random\\Auto.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Individual.js",["149","150"],"import { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Auto from \"../random/Auto.js\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n   gform: {\r\n      width:\"100%\",\r\n      height:\"1379px\",\r\n      frameBorder:\"0\",\r\n      marginHeight:\"0\",\r\n      marginWidth:\"0\",\r\n   }\r\n }));\r\n\r\nfunction Individual(){\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({ loc: null, \r\n                                          lev: null, \r\n                                          name: \"\",\r\n                                          grade: null,\r\n                                          school: null,\r\n                                          stlev: null,\r\n                                          schoolData: {\r\n                                             value: null,\r\n                                             label: null,\r\n                                             div: null,\r\n                                           },\r\n                                          team1: null,\r\n                                          team2: null,\r\n                                          coach: \"\",\r\n                                          error: false,\r\n                                       });\r\n\r\n   let longest = 0;\r\n\r\n   var url = `https://docs.google.com/forms/d/e/1FAIpQLSeJ_fqnbSPgfrCmRAlcGN8lFCnLKw2zbvb8YUMRtYDjSTMXVQ/viewform?usp=pp_url\r\n                &entry.296234163=${choice.loc}\r\n                &entry.1262511676=${choice.lev}\r\n                &entry.2068664503=${choice.schoolData.label}\r\n                &entry.962283225=${choice.schoolData.value}\r\n                &entry.1420093772=${choice.schoolData.div}\r\n                &entry.75608970=${choice.team1}\r\n                &entry.2041045214=${choice.team2}\r\n                &entry.2062002355=${choice.coach}`\r\n\r\n   //finding length of longest string in options and resize search box accordingly\r\n   for(var option in options){\r\n      for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n         if(options[option][i].label.length > longest)\r\n            longest = options[option][i].label.length;\r\n      }\r\n   }\r\n\r\n   //don't know if there is a good way to do this, couldn't find anything\r\n   longest *= 10;\r\n\r\n   const onChange = (newValue, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team1\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team1: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team1: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team2\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team2: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team2: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"coach\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: newValue.target.value,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: \"\",\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n          case \"name\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  name: newValue.target.value,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  name: \"\",\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n          case \"grade\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  grade: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  grade: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n          case \"stlev\":\r\n              if(newValue != null){\r\n                 setChoice((prevState) => ({\r\n                    ...prevState,\r\n                    stlev: newValue,\r\n                    error: false,\r\n                 }));\r\n              } else {\r\n                 setChoice((prevState) => ({\r\n                    ...prevState,\r\n                    stlev: null,\r\n                    error: false,\r\n                 }));\r\n              }\r\n              break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n   const onSubmit = (event) => {\r\n      \r\n      //Setting error if something is not filled out.\r\n      for (const item in choice){\r\n         if(choice[item] === null || choice[item] === \"\"){\r\n            console.log(\"ERROR :\", item)\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               error: true,\r\n            }));\r\n            break;\r\n         }\r\n      }\r\n\r\n      //Getting all the data for that school\r\n      for(option in options.school){\r\n         if(options.school[option].label === choice.school){\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               schoolData: {\r\n                value: options.school[option].value,\r\n                label: options.school[option].label,\r\n                div: options.school[option].div,\r\n               }\r\n            }));\r\n            console.log(options.school[option])\r\n            break;\r\n         }\r\n      }\r\n   }\r\n\r\n   return(\r\n      <>\r\n         {!choice.schoolData.value ?\r\n            <div style={{display: \"flex\", flexDirection:\"row\"}}>\r\n               <div style={{width:\"100%\", borderRadius: \"4px\", margin:\"2%\", boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\"}}>\r\n                  <div style={{marginLeft:\"1%\", marginRight:\"1%\",}}>\r\n                      <p>\r\n                        <b>This is for registering individual competitors only, for teams go <a href=\"/team-register\" style={{color:\"black\"}}>here</a>.</b>\r\n                      </p>\r\n                      <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                        <Auto\r\n                            title=\"Competition Location\"\r\n                            options={options.locations}\r\n                            text=\"Select Competition Location\"\r\n                            onChange={(event, newValue) => onChange(newValue, \"location\")}\r\n                            width={longest}\r\n                            value={choice.loc}\r\n                            error={choice.error}\r\n                        />\r\n\r\n                        <Auto\r\n                            title=\"Competition Level\"\r\n                            options={options.level}\r\n                            text=\"Select Your Grade Level\"\r\n                            onChange={(event, newValue) => onChange(newValue, \"level\")}\r\n                            width={longest}\r\n                            value={choice.lev}\r\n                            error={choice.error}\r\n                        />\r\n\r\n                        <div style={{display:\"flex\"}}>\r\n                            <Grid item sm={3}>\r\n                              <p>Student Name</p>\r\n                            </Grid>\r\n                            <TextField\r\n                              error={choice.error && choice.name === \"\"}\r\n                              helperText={choice.error && choice.name === \"\" ? \r\n                                              \"Please fill out to continue\" : \r\n                                              null\r\n                                          }\r\n                              variant=\"outlined\" \r\n                              margin=\"normal\" \r\n                              required\r\n                              label=\"Student\"\r\n                              value={choice.name}\r\n                              onChange={(event) => onChange(event, \"name\")}\r\n                              style={{ width: longest }}\r\n                            >\r\n                            </TextField>\r\n                        </div>\r\n\r\n                        <Auto\r\n                            title=\"Student's Current Grade\"\r\n                            options={options.grade}\r\n                            text=\"Select Grade Level\"\r\n                            onChange={(event, newValue) => onChange(newValue, \"grade\")}\r\n                            width={longest}\r\n                            value={choice.grade}\r\n                            error={choice.error}\r\n                        />\r\n\r\n                        <Auto\r\n                            title=\"Student's Math Level for competition\"\r\n                            options={options.stlev}\r\n                            text=\"Select Math Level\"\r\n                            onChange={(event, newValue) => onChange(newValue, \"stlev\")}\r\n                            width={longest}\r\n                            value={choice.stlev}\r\n                            error={choice.error}\r\n                        />\r\n\r\n                        <Auto\r\n                            title=\"School Registering\"\r\n                            options={options.school}\r\n                            text=\"Select Your School\"\r\n                            onChange={(event, newValue) => onChange(newValue, \"school\")}\r\n                            width={longest}\r\n                            value={choice.school}\r\n                            error={choice.error}\r\n                        />\r\n\r\n                        <div style={{display:\"flex\"}}>\r\n                            <Grid item sm={3}>\r\n                              <p>Coach</p>\r\n                            </Grid>\r\n                            <TextField\r\n                              error={choice.error && choice.coach === \"\"}\r\n                              helperText={choice.error && choice.coach === \"\" ? \r\n                                              \"Please fill out to continue\" : \r\n                                              null\r\n                                          }\r\n                              variant=\"outlined\" \r\n                              margin=\"normal\" \r\n                              required\r\n                              label=\"Coach\"\r\n                              value={choice.coach}\r\n                              onChange={(event) => onChange(event, \"coach\")}\r\n                              style={{ width: longest }}\r\n                            >\r\n                            </TextField>\r\n                        </div>\r\n\r\n                        <Grid container>\r\n                            <Grid item sm={3}></Grid>\r\n                            <Grid item sm={3} width={longest}>\r\n                              <Button\r\n                                  fullWidth\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={onSubmit}\r\n                              >\r\n                                  Continue\r\n                              </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                      </form>\r\n                      <p>\r\n                        Note: team registrations include 2 alternates per grade level.\r\n                      </p>\r\n                  </div>\r\n               </div>\r\n            </div> :\r\n            <iframe \r\n               src={url} \r\n               className={classes.gform}\r\n            >\r\n               Loading…\r\n            </iframe>\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Individual;","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\random\\Form.js",["151"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Masters.js",["152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"161","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"162","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":12},{"ruleId":"163","severity":1,"message":"164","line":207,"column":23,"nodeType":"165","messageId":"166","endLine":214,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":339,"column":16,"nodeType":"169","endLine":346,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":25,"column":18,"nodeType":"172","messageId":"173","endLine":28,"endColumn":58},{"ruleId":"170","severity":1,"message":"171","line":151,"column":47,"nodeType":"172","messageId":"173","endLine":153,"endColumn":76},{"ruleId":"170","severity":1,"message":"171","line":186,"column":47,"nodeType":"172","messageId":"173","endLine":188,"endColumn":76},{"ruleId":"170","severity":1,"message":"171","line":222,"column":47,"nodeType":"172","messageId":"173","endLine":224,"endColumn":76},{"ruleId":"153","replacedBy":"174"},{"ruleId":"155","replacedBy":"175"},{"ruleId":"157","severity":1,"message":"176","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"177","line":5,"column":17,"nodeType":"159","messageId":"160","endLine":5,"endColumn":27},{"ruleId":"153","replacedBy":"178"},{"ruleId":"155","replacedBy":"179"},{"ruleId":"163","severity":1,"message":"164","line":226,"column":23,"nodeType":"165","messageId":"166","endLine":233,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":364,"column":13,"nodeType":"169","endLine":367,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":20,"column":5,"nodeType":"169","endLine":24,"endColumn":6},{"ruleId":"157","severity":1,"message":"180","line":34,"column":10,"nodeType":"159","messageId":"160","endLine":34,"endColumn":14},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'fire' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'option', 'option', 'option'.","ArrowFunctionExpression","unsafeRefs","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["181"],["182"],"'Alert' is defined but never used.","'AlertTitle' is defined but never used.",["181"],["182"],"'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]