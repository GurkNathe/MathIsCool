[{"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js":"1","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js":"2","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js":"3","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js":"4","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js":"5","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js":"6","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js":"7","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js":"8","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js":"9","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js":"10","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js":"11","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js":"12","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js":"13","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js":"14","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js":"15","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getWeb.js":"16","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\FrontBack.js":"17","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\CoachTools.js":"18","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Admin.js":"19","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignUp.js":"20","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ProfilePage.js":"21","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ForgotPass.js":"22","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignIn.js":"23","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Names.js":"24","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Table.js":"25","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getPage.js":"26","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ImportContent.js":"27","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\assets.js":"28","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\AdminRoute.js":"29","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\AddAdmin.js":"30","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\MarkMasters.js":"31","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\MastersTeams.js":"32","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\Test.js":"33","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\DataTable.js":"34","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageCompetitions.js":"35","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\styledComps.js":"36","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageHome.js":"37","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageFAQ.js":"38","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManagePastTests.js":"39","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageSites.js":"40"},{"size":225,"mtime":1660000741526,"results":"41","hashOfConfig":"42"},{"size":6286,"mtime":1660262144956,"results":"43","hashOfConfig":"42"},{"size":871,"mtime":1659999057276,"results":"44","hashOfConfig":"42"},{"size":9224,"mtime":1660168707551,"results":"45","hashOfConfig":"42"},{"size":2992,"mtime":1660074193254,"results":"46","hashOfConfig":"42"},{"size":4789,"mtime":1660082830404,"results":"47","hashOfConfig":"42"},{"size":550,"mtime":1660000111528,"results":"48","hashOfConfig":"42"},{"size":554,"mtime":1660000098263,"results":"49","hashOfConfig":"42"},{"size":2518,"mtime":1660346584467,"results":"50","hashOfConfig":"42"},{"size":1423,"mtime":1660245192221,"results":"51","hashOfConfig":"42"},{"size":546,"mtime":1660000118716,"results":"52","hashOfConfig":"42"},{"size":541,"mtime":1660000106397,"results":"53","hashOfConfig":"42"},{"size":1945,"mtime":1660104705406,"results":"54","hashOfConfig":"42"},{"size":15115,"mtime":1660072707467,"results":"55","hashOfConfig":"42"},{"size":1336,"mtime":1660085746124,"results":"56","hashOfConfig":"42"},{"size":727,"mtime":1660000044230,"results":"57","hashOfConfig":"42"},{"size":2542,"mtime":1660104294366,"results":"58","hashOfConfig":"42"},{"size":563,"mtime":1660094548653,"results":"59","hashOfConfig":"42"},{"size":2110,"mtime":1660104800050,"results":"60","hashOfConfig":"42"},{"size":6710,"mtime":1660003581507,"results":"61","hashOfConfig":"42"},{"size":6608,"mtime":1660168162806,"results":"62","hashOfConfig":"42"},{"size":1870,"mtime":1660003007765,"results":"63","hashOfConfig":"42"},{"size":4376,"mtime":1660166597862,"results":"64","hashOfConfig":"42"},{"size":4087,"mtime":1660075176627,"results":"65","hashOfConfig":"42"},{"size":8064,"mtime":1660075394919,"results":"66","hashOfConfig":"42"},{"size":167,"mtime":1653787508902,"results":"67","hashOfConfig":"42"},{"size":3732,"mtime":1660174435475,"results":"68","hashOfConfig":"42"},{"size":590,"mtime":1659999919800,"results":"69","hashOfConfig":"42"},{"size":1594,"mtime":1660085835203,"results":"70","hashOfConfig":"42"},{"size":3199,"mtime":1660173509786,"results":"71","hashOfConfig":"42"},{"size":4575,"mtime":1660084071201,"results":"72","hashOfConfig":"42"},{"size":6234,"mtime":1660085585033,"results":"73","hashOfConfig":"42"},{"size":969,"mtime":1660074050847,"results":"74","hashOfConfig":"42"},{"size":322,"mtime":1660000153742,"results":"75","hashOfConfig":"42"},{"size":22506,"mtime":1660347488995,"results":"76","hashOfConfig":"42"},{"size":13523,"mtime":1660257095562,"results":"77","hashOfConfig":"42"},{"size":9718,"mtime":1660264337800,"results":"78","hashOfConfig":"42"},{"size":11690,"mtime":1660264350272,"results":"79","hashOfConfig":"42"},{"size":9262,"mtime":1660346849958,"results":"80","hashOfConfig":"42"},{"size":12482,"mtime":1660347721637,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1rvge67",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js",[],["167","168"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js",["169","170"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { TextField, Button, Grid } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TeamForm, Auto, BasicPage } from \"../styledComps\";\r\nimport { divisions } from \"../assets.js\";\r\n\r\nimport { collection, where, getDocs, getDoc, doc } from \"@firebase/firestore\";\r\nimport { auth, db } from \"../fire\";\r\n\r\nlet options = require(\"./options\");\r\n\r\n// TODO: Competition grade matches given grade\r\n\r\nexport default function TeamRegister(props) {\r\n\tconst history = useHistory();\r\n\r\n\t//gets the competitions that are open (i.e. status == reg)\r\n\tconst getComps = async (title) => {\r\n\t\t//holds the competitions\r\n\t\tlet comps = {};\r\n\r\n\t\t//checks if load variable in local storage is true, meaning database can be pulled\r\n\t\tif (\r\n\t\t\t!sessionStorage.getItem(title + \"Data\") ||\r\n\t\t\t!sessionStorage.getItem(\"mastersData\")\r\n\t\t) {\r\n\t\t\t//getting the 'web' collection from firestore\r\n\t\t\tconst competitions = await getDocs(\r\n\t\t\t\tcollection(db, title),\r\n\t\t\t\twhere(\"status\", \"==\", \"reg\")\r\n\t\t\t);\r\n\t\t\tconst masters = await getDoc(doc(db, \"masters\", \"teams\"));\r\n\r\n\t\t\t//adding open competitions to holding variable\r\n\t\t\tcompetitions.forEach((item) => {\r\n\t\t\t\tcomps = {\r\n\t\t\t\t\t...comps,\r\n\t\t\t\t\t[item.id]: item.data(),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\t//checking to make sure it actually got data\r\n\t\t\tif (competitions.empty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//adding web page html/data to local storage\r\n\t\t\tsessionStorage.setItem(title + \"Data\", JSON.stringify(comps));\r\n\t\t\tsessionStorage.setItem(\r\n\t\t\t\t\"mastersData\",\r\n\t\t\t\tmasters ? JSON.stringify(masters.data()) : null\r\n\t\t\t);\r\n\r\n\t\t\treturn [comps, masters ? masters.data() : null];\r\n\t\t}\r\n\t};\r\n\r\n\t// all open competitions\r\n\tconst [comps, setComps] = useState(\r\n\t\tJSON.parse(sessionStorage.getItem(\"competitionsData\"))\r\n\t);\r\n\r\n\t// stores the masters data\r\n\tconst [masters, setMasters] = useState(\r\n\t\tJSON.parse(sessionStorage.getItem(\"mastersData\"))\r\n\t);\r\n\r\n\t// input variables\r\n\tconst [choice, setChoice] = useState({\r\n\t\tloc: null,\r\n\t\tlev: null,\r\n\t\tschool: null,\r\n\t\tteam: null,\r\n\t\tindiv: null,\r\n\t\temail: \"\",\r\n\t\tcoach: \"\",\r\n\t\terror: false,\r\n\t});\r\n\r\n\t// used to store the locations, does not change\r\n\tconst [locals, setLocals] = useState(\r\n\t\tJSON.parse(sessionStorage.getItem(\"filteredComps\"))\r\n\t);\r\n\r\n\tconst [stated, setStated] = useState(false);\r\n\r\n\t// stores email and username of user\r\n\tconst user = {\r\n\t\temail: sessionStorage.getItem(\"email\"),\r\n\t\tname: sessionStorage.getItem(\"username\"),\r\n\t};\r\n\r\n\t// gets the value for width of text fields\r\n\tconst getLongest = (longest) => {\r\n\t\t//finding length of longest string in options and resize search box accordingly\r\n\t\tfor (const option in options) {\r\n\t\t\tfor (let i = 0; i < Object.keys(options[option]).length; i++) {\r\n\t\t\t\tif (options[option][i].label.length > longest)\r\n\t\t\t\t\tlongest = options[option][i].label.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//don't know if there is a good way to do this, couldn't find anything\r\n\t\treturn longest * 10;\r\n\t};\r\n\r\n\tlet compId = null; //used to store the id of the competition being signed up for\r\n\tlet longest = getLongest(0); //used for storing the width of the longest string that can be selected in the drop-downs\r\n\tlet url = \"\"; //used to store the url for the Google Form\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(newValue, type, field) => {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"level\":\r\n\t\t\t\t\tif (newValue != null) {\r\n\t\t\t\t\t\tsetChoice((prevState) => ({\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tlev: newValue,\r\n\t\t\t\t\t\t\tloc: null,\r\n\t\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//reset options\r\n\t\t\t\t\t\toptions.locations = locals;\r\n\r\n\t\t\t\t\t\tlet temp = [];\r\n\r\n\t\t\t\t\t\t//gets the value of each level option\r\n\t\t\t\t\t\tlet value = \"\";\r\n\t\t\t\t\t\tfor (const i in options.level) {\r\n\t\t\t\t\t\t\tif (options.level[i].label === newValue.value) {\r\n\t\t\t\t\t\t\t\tvalue = options.level[i].value;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//TODO: might need to change options.location to a state\r\n\t\t\t\t\t\t// for removing locations that don't have the grade associated with it\r\n\t\t\t\t\t\tfor (const i in options.locations) {\r\n\t\t\t\t\t\t\tfor (const j in comps) {\r\n\t\t\t\t\t\t\t\t//checks if same location\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\toptions.locations[i].value.toUpperCase() ===\r\n\t\t\t\t\t\t\t\t\tcomps[j].site.toUpperCase()\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t//checks if level is in the grade range for selected location\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\tnewValue !== null &&\r\n\t\t\t\t\t\t\t\t\t\tcomps[j].grade.indexOf(value) !== -1\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t//checks if option is already included\r\n\t\t\t\t\t\t\t\t\t\tif (!temp.includes(options.locations[i])) {\r\n\t\t\t\t\t\t\t\t\t\t\ttemp.push(options.locations[i]);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toptions.locations = temp;\r\n\t\t\t\t\t\tif (choice.school) {\r\n\t\t\t\t\t\t\t//getting school id for chosen school\r\n\t\t\t\t\t\t\tlet id = choice.school.value;\r\n\r\n\t\t\t\t\t\t\t//checking if school is able to sign up for masters\r\n\t\t\t\t\t\t\tfor (const option in masters.teams) {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tmasters.teams[option].grade === newValue.value &&\r\n\t\t\t\t\t\t\t\t\tmasters.teams[option].schoolID === id\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\toptions.locations.push({\r\n\t\t\t\t\t\t\t\t\t\tvalue: \"Masters\",\r\n\t\t\t\t\t\t\t\t\t\tlabel: \"Masters\",\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetChoice((prevState) => ({\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tlev: null,\r\n\t\t\t\t\t\t\tloc: null,\r\n\t\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//resets the available locations if field is cleared\r\n\t\t\t\t\t\toptions.locations = locals;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"school\":\r\n\t\t\t\t\tif (newValue != null) {\r\n\t\t\t\t\t\tsetChoice((prevState) => ({\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tschool: newValue,\r\n\t\t\t\t\t\t\tloc: null,\r\n\t\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//deletes any masters in location options \"reseting options\"\r\n\t\t\t\t\t\toptions.locations = options.locations.filter(\r\n\t\t\t\t\t\t\t(value, index, arr) => {\r\n\t\t\t\t\t\t\t\treturn arr[index].value !== \"Masters\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t//getting school id for chosen school\r\n\t\t\t\t\t\tlet id = newValue.value;\r\n\r\n\t\t\t\t\t\t//checking if school is able to sign up for masters\r\n\t\t\t\t\t\tif (choice.lev !== null) {\r\n\t\t\t\t\t\t\tfor (const option in masters.teams) {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tmasters.teams[option].grade === choice.lev.value &&\r\n\t\t\t\t\t\t\t\t\tmasters.teams[option].schoolID === id\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\toptions.locations.push({\r\n\t\t\t\t\t\t\t\t\t\tvalue: \"Masters\",\r\n\t\t\t\t\t\t\t\t\t\tlabel: \"Masters\",\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//deletes any masters in location options \"reseting options\"\r\n\t\t\t\t\t\toptions.locations = options.locations.filter(\r\n\t\t\t\t\t\t\t(value, index, arr) => {\r\n\t\t\t\t\t\t\t\treturn arr[index].value !== \"Masters\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tsetChoice((prevState) => ({\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tschool: null,\r\n\t\t\t\t\t\t\tloc: null,\r\n\t\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"general\":\r\n\t\t\t\t\tsetChoice((prevState) => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t[field]: newValue,\r\n\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(newValue, type);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[choice, comps, masters, setChoice, locals]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// setting values if redirected from competition calendar\r\n\t\tif (\r\n\t\t\thistory.location.state !== null &&\r\n\t\t\thistory.location.state !== undefined &&\r\n\t\t\t!stated\r\n\t\t) {\r\n\t\t\tif (\r\n\t\t\t\thistory.location.state.level !== null &&\r\n\t\t\t\thistory.location.state.level !== undefined\r\n\t\t\t) {\r\n\t\t\t\tonChange(history.location.state.level, \"level\", \"lev\");\r\n\t\t\t\tif (\r\n\t\t\t\t\thistory.location.state.location !== null &&\r\n\t\t\t\t\thistory.location.state.location !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\tonChange(\r\n\t\t\t\t\t\thistory.location.state.location.replace(/\\w\\S*/g, (w) =>\r\n\t\t\t\t\t\t\tw.replace(/^\\w/, (c) => c.toUpperCase())\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"general\",\r\n\t\t\t\t\t\t\"loc\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tsetStated(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Deletes the state so it doesn't keep the state after a redirect\r\n\t\tdelete history.location.state;\r\n\t\thistory.replace({ ...history.location, state: null });\r\n\r\n\t\tgetComps(\"competitions\").then((result) => {\r\n\t\t\tif (result !== undefined) {\r\n\t\t\t\tsetComps(result[0]);\r\n\t\t\t\tsetMasters(result[1]);\r\n\r\n\t\t\t\tlet temp = options.locations;\r\n\r\n\t\t\t\t//filters the options based on the currently available competitions\r\n\t\t\t\tif (result[0] !== null && result[0] !== undefined) {\r\n\t\t\t\t\tfor (const i in temp) {\r\n\t\t\t\t\t\tlet test = false;\r\n\t\t\t\t\t\tfor (const j in result[0]) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\ttemp[i].value.toUpperCase() === result[0][j].site.toUpperCase()\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\ttest = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// TODO: find another way to do this without warnings\r\n\t\t\t\t\t\tif (!test) {\r\n\t\t\t\t\t\t\tconst ops = options.locations.filter((value, index, arr) => {\r\n\t\t\t\t\t\t\t\tif (arr[index].value !== temp[i].value) return value;\r\n\t\t\t\t\t\t\t\telse return;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\toptions.locations = ops;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsessionStorage.setItem(\r\n\t\t\t\t\t\t\"filteredComps\",\r\n\t\t\t\t\t\tJSON.stringify(options.locations)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (locals === null) setLocals(options.locations);\r\n\t\t});\r\n\t}, [locals, onChange, history.location.state, stated]);\r\n\r\n\t//checks data to make sure things are filled out, and redirects to the goole form with prefilled info.\r\n\tconst onSubmit = () => {\r\n\t\tconst error = setError(choice);\r\n\r\n\t\tif (!error) {\r\n\t\t\tcompId = setCompID(choice);\r\n\t\t\tsetURL(choice);\r\n\t\t\thistory.push({\r\n\t\t\t\tpathname: `/team-register/confirm/`,\r\n\t\t\t\tstate: {\r\n\t\t\t\t\tkey: url,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//sets the competition id\r\n\tconst setCompID = (choice) => {\r\n\t\t//gets the proper grade level displays\r\n\t\tlet id = null;\r\n\t\tcomp_loop: for (const i in comps) {\r\n\t\t\tconst grade = comps[i].grade.substr(1);\r\n\t\t\tlet grades = [];\r\n\t\t\tfor (const item in options.level) {\r\n\t\t\t\tfor (const char in grade) {\r\n\t\t\t\t\tif (options.level[item].value === grade[char]) {\r\n\t\t\t\t\t\tgrades.push(options.level[item].value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (const j in grades) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tgrades[j] === choice.lev.value &&\r\n\t\t\t\t\tchoice.loc.value.toUpperCase() === comps[i].site.toUpperCase()\r\n\t\t\t\t) {\r\n\t\t\t\t\tid = i;\r\n\t\t\t\t\tbreak comp_loop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn id;\r\n\t};\r\n\r\n\t// Setting error if something is not filled out.\r\n\tconst setError = (choice) => {\r\n\t\tlet err = false;\r\n\t\tfor (const item in choice) {\r\n\t\t\tif ((choice[item] === null || choice[item] === \"\") && item !== \"email\") {\r\n\t\t\t\tsetChoice((prevState) => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t}));\r\n\t\t\t\terr = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn err;\r\n\t};\r\n\r\n\t// Sets iframe url for filling google form\r\n\tconst setURL = (choice) => {\r\n\t\tconst uid = auth.currentUser.uid;\r\n\t\turl = `https://docs.google.com/forms/d/e/1FAIpQLSf8UTjphTqcOHwmrdGEG8Jsbjz4eVz7d6XVlgW7AlnM28vq_g/viewform?usp=pp_url&entry.1951055040=${\r\n\t\t\tchoice.coach\r\n\t\t}&entry.74786596=${uid}&entry.62573940=${\r\n\t\t\tchoice.loc.value\r\n\t\t}&entry.1929366142=${choice.lev.value}&entry.680121242=${\r\n\t\t\tchoice.team.value\r\n\t\t}&entry.641937550=${choice.indiv.value}&entry.1389254068=${\r\n\t\t\tchoice.school.value +\r\n\t\t\t\" \" +\r\n\t\t\tchoice.school.label +\r\n\t\t\t\" - \" +\r\n\t\t\tchoice.school.div\r\n\t\t}&entry.1720714498=${\r\n\t\t\tuser.email + \", \" + choice.email\r\n\t\t}&entry.1445326839=${compId}`;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<BasicPage>\r\n\t\t\t<h1>Team Registration</h1>\r\n\t\t\t<p>\r\n\t\t\t\t<b>Rules for Individuals:</b> Any student may compete as an individual\r\n\t\t\t\tin their grade level or any higher grade; however, a student may compete\r\n\t\t\t\tas a team at one grade level only. This applies to both Championships\r\n\t\t\t\tand Masters.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tAlso note each team includes four students in addition to two alternates\r\n\t\t\t\tper school that can compete as individuals. So when registering n teams,\r\n\t\t\t\tyou get to bring 4n+2 students along. These students don't need to be\r\n\t\t\t\tregistered as individuals separately.\r\n\t\t\t</p>\r\n\t\t\t<TeamForm noValidate autoComplete=\"off\">\r\n\t\t\t\t<Auto\r\n\t\t\t\t\ttitle=\"Competition Level\"\r\n\t\t\t\t\toptions={options.level}\r\n\t\t\t\t\ttext=\"Select Your Grade Level\"\r\n\t\t\t\t\tonChange={(event, newValue) => onChange(newValue, \"level\", \"\")}\r\n\t\t\t\t\twidth={longest}\r\n\t\t\t\t\tvalue={choice.lev}\r\n\t\t\t\t\terror={choice.error}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Auto\r\n\t\t\t\t\ttitle=\"School Registering\"\r\n\t\t\t\t\toptions={options.school}\r\n\t\t\t\t\ttext=\"Select Your School\"\r\n\t\t\t\t\tonChange={(event, newValue) => onChange(newValue, \"school\", \"\")}\r\n\t\t\t\t\twidth={longest}\r\n\t\t\t\t\tvalue={choice.school}\r\n\t\t\t\t\terror={choice.error}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Auto\r\n\t\t\t\t\ttitle=\"Competition Location\"\r\n\t\t\t\t\tdisabled={options.locations.length === 0}\r\n\t\t\t\t\toptions={options.locations}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\toptions.locations.length === 0\r\n\t\t\t\t\t\t\t? \"No locations for this competition level.\"\r\n\t\t\t\t\t\t\t: \"Select Competition Location\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonChange={(event, newValue) => onChange(newValue, \"general\", \"loc\")}\r\n\t\t\t\t\twidth={longest}\r\n\t\t\t\t\tvalue={choice.loc}\r\n\t\t\t\t\terror={choice.error}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Auto\r\n\t\t\t\t\ttitle=\"Number Teams\"\r\n\t\t\t\t\toptions={options.numteam}\r\n\t\t\t\t\ttext=\"Select Number of Teams\"\r\n\t\t\t\t\tonChange={(event, newValue) => onChange(newValue, \"general\", \"team\")}\r\n\t\t\t\t\twidth={longest}\r\n\t\t\t\t\tvalue={choice.team}\r\n\t\t\t\t\terror={choice.error}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Auto\r\n\t\t\t\t\ttitle=\"Number Individuals\"\r\n\t\t\t\t\toptions={options.numteam}\r\n\t\t\t\t\ttext=\"Select Number of Individuals\"\r\n\t\t\t\t\tonChange={(event, newValue) => onChange(newValue, \"general\", \"indiv\")}\r\n\t\t\t\t\twidth={longest}\r\n\t\t\t\t\tvalue={choice.indiv}\r\n\t\t\t\t\terror={choice.error}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t<Grid item sm={3}>\r\n\t\t\t\t\t\t<p>Coach Name(s)</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\terror={choice.error && choice.coach === \"\"}\r\n\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\tchoice.error && choice.coach === \"\"\r\n\t\t\t\t\t\t\t\t? \"Please fill out to continue\"\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel=\"Coach Name(s)\"\r\n\t\t\t\t\t\tvalue={choice.coach}\r\n\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\tonChange(event.target.value, \"general\", \"coach\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: longest,\r\n\t\t\t\t\t\t\tmaxWidth: \"65vw\",\r\n\t\t\t\t\t\t\tmarginRight: 0,\r\n\t\t\t\t\t\t}}></TextField>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t<Grid item sm={3}>\r\n\t\t\t\t\t\t<p>Additional Emails</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\terror={choice.error && choice.email === \"\"}\r\n\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\tchoice.error && choice.email === \"\"\r\n\t\t\t\t\t\t\t\t? \"Please fill out to continue\"\r\n\t\t\t\t\t\t\t\t: \"Example: notyour@email.com, another@coach.com\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tlabel=\"Other Emails\"\r\n\t\t\t\t\t\tvalue={choice.email}\r\n\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\tonChange(event.target.value, \"general\", \"email\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: longest,\r\n\t\t\t\t\t\t\tmaxWidth: \"65vw\",\r\n\t\t\t\t\t\t\tmarginRight: 0,\r\n\t\t\t\t\t\t}}></TextField>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item sm={3}></Grid>\r\n\t\t\t\t\t<Grid item sm={3} width={longest}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\t\t\tstyle={{ background: \"#3f51b5\" }}>\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</TeamForm>\r\n\t\t\t<p>\r\n\t\t\t\tA school's division level is assigned based on past performance at Math\r\n\t\t\t\tis Cool contests. For more details and a current list of schools and\r\n\t\t\t\tassignments, see&nbsp;\r\n\t\t\t\t<a href={divisions} target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\t\t2018-19 Divisions\r\n\t\t\t\t</a>\r\n\t\t\t\t.\r\n\t\t\t</p>\r\n\t\t</BasicPage>\r\n\t);\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getWeb.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\FrontBack.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\CoachTools.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Admin.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignUp.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ProfilePage.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ForgotPass.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignIn.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Names.js",["171"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { getDocs, collection } from \"@firebase/firestore\";\r\nimport { auth, db } from \"../fire\";\r\n\r\nimport { NamesOne, NamesTwo, NamesThree } from \"../styledComps\";\r\nimport Table from \"../custom/Table\";\r\n\r\nexport default function Names() {\r\n\t// Used to store the schools the current user has registered for\r\n\tlet schoolData = [];\r\n\t// Registration data that current user has submitted\r\n\tconst [compData, setComp] = useState([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [selected, setSelected] = useState(0);\r\n\t// Cached competition data\r\n\tconst [loadedComps, setLoadedComps] = useState([]);\r\n\t// Options object\r\n\tconst [options] = useState(JSON.parse(sessionStorage.getItem(\"options\")));\r\n\r\n\t// Returns the values of # individuals and # teams for each competition\r\n\t// where the current user signed up the chosen school\r\n\tconst getComps = async () => {\r\n\t\ttry {\r\n\t\t\tconst comps = await getDocs(collection(db, \"competitions\"));\r\n\t\t\tlet competitions = [];\r\n\t\t\tif (comps.empty) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tcomps.forEach((doc) => {\r\n\t\t\t\t\tconst register = doc.data().registration;\r\n\r\n\t\t\t\t\t//gets the proper grade level displays\r\n\t\t\t\t\tconst grade = doc.data().grade.substr(1);\r\n\t\t\t\t\tlet grades = [];\r\n\t\t\t\t\tfor (const item in options.level) {\r\n\t\t\t\t\t\tfor (const char in grade) {\r\n\t\t\t\t\t\t\tif (options.level[item].value === grade[char]) {\r\n\t\t\t\t\t\t\t\tgrades.push(options.level[item].label);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst title = `Grade ${\r\n\t\t\t\t\t\tgrades.length > 2 ? grades.join(\", \") : grades.join(\" and \")\r\n\t\t\t\t\t} Competition on ${doc.data().compDate}`;\r\n\r\n\t\t\t\t\t//adds the competitions that current user has signed up for\r\n\t\t\t\t\tfor (const sign in register) {\r\n\t\t\t\t\t\tif (register[sign].uid === auth.currentUser.uid) {\r\n\t\t\t\t\t\t\tcompetitions.push({\r\n\t\t\t\t\t\t\t\tregID: sign,\r\n\t\t\t\t\t\t\t\tcompID: doc.id,\r\n\t\t\t\t\t\t\t\ttitle: title,\r\n\t\t\t\t\t\t\t\tteams: register[sign].numTeams,\r\n\t\t\t\t\t\t\t\tindiv: register[sign].numIndividuals,\r\n\t\t\t\t\t\t\t\tschoolID: register[sign].schoolID,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn competitions;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\"ERROR:\", err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//gets registrations\r\n\t\tif (compData.length === 0) {\r\n\t\t\tgetComps().then((vals) => {\r\n\t\t\t\tfor (const val in vals) {\r\n\t\t\t\t\tif (vals[val] !== undefined) {\r\n\t\t\t\t\t\tsetComp((prevState) => [\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tregId: vals[val].regID,\r\n\t\t\t\t\t\t\t\tcompId: vals[val].compID,\r\n\t\t\t\t\t\t\t\ttitle: vals[val].title,\r\n\t\t\t\t\t\t\t\tteams: vals[val].teams,\r\n\t\t\t\t\t\t\t\tindivs: vals[val].indiv,\r\n\t\t\t\t\t\t\t\tschoolID: vals[val].schoolID,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t\t}\r\n\t}, [compData.length]);\r\n\r\n\t// Gets school names if :\r\n\t// not loading, hasn't already been loaded, and there are actually competitions\r\n\tif (!loading && schoolData.length === 0 && compData.length > 0) {\r\n\t\tfor (const item in compData) {\r\n\t\t\tfor (const option in options.school) {\r\n\t\t\t\tif (compData[item].schoolID === options.school[option].value) {\r\n\t\t\t\t\tschoolData.push(options.school[option].label);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<NamesOne>\r\n\t\t\t<NamesTwo>\r\n\t\t\t\t<NamesThree>\r\n\t\t\t\t\t{!loading && compData.length > 0 ? (\r\n\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\ttitle={compData[selected].title + \" for \" + schoolData[selected]}\r\n\t\t\t\t\t\t\tteams={compData[selected].teams}\r\n\t\t\t\t\t\t\tindividuals={compData[selected].indivs}\r\n\t\t\t\t\t\t\tid={compData[selected].compId}\r\n\t\t\t\t\t\t\tregId={compData[selected].regId}\r\n\t\t\t\t\t\t\tpage={selected}\r\n\t\t\t\t\t\t\tregisters={compData.length}\r\n\t\t\t\t\t\t\tchangePage={setSelected}\r\n\t\t\t\t\t\t\tcachedData={loadedComps}\r\n\t\t\t\t\t\t\tsetCachedData={setLoadedComps}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : !loading ? (\r\n\t\t\t\t\t\t<Typography style={{ opacity: \"50%\" }}>\r\n\t\t\t\t\t\t\tYou have no registrations.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ReactLoading\r\n\t\t\t\t\t\t\ttype=\"spinningBubbles\"\r\n\t\t\t\t\t\t\tcolor=\"#000\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"50px\", height: \"50px\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</NamesThree>\r\n\t\t\t</NamesTwo>\r\n\t\t</NamesOne>\r\n\t);\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Table.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getPage.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ImportContent.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\assets.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\AdminRoute.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\AddAdmin.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\MarkMasters.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\MastersTeams.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\Test.js",["172","173","174","175"],"import React, { useState } from \"react\";\r\nimport { Accord, BasicPage } from \"../styledComps\";\r\nimport Select from \"react-select\";\r\n\r\nimport ops from \"../back/options.json\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../fire\";\r\n\r\n// Add a new document in collection \"cities\"\r\n\r\nexport default function FlexLayoutGrid() {\r\n\tconst [state, setState] = useState(\"team\");\r\n\r\n\tconst options = [\r\n\t\t{ value: \"team\", label: \"Team\" },\r\n\t\t{ value: \"masters team\", label: \"Masters Team\" },\r\n\t];\r\n\r\n\tconst [thing, setThing] = useState(ops);\r\n\r\n\treturn (\r\n\t\t<BasicPage>\r\n\t\t\t<Select\r\n\t\t\t\tdefaultValue={state}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tsetState(event.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Accord key={1} title=\"Test\" content=\"Testing this\" />\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tconsole.log(thing);\r\n\t\t\t\t\t// setDoc(doc(db, \"web\", \"options\"), ops);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</BasicPage>\r\n\t);\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\DataTable.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageCompetitions.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\styledComps.js",["176"],"import styled from \"@mui/material/styles/styled\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport image from \"../assets/logo.5a82c15d88ad2d074447.png\";\r\n\r\nconst color = \"#3f51b5\";\r\nconst profCol = \"#\" + ((Math.random() * 0xffffff) << 0).toString(16);\r\n\r\n// nav bar base column style\r\nconst All = styled(\"div\")({\r\n\t\"& .MuiPaper-root\": {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\t\"& .MuiAccordion-root.Mui-expanded\": {\r\n\t\tmargin: \"0px\",\r\n\t},\r\n\t\"& .MuiButtonBase-root\": {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"left\",\r\n\t},\r\n\t\"& .MuiPaper-elevation1\": {\r\n\t\tboxShadow: \"none\",\r\n\t},\r\n\t\"& .MuiAccordion-root:before\": {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t},\r\n\t\"& .MuiButton-root\": {\r\n\t\tfontWeight: \"inherit\",\r\n\t},\r\n});\r\n\r\n// Team registration form\r\nconst TeamForm = styled(\"form\")(({ theme }) => ({\r\n\t\"& .MuiTextField-root\": {\r\n\t\tmargin: theme.spacing(1),\r\n\t\twidth: \"25ch\",\r\n\t},\r\n}));\r\n\r\n// for default home page's\r\nconst LayerOne = styled(\"div\")({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"row\",\r\n});\r\n\r\n// for default home page's\r\nconst LayerTwo = styled(\"div\")({\r\n\tmargin: \"2%\",\r\n\tboxShadow:\r\n\t\t\"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\",\r\n\twidth: \"100%\",\r\n\tminHeight: \"80vh\",\r\n\tmaxHeight: \"100%\",\r\n\tmaxWidth: \"100%\",\r\n});\r\n\r\n// for default home page's\r\nconst LayerThree = styled(\"div\")({\r\n\tmarginLeft: \"1%\",\r\n\tmarginRight: \"1%\",\r\n\tmarginBottom: \"1%\",\r\n\tminHeight: \"80vh\",\r\n});\r\n\r\n// image column on home\r\nconst ImageSet = styled(\"div\")({\r\n\tmarginRight: \"2%\",\r\n\tmarginTop: \"2%\",\r\n\tmarginBottom: \"2%\",\r\n\twidth: \"20%\",\r\n\ttextAlign: \"center\",\r\n});\r\n\r\n// image on home\r\nconst Image = styled(\"img\")({\r\n\twidth: \"100%\",\r\n\tborderRadius: \"5px\",\r\n\tmarginBottom: \"1%\",\r\n});\r\n\r\n// locations map\r\nconst Map = styled(\"img\")({\r\n\tmarginTop: \"2%\",\r\n\tpaddingBottom: \"1%\",\r\n\tmaxHeight: \"100%\",\r\n\tmaxWidth: \"100%\",\r\n});\r\n\r\n// profile root div style\r\nconst Paper = styled(\"div\")(({ theme }) => ({\r\n\tmarginTop: theme.spacing(8),\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\talignItems: \"center\",\r\n}));\r\n\r\n// forgot password form style\r\nconst Form = styled(\"form\")(({ theme }) => ({\r\n\twidth: \"100%\",\r\n\tmarginTop: theme.spacing(1),\r\n}));\r\n\r\n// submit button style\r\nconst Submit = styled(Button)(({ theme }) => ({\r\n\tmargin: theme.spacing(3, 0, 2),\r\n\tbackground: color,\r\n}));\r\n\r\n// profile icon for profile page\r\nconst ProfileAvatar = styled(Avatar, {\r\n\tshouldForwardProp: (prop) => prop !== \"size\",\r\n})(({ size, theme }) => ({\r\n\tcolor: \"black\",\r\n\tbackgroundColor: profCol,\r\n\t\"&:hover\": {\r\n\t\tfilter: \"brightness(0.65)\",\r\n\t\tcursor: \"pointer\",\r\n\t},\r\n\tmargin: theme.spacing(1),\r\n\twidth: size,\r\n\theight: size,\r\n}));\r\n\r\n// lock icon for sign in/up\r\nconst LockAvatar = styled(Avatar)(({ theme }) => ({\r\n\tmargin: theme.spacing(1),\r\n\tbackgroundColor: theme.palette.secondary.main,\r\n}));\r\n\r\n// header for nav bar columns\r\nconst Header = styled(Typography)({\r\n\tdisplay: \"flex\",\r\n\tcolor: \"white\",\r\n\tjustifyContent: \"center\",\r\n\tpaddingTop: \"5px\",\r\n\t\"@media screen and (min-width: 420px)\": {\r\n\t\tfontSize: \"15px\",\r\n\t},\r\n\t\"@media screen and (max-width: 420px)\": {\r\n\t\tfontSize: \"3.5vw\",\r\n\t},\r\n});\r\n\r\n// styled link\r\nconst Linked = styled(Link)({\r\n\tcolor: \"white\",\r\n\tborder: \"currentColor\",\r\n\tborderRadius: \"0\",\r\n\ttextDecoration: \"none\",\r\n\tWebkitTextStroke: \"0.25px\",\r\n\tWebkitTextStrokeColor: \"black\",\r\n});\r\n\r\n// button used for the nav bar\r\nconst NavButton = styled(Button)({\r\n\tjustifyContent: \"left\",\r\n\ttextTransform: \"capitalize\",\r\n\ttextDecoration: \"none\",\r\n\tborder: \"currentColor\",\r\n\tcolor: \"white\",\r\n\tborderRadius: \"0\",\r\n\tfontSize: \"15px\",\r\n\tpadding: \"10px\",\r\n\tWebkitTextStroke: \"0.25px\",\r\n\tWebkitTextStrokeColor: \"black\",\r\n\t\"&:hover\": {\r\n\t\tbackgroundColor: \"#2a3576\",\r\n\t\tfilter: \"brightness(0.9)\",\r\n\t\ttransition:\r\n\t\t\t\"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n\t},\r\n\t\"@media screen and (min-width: 420px)\": {\r\n\t\tfontSize: \"15px\",\r\n\t},\r\n\t\"@media screen and (max-width: 420px)\": {\r\n\t\tfontSize: \"3.5vw\",\r\n\t},\r\n});\r\n\r\n// used for the accordion summary in FrontBack\r\nconst Summary = styled(AccordionSummary)({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\ttextAlign: \"center\",\r\n\ttextTransform: \"capitalize\",\r\n\ttextDecoration: \"none\",\r\n\tcolor: \"white\",\r\n\tborderRadius: \"0\",\r\n\tfontSize: \"15px\",\r\n\tpadding: \"10px\",\r\n\tWebkitTextStroke: \"0.25px\",\r\n\tWebkitTextStrokeColor: \"black\",\r\n\t\"&:hover\": {\r\n\t\tbackgroundColor: \"#2a3576\",\r\n\t\tfilter: \"brightness(0.9)\",\r\n\t\ttransition:\r\n\t\t\t\"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n\t},\r\n\t\"@media screen and (min-width: 420px)\": {\r\n\t\tfontSize: \"15px\",\r\n\t},\r\n\t\"@media screen and (max-width: 420px)\": {\r\n\t\tfontSize: \"3.5vw\",\r\n\t},\r\n});\r\n\r\n// layer one of names div stack\r\nconst NamesOne = styled(\"div\")({\r\n\twidth: \"100vw\",\r\n\tminHeight: \"80vh\",\r\n\tdisplay: \"flex\",\r\n\ttextAlign: \"center\",\r\n\tjustifyContent: \"center\",\r\n\tflexWrap: \"wrap\",\r\n});\r\n\r\n// layer two of names div stack\r\nconst NamesTwo = styled(\"div\")({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"row\",\r\n\tpaddingTop: \"2%\",\r\n\tpaddingBottom: \"2%\",\r\n});\r\n\r\n// layer three of names div stack\r\nconst NamesThree = styled(\"div\")({\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"center\",\r\n\twidth: \"100vw\",\r\n\tborderRadius: \"4px\",\r\n\tmarginRight: \"2%\",\r\n\tmarginLeft: \"2%\",\r\n\tmarginBottom: \"1%\",\r\n\tboxShadow:\r\n\t\t\"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\",\r\n});\r\n\r\nconst FAQHead = styled(Typography)(({ theme }) => ({\r\n\tfontSize: theme.typography.pxToRem(15),\r\n\tfontWeight: theme.typography.fontWeightRegular,\r\n}));\r\n\r\nconst Frame = styled(\"iframe\")({\r\n\twidth: \"100%\",\r\n\theight: \"100vh\",\r\n\tframeBorder: \"0\",\r\n\tmarginHeight: \"0\",\r\n\tmarginWidth: \"0\",\r\n});\r\n\r\nconst DefaultProfile = styled(AccountCircle)({\r\n\tcolor: \"#c6c6c6\",\r\n\twidth: \"40px\",\r\n\theight: \"40px\",\r\n\t\"&:hover\": {\r\n\t\tfilter: \"brightness(0.65)\",\r\n\t\tcursor: \"pointer\",\r\n\t},\r\n});\r\n\r\nconst ClosedNav = styled(\"div\")({\r\n\ttransition: \"margin-left 450ms cubic-bezier(0.23, 1, 0.32, 1)\",\r\n\tbackground: \"#3f51b5\",\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"row\",\r\n\tzIndex: \"1300\",\r\n\t\"&::-webkit-scrollbar\": {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n});\r\n\r\nconst FullNav = styled(\"div\")({\r\n\tposition: \"-webkit-sticky\",\r\n\tposition: \"sticky\",\r\n\ttop: \"-1px\",\r\n\tzIndex: \"5\",\r\n});\r\n\r\nconst Title = styled(Typography)({\r\n\tcolor: \"white\",\r\n\tdisplay: \"flex\",\r\n\talignItems: \"center\",\r\n\tfontSize: \"2.5rem\",\r\n\tfontFamily: \"math\",\r\n});\r\n\r\nconst NavOptions = styled(\"div\")({\r\n\tbackground: `url(${image}) right center/contain no-repeat #3f51b5`,\r\n\theight: \"100%\",\r\n\toverflowX: \"hidden\",\r\n\toverflowY: \"scroll\",\r\n\tdisplay: \"flex\",\r\n\tpadding: \"10px\",\r\n\tbackgroundColor: \"#3f51b5\",\r\n\tscrollbarWidth: \"none\",\r\n\t\"&::-webkit-scrollbar\": {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n});\r\n\r\nconst TableTop = styled(\"div\")({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\twidth: \"100%\",\r\n\tpadding: \"10px\",\r\n});\r\n\r\nconst TableDiv = styled(\"div\")({\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\tflexWrap: \"wrap\",\r\n\tjustifyContent: \"space-between\",\r\n\talignItems: \"center\",\r\n\tmarginTop: \"10px\",\r\n});\r\n\r\nconst Td = styled(\"td\")({\r\n\tborder: \"1px solid black\",\r\n\tborderCollapse: \"collapse\",\r\n\tpaddingLeft: \"5px\",\r\n});\r\n\r\nconst Th = styled(\"th\")({\r\n\tborder: \"1px solid black\",\r\n\tborderCollapse: \"collapse\",\r\n});\r\n\r\n// Button that links to a page\r\nconst LinkButton = (props) => {\r\n\treturn (\r\n\t\t<Linked to={props.to} onClick={props.onClick} style={props.sx}>\r\n\t\t\t{props.regBut === undefined ? (\r\n\t\t\t\tprops.avatar === undefined ? (\r\n\t\t\t\t\t<NavButton>{props.text}</NavButton>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<DefaultProfile />\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<Button style={{ color: \"black\" }}>{props.text}</Button>\r\n\t\t\t)}\r\n\t\t</Linked>\r\n\t);\r\n};\r\n\r\nconst Accord = (props) => {\r\n\treturn (\r\n\t\t<Accordion>\r\n\t\t\t<AccordionSummary expandIcon={<ExpandMore />} id={props.title}>\r\n\t\t\t\t<FAQHead>{props.title}</FAQHead>\r\n\t\t\t</AccordionSummary>\r\n\t\t\t<AccordionDetails>\r\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: props.content }}></span>\r\n\t\t\t</AccordionDetails>\r\n\t\t</Accordion>\r\n\t);\r\n};\r\n\r\n/**\r\n * @param props title, options, text, onChange, width, value, error\r\n */\r\nconst Auto = (props) => {\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t<Grid item sm={3}>\r\n\t\t\t\t<p>{props.title}</p>\r\n\t\t\t</Grid>\r\n\t\t\t<Autocomplete\r\n\t\t\t\toptions={props.options ? props.options.map((option) => option) : []}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t\tfreeSolo\r\n\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\terror={props.error && (props.value === null || props.value === \"\")}\r\n\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\tprops.error && (props.value === null || props.value === \"\")\r\n\t\t\t\t\t\t\t\t? \"Please fill out to continue.\"\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel={props.text}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t...props.style,\r\n\t\t\t\t\t\t\twidth: props.width,\r\n\t\t\t\t\t\t\tmaxWidth: \"65vw\",\r\n\t\t\t\t\t\t\tmarginRight: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n * @param props title, options, value, onChange, disabled, error, helperText, text, style\r\n */\r\nconst Drop = (props) => {\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t<Grid item sm={3}>\r\n\t\t\t\t<p>{props.title}</p>\r\n\t\t\t</Grid>\r\n\t\t\t<Autocomplete\r\n\t\t\t\toptions={props.options ? props.options.map((option) => option) : []}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t\tfreeSolo\r\n\t\t\t\tonInputChange={props.onInputChange}\r\n\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\terror={props.error}\r\n\t\t\t\t\t\thelperText={props.helperText}\r\n\t\t\t\t\t\tlabel={props.text}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tstyle={props.style}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} props open, handleClose, type, message\r\n * @returns\r\n */\r\nconst Alerts = (props) => {\r\n\treturn (\r\n\t\t<Snackbar\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={props.handleClose}\r\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\r\n\t\t\t<Alert severity={props.type} variant=\"filled\">\r\n\t\t\t\t{props.message}\r\n\t\t\t</Alert>\r\n\t\t</Snackbar>\r\n\t);\r\n};\r\n\r\n// website default page style\r\nconst BasicPage = (props) => {\r\n\treturn (\r\n\t\t<LayerOne>\r\n\t\t\t<LayerTwo>\r\n\t\t\t\t<LayerThree>{props.children}</LayerThree>\r\n\t\t\t</LayerTwo>\r\n\t\t</LayerOne>\r\n\t);\r\n};\r\n\r\n// homepage default page style\r\nconst Page = (props) => {\r\n\treturn (\r\n\t\t<BasicPage>\r\n\t\t\t<h1 style={{ fontStyle: \"italic\" }}>{props.title}</h1>\r\n\t\t\t<div dangerouslySetInnerHTML={{ __html: props.page }}></div>\r\n\t\t</BasicPage>\r\n\t);\r\n};\r\n\r\n// team registration google form\r\nconst GoogleForm = (props) => {\r\n\treturn (\r\n\t\t<Frame id=\"frame\" title=\"register\" src={props.location.state.key}>\r\n\t\t\tLoading…\r\n\t\t</Frame>\r\n\t);\r\n};\r\n\r\n// 404 page\r\nconst NotFound = () => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\twidth: \"100vw\",\r\n\t\t\t\theight: \"100vh\",\r\n\t\t\t\tbackground: \"#121212\",\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t}}>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"bg\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundImage: \"url(http://i.giphy.com/l117HrgEinjIA.gif)\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\t\tmixBlendMode: \"overlay\",\r\n\t\t\t\t}}></div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tfontFamily: \"Alfa Slab One\",\r\n\t\t\t\t\tfontSize: \"25vh\",\r\n\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tbackgorundPosition: \"center\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t}}>\r\n\t\t\t\t404\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Profile = (props) => {\r\n\tconst username = props.username;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginTop: \"10px\",\r\n\t\t\t\tmarginBottom: \"10px\",\r\n\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\tmarginRight: \"10px\",\r\n\t\t\t}}>\r\n\t\t\t{username !== null && username !== undefined ? (\r\n\t\t\t\t<ProfileAvatar size=\"40px\">\r\n\t\t\t\t\t<LinkButton\r\n\t\t\t\t\t\tregBut={true}\r\n\t\t\t\t\t\tto=\"/profile\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.setOpen(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttext={username\r\n\t\t\t\t\t\t\t.match(/(\\b\\S)?/g)\r\n\t\t\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t\t\t.toUpperCase()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ProfileAvatar>\r\n\t\t\t) : (\r\n\t\t\t\t<LinkButton\r\n\t\t\t\t\tto=\"/profile\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.setOpen(false);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tavatar={true}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport {\r\n\tcolor,\r\n\tAll,\r\n\tTeamForm,\r\n\tLayerOne,\r\n\tLayerTwo,\r\n\tLayerThree,\r\n\tImageSet,\r\n\tImage,\r\n\tMap,\r\n\tPaper,\r\n\tForm,\r\n\tSubmit,\r\n\tProfileAvatar,\r\n\tLockAvatar,\r\n\tHeader,\r\n\tLinked,\r\n\tNavButton,\r\n\tSummary,\r\n\tNamesOne,\r\n\tNamesTwo,\r\n\tNamesThree,\r\n\tFAQHead,\r\n\tFrame,\r\n\tClosedNav,\r\n\tFullNav,\r\n\tTitle,\r\n\tNavOptions,\r\n\tTableDiv,\r\n\tTableTop,\r\n\tTd,\r\n\tTh,\r\n\tLinkButton,\r\n\tAccord,\r\n\tAuto,\r\n\tBasicPage,\r\n\tPage,\r\n\tGoogleForm,\r\n\tNotFound,\r\n\tProfile,\r\n\tDrop,\r\n\tAlerts,\r\n};\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageHome.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageFAQ.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManagePastTests.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageSites.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":309,"column":14,"nodeType":"183","messageId":"184","endLine":309,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":322,"column":5,"nodeType":"187","endLine":322,"endColumn":55,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":92,"column":5,"nodeType":"187","endLine":92,"endColumn":22,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":13},{"ruleId":"191","severity":1,"message":"195","line":8,"column":15,"nodeType":"193","messageId":"194","endLine":8,"endColumn":21},{"ruleId":"191","severity":1,"message":"196","line":9,"column":10,"nodeType":"193","messageId":"194","endLine":9,"endColumn":12},{"ruleId":"191","severity":1,"message":"197","line":21,"column":16,"nodeType":"193","messageId":"194","endLine":21,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":291,"column":2,"nodeType":"200","messageId":"201","endLine":291,"endColumn":10},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["204"],"React Hook useEffect has a missing dependency: 'getComps'. Either include it or remove the dependency array.",["205"],"no-unused-vars","'doc' is defined but never used.","Identifier","unusedVar","'setDoc' is defined but never used.","'db' is defined but never used.","'setThing' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [locals, onChange, history.location.state, stated, history]",{"range":"210","text":"211"},"Update the dependencies array to be: [compData.length, getComps]",{"range":"212","text":"213"},[8863,8913],"[locals, onChange, history.location.state, stated, history]",[2779,2796],"[compData.length, getComps]"]