[{"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js":"1","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js":"2","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js":"3","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js":"4","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js":"5","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js":"6","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js":"7","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js":"8","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js":"9","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js":"10","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js":"11","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js":"12","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\loginContext.js":"13","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\useLoginState.js":"14","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js":"15","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js":"16","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js":"17","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getWeb.js":"18","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\FrontBack.js":"19","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\CoachTools.js":"20","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Admin.js":"21","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignUp.js":"22","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ProfilePage.js":"23","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ForgotPass.js":"24","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignIn.js":"25","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Names.js":"26","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Table.js":"27","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getPage.js":"28","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ImportContent.js":"29","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\assets.js":"30","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\AdminRoute.js":"31","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\AddAdmin.js":"32","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\MarkMasters.js":"33","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\MastersTeams.js":"34","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\Test.js":"35","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\DataTable.js":"36","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageCompetitions.js":"37","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\styledComps.js":"38"},{"size":230,"mtime":1632696575420,"results":"39","hashOfConfig":"40"},{"size":5073,"mtime":1633467051468,"results":"41","hashOfConfig":"40"},{"size":796,"mtime":1633467716840,"results":"42","hashOfConfig":"40"},{"size":615,"mtime":1633466158202,"results":"43","hashOfConfig":"40"},{"size":2580,"mtime":1633640614825,"results":"44","hashOfConfig":"40"},{"size":228,"mtime":1633838327764,"results":"45","hashOfConfig":"40"},{"size":508,"mtime":1633078031561,"results":"46","hashOfConfig":"40"},{"size":568,"mtime":1633078065673,"results":"47","hashOfConfig":"40"},{"size":2807,"mtime":1633453124745,"results":"48","hashOfConfig":"40"},{"size":1350,"mtime":1633077587442,"results":"49","hashOfConfig":"40"},{"size":502,"mtime":1633078053631,"results":"50","hashOfConfig":"40"},{"size":501,"mtime":1633638005738,"results":"51","hashOfConfig":"40"},{"size":122,"mtime":1626722215027,"results":"52","hashOfConfig":"40"},{"size":419,"mtime":1626722250498,"results":"53","hashOfConfig":"40"},{"size":2404,"mtime":1633837218575,"results":"54","hashOfConfig":"40"},{"size":16895,"mtime":1633836075297,"results":"55","hashOfConfig":"40"},{"size":1519,"mtime":1633466015387,"results":"56","hashOfConfig":"40"},{"size":769,"mtime":1633464959865,"results":"57","hashOfConfig":"40"},{"size":2676,"mtime":1633451434014,"results":"58","hashOfConfig":"40"},{"size":420,"mtime":1633046412362,"results":"59","hashOfConfig":"40"},{"size":669,"mtime":1633046110871,"results":"60","hashOfConfig":"40"},{"size":6740,"mtime":1633465916358,"results":"61","hashOfConfig":"40"},{"size":1689,"mtime":1633465446921,"results":"62","hashOfConfig":"40"},{"size":2157,"mtime":1633465982518,"results":"63","hashOfConfig":"40"},{"size":3751,"mtime":1633837323832,"results":"64","hashOfConfig":"40"},{"size":4141,"mtime":1633467205771,"results":"65","hashOfConfig":"40"},{"size":6037,"mtime":1633835333456,"results":"66","hashOfConfig":"40"},{"size":173,"mtime":1631137783502,"results":"67","hashOfConfig":"40"},{"size":4091,"mtime":1633467707746,"results":"68","hashOfConfig":"40"},{"size":623,"mtime":1633453873993,"results":"69","hashOfConfig":"40"},{"size":1845,"mtime":1633464747353,"results":"70","hashOfConfig":"40"},{"size":1938,"mtime":1633467686800,"results":"71","hashOfConfig":"40"},{"size":4805,"mtime":1633836204384,"results":"72","hashOfConfig":"40"},{"size":5989,"mtime":1633466294970,"results":"73","hashOfConfig":"40"},{"size":597,"mtime":1633078133989,"results":"74","hashOfConfig":"40"},{"size":385,"mtime":1633836704081,"results":"75","hashOfConfig":"40"},{"size":473,"mtime":1633836322088,"results":"76","hashOfConfig":"40"},{"size":13413,"mtime":1633836964767,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"s4ayer",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js",[],["159","160"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js",["161"],"import React, { useState, useEffect } from \"react\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\nimport { LayerOne, LayerTwo, LayerThree, ImageSet, Image } from \"../styledComps.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { math, lake, train, wp, donate } from \"../assets.js\";\r\n\r\nimport getWeb from \"./getWeb\";\r\nimport getPage from \"./getPage\";\r\n\r\nexport default function Home(props) {\r\n  const history = useHistory();\r\n  const title = \"news\";\r\n  const [news, setNews] = useState(getPage(title, \"records\"));\r\n  const [open, setOpen] = useState(props.location.state ? props.location.state.alert : false);\r\n\r\n  //holding names of articles\r\n  var test = []\r\n\r\n  useEffect(() => {\r\n    getWeb(title).then((result) => {\r\n      result !== undefined ? setNews(result.records) : setNews(news);\r\n    })\r\n    if (open) { // used to close snackbar if no clicking happens\r\n      setTimeout(() => {\r\n        handleClose();\r\n      }, props.location.state.duration)\r\n    }\r\n  }, [news])\r\n\r\n  //getting article names\r\n  for(const i in news){\r\n    test.push(i);\r\n  }\r\n\r\n  test.sort() //sorting names\r\n\r\n  //getting article data in order\r\n  for(let i = 0; i < test.length; i++){\r\n    test[i] = news[test[i]];\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.replace({ state: undefined });\r\n  }\r\n\r\n  return(\r\n    <LayerOne>\r\n      { props.location.state ? \r\n        <Snackbar \r\n          open={open} \r\n          onClose={handleClose} \r\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\r\n        >\r\n          <Alert severity={props.location.state.severity} variant=\"filled\">\r\n            {props.location.state.message}\r\n          </Alert>\r\n        </Snackbar> :\r\n        null\r\n      }\r\n      <LayerTwo>\r\n        <LayerThree>\r\n          <h1 style={{fontStyle:\"italic\"}}>What's Happening</h1>\r\n          <>\r\n            {test.map((doc) => {\r\n              return(\r\n                <p key={doc.title}>\r\n                  <b>{doc.title}:</b>&nbsp;\r\n                  <span dangerouslySetInnerHTML={{ __html: doc.article}}></span>\r\n                </p>\r\n              )\r\n            })}\r\n          </>\r\n        </LayerThree>\r\n      </LayerTwo>\r\n      <ImageSet>\r\n        <a href=\"https://www.paypal.com/us/home\" target=\"_blank\" rel=\"noreferrer\"><img src={donate} alt=\"PayPal\" style={{width:\"50%\", borderRadius:\"5px\", marginBottom:\"1%\"}}/></a>\r\n        <Image src={math} alt=\"math\"/>\r\n        <Image src={lake} alt=\"lake\"/>\r\n        <Image src={train} alt=\"train\"/>\r\n        <Image src={wp} alt=\"wp\"/>\r\n      </ImageSet>\r\n    </LayerOne>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js",["162"],"import React, { useState, useEffect } from 'react';\r\nimport { Accord, BasicPage } from '../styledComps';\r\nimport getWeb from \"./getWeb\";\r\nimport getPage from \"./getPage\";\r\n\r\nexport default function FAQ() {\r\n  const title = \"faq\";\r\n  const [faq, setFAQ] = useState(getPage(title, \"records\"));\r\n\r\n  var test = [];\r\n  var cats = [];\r\n\r\n  useEffect(() => {\r\n    getWeb(title).then((result) => {\r\n      result !== undefined ? setFAQ(result.records) : setFAQ(faq);\r\n    })\r\n  }, [])\r\n\r\n  //Used for sorting the questions\r\n  for(const i in faq){\r\n    if(faq[i].answer !== undefined && faq[i].answer !== null){\r\n      const digit = Math.floor((Number(i)+100)/100) - 2;\r\n      test[digit] = {\r\n        ...test[digit],\r\n        [i]: faq[i]\r\n      }\r\n    } else {\r\n      cats.push(faq[i].question)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BasicPage>\r\n      <h1 style={{fontStyle:\"italic\"}}>FAQ</h1>\r\n      {\r\n        test.map((group, index) => {\r\n          return(\r\n            <div key={index}>\r\n              <p><b>{cats[index]}</b></p>\r\n              {\r\n                Object.values(group).map((quest, ind) => {\r\n                  return(\r\n                    <Accord key={ind} title={quest.question} content={quest.answer}/>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </BasicPage>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\loginContext.js",[],["163","164"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\useLoginState.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js",["165"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TeamForm, Auto, BasicPage } from \"../styledComps\";\r\nimport { divisions } from \"../assets.js\";\r\n\r\nimport { collection, where, getDocs, getDoc, doc } from \"@firebase/firestore\"\r\nimport { auth, db } from \"../fire\";\r\n\r\nlet options = require(\"./options\");\r\n\r\n//gets the competitions that are open (i.e. status == reg)\r\nasync function getComps(title){\r\n   \r\n   //holds the competitions\r\n   var comps = {};\r\n\r\n   //checks if load variable in local storage is true, meaning database can be pulled\r\n   if(!sessionStorage.getItem(title + \"Data\") || !sessionStorage.getItem(\"mastersData\")){\r\n\r\n      //getting the 'web' collection from firestore\r\n      const competitions = await getDocs(collection(db, title), where('status', '==', 'reg'));\r\n      const masters = await getDoc(doc(db, \"masters\", \"teams\"));\r\n\r\n      //adding open competitions to holding variable\r\n      competitions.forEach((item) => {\r\n         comps = {\r\n            ...comps,\r\n            [item.id]: item.data()\r\n         }\r\n      })\r\n\r\n      //checking to make sure it actually got data\r\n      if(competitions.empty){\r\n         return;\r\n      }\r\n\r\n      //adding web page html/data to local storage\r\n      sessionStorage.setItem(title + \"Data\", JSON.stringify(comps));\r\n      sessionStorage.setItem(\"mastersData\", masters ? JSON.stringify(masters.data()) : null);\r\n\r\n      return([comps, masters ? masters.data() : null]);\r\n   }\r\n}\r\n\r\nexport default function TeamRegister(){\r\n   const history = useHistory();\r\n   \r\n   const [comps, setComps] = useState(JSON.parse(sessionStorage.getItem(\"competitionsData\")));//all open competitions\r\n   const [masters, setMasters] = useState(JSON.parse(sessionStorage.getItem(\"mastersData\"))); //stores the masters data\r\n   const [choice, setChoice] = useState({ loc: null, \r\n                                          lev: null, \r\n                                          school: null,\r\n                                          team: null,\r\n                                          indiv: null,\r\n                                          email: \"\",\r\n                                          coach: \"\",\r\n                                          error: false,\r\n                                       });  //input variables\r\n   const [locals, setLocals] = useState(JSON.parse(sessionStorage.getItem(\"filteredComps\"))); //used to store the locations, does not change\r\n\r\n   const user = {email: sessionStorage.getItem(\"email\"), name: sessionStorage.getItem(\"username\")}; //stores email and username of user\r\n   \r\n   //gets the value for width of text fields\r\n   const getLongest = (longest) => {\r\n      //finding length of longest string in options and resize search box accordingly\r\n      for(const option in options){\r\n         for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n            if(options[option][i].label.length > longest)\r\n               longest = options[option][i].label.length;\r\n         }\r\n      }\r\n      //don't know if there is a good way to do this, couldn't find anything\r\n      return longest * 10;\r\n   }\r\n\r\n   let compId = null; //used to store the id of the competition being signed up for\r\n   let longest = getLongest(0); //used for storing the width of the longest string that can be selected in the drop-downs\r\n   let url = \"\"; //used to store the url for the Google Form\r\n\r\n   useEffect(() => {\r\n      getComps(\"competitions\").then((result) => {\r\n         if(result !== undefined){\r\n            setComps(result[0]);\r\n            setMasters(result[1]);\r\n\r\n            var temp = options.locations;\r\n\r\n            //filters the options based on the currently available competitions\r\n            if(result[0] !== null && result[0] !== undefined){\r\n               for(const i in temp){\r\n                  let test = false;\r\n                  for(const j in result[0]){\r\n                     if(temp[i].value.toUpperCase() === result[0][j].site.toUpperCase()){\r\n                        test = true;\r\n                     }\r\n                  }\r\n                  \r\n                  if(!test){\r\n                     const ops = options.locations.filter((value, index, arr) => {\r\n                        if(arr[index].value !== temp[i].value)\r\n                           return value;\r\n                        else\r\n                           return;\r\n                     })\r\n                     options.locations = ops;\r\n                  }\r\n               }\r\n               sessionStorage.setItem(\"filteredComps\", JSON.stringify(options.locations));\r\n            }\r\n         }\r\n         if(locals === null)\r\n            setLocals(options.locations);\r\n      });\r\n   }, [locals]);\r\n   \r\n   const onChange = (newValue, type, field) => {\r\n      switch (type) {\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n\r\n               //reset options\r\n               options.locations = locals;\r\n\r\n               let temp = [];\r\n\r\n               //gets the value of each level option\r\n               let value = \"\";\r\n               for(const i in options.level){\r\n                  if(options.level[i].label === newValue.value){\r\n                        value = options.level[i].value\r\n                        break;\r\n                  }\r\n               }\r\n\r\n               //TODO: might need to change options.location to a state\r\n               // for removing locations that don't have the grade associated with it\r\n               for(const i in options.locations){\r\n                  for(const j in comps){\r\n                        //checks if same location\r\n                        if(options.locations[i].value.toUpperCase() === comps[j].site.toUpperCase()){\r\n                           //checks if level is in the grade range for selected location\r\n                           if(newValue !== null && comps[j].grade.indexOf(value) !== -1){\r\n                                 //checks if option is already included\r\n                                 if(!temp.includes(options.locations[i])){\r\n                                    temp.push(options.locations[i])\r\n                                 }\r\n                           }\r\n                        }\r\n                  }\r\n               }\r\n\r\n               options.locations = temp;\r\n               if (choice.school) {\r\n                  //getting school id for chosen school\r\n                  let id = choice.school.value;\r\n                  \r\n                  //checking if school is able to sign up for masters\r\n                  for(const option in masters.teams){\r\n                     if(masters.teams[option].grade === newValue.value && masters.teams[option].schoolID === id){\r\n                        options.locations.push({\"value\": \"Masters\", \"label\": \"Masters\"});\r\n                        break;\r\n                     }\r\n                  }\r\n               }\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: null,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n\r\n               //resets the available locations if field is cleared\r\n               options.locations = locals;\r\n            }\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n\r\n               //deletes any masters in location options \"reseting options\"\r\n               options.locations = options.locations.filter((value, index, arr) => {\r\n                  return arr[index].value !== \"Masters\"\r\n               })\r\n               \r\n               //getting school id for chosen school\r\n               let id = newValue.value;\r\n\r\n               //checking if school is able to sign up for masters\r\n               for(const option in masters.teams){\r\n                  if(masters.teams[option].grade === choice.lev.value && masters.teams[option].schoolID === id){\r\n                     options.locations.push({\"value\": \"Masters\", \"label\": \"Masters\"});\r\n                     break;\r\n                  }\r\n               }\r\n\r\n            } else {\r\n               //deletes any masters in location options \"reseting options\"\r\n               options.locations = options.locations.filter((value, index, arr) => {\r\n                  return arr[index].value !== \"Masters\"\r\n               })\r\n\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: null,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"general\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               [field]: newValue,\r\n               error: false,\r\n            }));\r\n            break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n   //checks data to make sure things are filled out, and redirects to the goole form with prefilled info.\r\n   const onSubmit = () => {\r\n\r\n      compId = setCompID(choice);\r\n      const error = setError(choice);\r\n      setURL(choice);\r\n\r\n      if(!error){\r\n         history.push({\r\n            pathname: `/team-register/confirm/`,\r\n            state:{\r\n               key: url\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   //sets the competition id\r\n   const setCompID = (choice) => {\r\n      //gets the proper grade level displays\r\n      let id = null;\r\n      comp_loop:\r\n      for (const i in comps) {\r\n         var grade = comps[i].grade.substr(1)\r\n         var grades = []\r\n         for(const item in options.level){\r\n            for (const char in grade) {\r\n               if (options.level[item].value === grade[char]) {\r\n                  grades.push(options.level[item].label)\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n         \r\n         for(const j in grades){\r\n            if(grades[j] === choice.lev.value && choice.loc.value.toUpperCase() === comps[i].site.toUpperCase()){\r\n               id = i;\r\n               break comp_loop;\r\n            }\r\n         }\r\n      }\r\n      return id;\r\n   }\r\n\r\n   //Setting error if something is not filled out.\r\n   const setError = (choice) => {\r\n      var err = false;\r\n      for (const item in choice){\r\n         if((choice[item] === null || choice[item] === \"\") && item !== \"email\"){\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               error: true,\r\n            }));\r\n            err = true;\r\n            break;\r\n         }\r\n      }\r\n      return err;\r\n   }\r\n\r\n   //sets iframe url for filling google form\r\n   const setURL = (choice) => {\r\n      const uid = auth.currentUser.uid;\r\n      url = `https://docs.google.com/forms/d/e/1FAIpQLSf8UTjphTqcOHwmrdGEG8Jsbjz4eVz7d6XVlgW7AlnM28vq_g/viewform?usp=pp_url&entry.1951055040=${choice.coach}&entry.74786596=${uid}&entry.62573940=${choice.loc.value}&entry.1929366142=${choice.lev.value}&entry.680121242=${choice.team.value}&entry.641937550=${choice.indiv.value}&entry.1389254068=${choice.school.value + \" \" + choice.school.label + \" - \" + choice.school.div}&entry.1720714498=${user.email + \", \" + choice.email}&entry.1445326839=${compId}`\r\n   }\r\n\r\n   return(\r\n      <BasicPage>\r\n         <h1>Team Registration</h1>\r\n         <p>\r\n            <b>Rules for Individuals:</b> Any student may compete as an individual \r\n            in their grade level or any higher grade; however, a student may \r\n            compete as a team at one grade level only. This applies to both \r\n            Championships and Masters.<br/><br/>\r\n\r\n            Also note each team includes four students in addition to \r\n            two alternates per school that can compete as individuals. So \r\n            when registering n teams, you get to bring 4n+2 students along. \r\n            These students don't need to be registered as individuals separately.\r\n         </p>\r\n         <TeamForm noValidate autoComplete=\"off\">\r\n\r\n            <Auto\r\n               title=\"Competition Level\"\r\n               options={options.level}\r\n               text=\"Select Your Grade Level\"\r\n               onChange={(event, newValue) => onChange(newValue, \"level\", \"\")}\r\n               width={longest}\r\n               value={choice.lev}\r\n               error={choice.error}\r\n            />\r\n\r\n            <Auto\r\n               title=\"School Registering\"\r\n               options={options.school}\r\n               text=\"Select Your School\"\r\n               onChange={(event, newValue) => onChange(newValue, \"school\", \"\")}\r\n               width={longest}\r\n               value={choice.school}\r\n               error={choice.error}\r\n            />\r\n\r\n            <Auto\r\n               title=\"Competition Location\"\r\n               disabled={options.locations.length === 0}\r\n               options={options.locations}\r\n               text={options.locations.length === 0 ? \r\n                        \"No locations for this competition level.\" : \r\n                        \"Select Competition Location\"\r\n                     }\r\n               onChange={(event, newValue) => onChange(newValue, \"general\", \"loc\")}\r\n               width={longest}\r\n               value={choice.loc}\r\n               error={choice.error}\r\n            />\r\n\r\n            <Auto\r\n               title=\"Number Teams\"\r\n               options={options.numteam}\r\n               text=\"Select Number of Teams\"\r\n               onChange={(event, newValue) => onChange(newValue, \"general\", \"team\")}\r\n               width={longest}\r\n               value={choice.team}\r\n               error={choice.error}\r\n            />\r\n\r\n            <Auto\r\n               title=\"Number Individuals\"\r\n               options={options.numteam}\r\n               text=\"Select Number of Individuals\"\r\n               onChange={(event, newValue) => onChange(newValue, \"general\", \"indiv\")}\r\n               width={longest}\r\n               value={choice.indiv}\r\n               error={choice.error}\r\n            />\r\n\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Coach Name(s)</p>\r\n               </Grid>\r\n               <TextField\r\n                  error={choice.error && choice.coach === \"\"}\r\n                  helperText={choice.error && choice.coach === \"\" ? \r\n                                 \"Please fill out to continue\" : null\r\n                              }\r\n                  variant=\"outlined\" \r\n                  margin=\"normal\" \r\n                  required\r\n                  label=\"Coach Name(s)\"\r\n                  value={choice.coach}\r\n                  onChange={(event) => onChange(event.target.value, \"general\", \"coach\")}\r\n                  style={{ width: longest, maxWidth: \"65vw\", marginRight: 0 }}\r\n               >\r\n               </TextField>\r\n            </div>\r\n\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Additional Emails</p>\r\n               </Grid>\r\n               <TextField\r\n                  error={choice.error && choice.email === \"\"}\r\n                  helperText={choice.error && choice.email === \"\" ? \r\n                                 \"Please fill out to continue\" : \r\n                                 \"Example: notyour@email.com, another@coach.com\"\r\n                              }\r\n                  variant=\"outlined\" \r\n                  margin=\"normal\"\r\n                  label=\"Other Emails\"\r\n                  value={choice.email}\r\n                  onChange={(event) => onChange(event.target.value, \"general\", \"email\")}\r\n                  style={{ width: longest, maxWidth: \"65vw\", marginRight: 0 }}\r\n               >\r\n               </TextField>\r\n            </div>\r\n\r\n            <Grid container>\r\n               <Grid item sm={3}></Grid>\r\n               <Grid item sm={3} width={longest}>\r\n                  <Button\r\n                     fullWidth\r\n                     variant=\"contained\"\r\n                     onClick={onSubmit}\r\n                     style={{ background:\"#3f51b5\" }}\r\n                  >\r\n                     Continue\r\n                  </Button>\r\n               </Grid>\r\n            </Grid>\r\n\r\n         </TeamForm>\r\n         <p>\r\n                  A school's division level is assigned based on past performance at \r\n                  Math is Cool contests. For more details and a current list of \r\n                  schools and assignments, see&nbsp;\r\n                  <a href={divisions} target=\"_blank\" rel=\"noreferrer\">2018-19 Divisions</a>.\r\n               </p>\r\n      </BasicPage>\r\n   );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getWeb.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\FrontBack.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\CoachTools.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Admin.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignUp.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ProfilePage.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ForgotPass.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignIn.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Names.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Table.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getPage.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ImportContent.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\assets.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\AdminRoute.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\AddAdmin.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\MarkMasters.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\MastersTeams.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\Test.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\DataTable.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ManageCompetitions.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\styledComps.js",["166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":28,"column":6,"nodeType":"173","endLine":28,"endColumn":12,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":17,"column":6,"nodeType":"173","endLine":17,"endColumn":8,"suggestions":"176"},{"ruleId":"167","replacedBy":"177"},{"ruleId":"169","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":104,"column":28,"nodeType":"181","messageId":"182","endLine":104,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":281,"column":3,"nodeType":"185","messageId":"186","endLine":281,"endColumn":11},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleClose', 'open', and 'props.location.state.duration'. Either include them or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect has a missing dependency: 'faq'. Either include it or remove the dependency array. You can also do a functional update 'setFAQ(f => ...)' if you only need 'faq' in the 'setFAQ' call.",["190"],["187"],["188"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [handleClose, news, open, props.location.state.duration]",{"range":"195","text":"196"},"Update the dependencies array to be: [faq]",{"range":"197","text":"198"},[986,992],"[handleClose, news, open, props.location.state.duration]",[473,475],"[faq]"]