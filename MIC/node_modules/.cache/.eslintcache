[{"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js":"1","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js":"2","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\reportWebVitals.js":"3","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js":"4","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js":"5","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js":"6","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js":"7","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js":"8","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js":"9","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js":"10","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js":"11","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js":"12","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js":"13","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\loginContext.js":"14","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\useLoginState.js":"15","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js":"16","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js":"17","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Page.js":"18","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js":"19","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getWeb.js":"20","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\FrontBack.js":"21","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\CoachTools.js":"22","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Admin.js":"23","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignUp.js":"24","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ProfilePage.js":"25","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ForgotPass.js":"26","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignIn.js":"27","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Form.js":"28","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Auto.js":"29","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Profile.js":"30","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Names.js":"31","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Table.js":"32","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getPage.js":"33","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Accord.js":"34","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\style.js":"35","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ImportContent.js":"36","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\assets.js":"37","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\AdminRoute.js":"38","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\AddAdmin.js":"39","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Student.js":"40","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\MarkMasters.js":"41"},{"size":517,"mtime":1631052535688,"results":"42","hashOfConfig":"43"},{"size":4413,"mtime":1631323352956,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1626205071132,"results":"45","hashOfConfig":"43"},{"size":620,"mtime":1631138183370,"results":"46","hashOfConfig":"43"},{"size":2021,"mtime":1631137685610,"results":"47","hashOfConfig":"43"},{"size":2515,"mtime":1631137399828,"results":"48","hashOfConfig":"43"},{"size":160,"mtime":1630523431853,"results":"49","hashOfConfig":"43"},{"size":416,"mtime":1630543824171,"results":"50","hashOfConfig":"43"},{"size":470,"mtime":1630543720096,"results":"51","hashOfConfig":"43"},{"size":2784,"mtime":1630543732732,"results":"52","hashOfConfig":"43"},{"size":1520,"mtime":1631424619155,"results":"53","hashOfConfig":"43"},{"size":410,"mtime":1630543811297,"results":"54","hashOfConfig":"43"},{"size":406,"mtime":1630543833688,"results":"55","hashOfConfig":"43"},{"size":122,"mtime":1626722215027,"results":"56","hashOfConfig":"43"},{"size":419,"mtime":1626722250498,"results":"57","hashOfConfig":"43"},{"size":2555,"mtime":1631139108402,"results":"58","hashOfConfig":"43"},{"size":17262,"mtime":1631320819078,"results":"59","hashOfConfig":"43"},{"size":449,"mtime":1629680800870,"results":"60","hashOfConfig":"43"},{"size":1428,"mtime":1631321914052,"results":"61","hashOfConfig":"43"},{"size":714,"mtime":1631137422525,"results":"62","hashOfConfig":"43"},{"size":2887,"mtime":1630543780795,"results":"63","hashOfConfig":"43"},{"size":841,"mtime":1630543764330,"results":"64","hashOfConfig":"43"},{"size":989,"mtime":1631323397317,"results":"65","hashOfConfig":"43"},{"size":9203,"mtime":1631138165049,"results":"66","hashOfConfig":"43"},{"size":1710,"mtime":1631138139747,"results":"67","hashOfConfig":"43"},{"size":3023,"mtime":1631316828065,"results":"68","hashOfConfig":"43"},{"size":5460,"mtime":1631139404621,"results":"69","hashOfConfig":"43"},{"size":411,"mtime":1630543878091,"results":"70","hashOfConfig":"43"},{"size":1626,"mtime":1630893648395,"results":"71","hashOfConfig":"43"},{"size":951,"mtime":1631139109449,"results":"72","hashOfConfig":"43"},{"size":4097,"mtime":1631055559257,"results":"73","hashOfConfig":"43"},{"size":5555,"mtime":1631318598811,"results":"74","hashOfConfig":"43"},{"size":173,"mtime":1631137783502,"results":"75","hashOfConfig":"43"},{"size":814,"mtime":1631424300318,"results":"76","hashOfConfig":"43"},{"size":7100,"mtime":1631422872288,"results":"77","hashOfConfig":"43"},{"size":4066,"mtime":1630606281738,"results":"78","hashOfConfig":"43"},{"size":623,"mtime":1630631858692,"results":"79","hashOfConfig":"43"},{"size":1741,"mtime":1631322535669,"results":"80","hashOfConfig":"43"},{"size":2489,"mtime":1631323071777,"results":"81","hashOfConfig":"43"},{"size":1313,"mtime":1631038075399,"results":"82","hashOfConfig":"43"},{"size":129,"mtime":1631323504034,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"s4ayer",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\index.js",[],["175","176"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\App.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\reportWebVitals.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\fire.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Competitions.js",["177"],"import React, { useState, useEffect } from \"react\";\r\nimport fire from \"../fire\";\r\nimport getPage from \"./getPage\";\r\nimport getWeb from \"./getWeb\";\r\n\r\nexport default function Competitions() {\r\n  const [comp, setComp] = useState(\"\");\r\n\r\n  const title = \"competitions\";\r\n\r\n  useEffect(() => {\r\n    getWeb(title);\r\n    // console.log(JSON.parse(sessionStorage.getItem(title))[\"records\"])\r\n    setComp(getPage(title, \"records\"))\r\n  }, [])\r\n\r\n  const onClick = () => {\r\n    // console.log(comp)\r\n    // for(const i in comp){\r\n    //   fire.firestore().collection(\"competitions\")\r\n    //   .add({...comp[i], registration: reg})\r\n    //   .then(console.log(\"done\"))\r\n    //   .catch(err => {console.log(err)})\r\n    // }\r\n    console.log(\"doing\")\r\n    fire.firestore().collection(\"competitions\")\r\n      .doc(\"Dv446ASPVxNOLriehOok\")\r\n      .set({\r\n        schTeams: 8,\r\n        regDate: \"11/12/2020\",\r\n        timestamp: 1617133987894,\r\n        registration: {},\r\n        user: \"tom\",\r\n        year: \"2020-21\",\r\n        maxTeams: 200,\r\n        contact: \"Gregg Sampson\",\r\n        status: \"reg\",\r\n        id: 1,\r\n        schedule: \"3:00 - 3:10\\nOrientation\\n3:10 - 3:25\\nMental Math          (8 questions, 30 sec./question)\\n3:30 - 4:05\\nIndividual Test      (40 questions, 35 min.)\\n4:10 - 4:25\\nIndivid. M.C. Test   (10 quest., 15 min., Multiple choice)\\n4:35 - 4:50\\nTeam Test               (10 questions, 15 min.)\\n4:55 - 5:05\\nPressure Round      (5 quest., 10 min. --> 1 ans./2 min.)\\n5:15 - 5:30\\nCollege Bowl 1/2    (10 Questions each)\\n5:30 - 5:45\\nCollege Bowl 3/4    (10 Questions each)\\n5:45 - 6:00\\nCollege Bowl 5/6    (10 Questions each)\\n6:00\\nContest WrapUp\\n\",\r\n        compDate: \"12/02/2020\",\r\n        site: \"online\",\r\n        email: \"registrar@academicsarecool.com\",\r\n        grade: \"G91\"\r\n    })\r\n    .then(console.log(\"done\"))\r\n  .catch(err => {console.log(err)})\r\n  }\r\n\r\n  return (\r\n    <div className=\"Competitions\">\r\n      <button onClick={onClick}>Competitions</button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Home.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\PastTests.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\History.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Contacts.js",["178"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Page from \"./Page\";\r\nimport { map } from \"../assets.js\"; //not working\r\nimport getWeb from \"./getWeb\";\r\nimport getPage from \"./getPage\";\r\n\r\nexport default function Contacts() {\r\n  const [page, setPage] = useState(\"\");\r\n\r\n  const title = \"whotocall\";\r\n\r\n  useEffect(() => {\r\n    getWeb(title);\r\n    setPage(getPage(title, \"value\"));\r\n  }, [])\r\n\r\n  return (\r\n    <Page title=\"Contacts\" page={page}/>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Locations.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\FAQ.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Rules.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Fees.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\loginContext.js",[],["179","180"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\context\\useLoginState.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\SideBar.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\TeamRegister.js",["181"],"import { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Auto from \"../custom/Auto.js\";\r\nimport fire from \"../fire\";\r\n\r\nimport { divisions } from \"../assets.js\";\r\nimport useStyles from \"../style\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\n//gets the competitions that are open (i.e. status == reg)\r\nasync function getComps(title){\r\n   \r\n   //holds the competitions\r\n   var comps = {};\r\n\r\n   //checks if load variable in local storage is true, meaning database can be pulled\r\n   if(!sessionStorage.getItem(title + \"Data\")){\r\n\r\n      //getting the 'web' collection from firestore\r\n      const doc = await fire.firestore().collection(title).where('status', '==', 'reg').get();\r\n\r\n      //adding open competitions to holding variable\r\n      doc.forEach((item) => {\r\n         comps = {\r\n            ...comps,\r\n            [item.id]: item.data()\r\n         }\r\n      })\r\n\r\n      //checking to make sure it actually got data\r\n      if(doc.empty){\r\n         return;\r\n      }\r\n\r\n      //adding web page html/data to local storage\r\n      sessionStorage.setItem(title + \"Data\", JSON.stringify(comps));\r\n   }\r\n}\r\n\r\n//TODO: add filtering for masters (i.e. if the school selected at the grade level isn't in masters, don't show masters)\r\nexport default function TeamRegister(){\r\n   const history = useHistory();\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({ loc: null, \r\n                                          lev: null, \r\n                                          school: null,\r\n                                          team: null,\r\n                                          indiv: null,\r\n                                          email: \"\",\r\n                                          coach: \"\",\r\n                                          error: false,\r\n                                       });  \r\n   const [locals, setLocals] = useState([]); //used to store the locations, does not change\r\n   const user = {email: sessionStorage.getItem(\"email\"), name: sessionStorage.getItem(\"username\")}; //stores email and username of user\r\n                                    \r\n   let comps = JSON.parse(sessionStorage.getItem(\"competitionsData\")); //all open competitions\r\n   let compId = null; //used to store the id of the competition being signed up for\r\n   let longest = 0; //used for storing the width of the longest string that can be selected in the drop-downs\r\n   let schoolData = {value: null, label: null, div: null} //used to store the data of the selected school\r\n   let url = \"\"; //used to store the url for the Google Form\r\n\r\n   useEffect(() => {\r\n      getComps(\"competitions\");\r\n      setLocals(options.locations);\r\n   }, []);\r\n\r\n   //finding length of longest string in options and resize search box accordingly\r\n   for(var option in options){\r\n      for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n         if(options[option][i].label.length > longest)\r\n            longest = options[option][i].label.length;\r\n      }\r\n   }\r\n\r\n   //don't know if there is a good way to do this, couldn't find anything\r\n   longest *= 10;\r\n\r\n   //filters the options based on the currently available competitions\r\n   for(const i in options.locations){\r\n      let test = false;\r\n      for(const j in comps){\r\n         if(options.locations[i].value.toUpperCase() === comps[j].site.toUpperCase()){\r\n            test = true;\r\n         }\r\n      }\r\n      if(!test){\r\n         delete options.locations[i]\r\n      }\r\n   }\r\n\r\n   const onChange = (newValue, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n\r\n               let temp = [];\r\n\r\n               //gets the value of each level option\r\n               let value = \"\";\r\n               for(const i in options.level){\r\n                  if(options.level[i].label === newValue){\r\n                     value = options.level[i].value\r\n                     break;\r\n                  }\r\n               }\r\n\r\n               //resets the available options if field is cleared\r\n               options.locations = locals;\r\n\r\n               //TODO: might need to change options.location to a state\r\n               // for removing locations that don't have the grade associated with it\r\n               for(const i in options.locations){\r\n                  for(const j in comps){\r\n                     //checks if same location\r\n                     if(options.locations[i].value.toUpperCase() === comps[j].site.toUpperCase()){\r\n                        //checks if level is in the grade range for selected location\r\n                        if(newValue !== null && comps[j].grade.indexOf(value) !== -1){\r\n                           //checks if option is already included\r\n                           if(!temp.includes(options.locations[i])){\r\n                              temp.push(options.locations[i])\r\n                           }\r\n                        }\r\n                     }\r\n                  }\r\n               }\r\n               options.locations = temp;\r\n               \r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: null,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"indiv\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  indiv: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  indiv: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"coach\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: newValue.target.value,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: \"\",\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"email\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  email: newValue.target.value,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  email: \"\",\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n   //checks data to make sure things are filled out, and redirects to the goole form with prefilled info.\r\n   const onSubmit = () => {\r\n\r\n      compId = setCompID(choice);\r\n      const error = setError(choice);\r\n      setSchoolData();\r\n      setURL(choice, schoolData);\r\n\r\n      if(!error){\r\n         history.push({\r\n            pathname: `/team-register/confirm/`,\r\n            state:{\r\n               key: url\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   //sets the competition id\r\n   const setCompID = (choice) => {\r\n      //gets the proper grade level displays\r\n      let id = null;\r\n      comp_loop:\r\n      for(const i in comps){\r\n         var grade = comps[i].grade.substr(1)\r\n         var grades = []\r\n         for(const item in options.level){\r\n            for(const char in grade){\r\n               if(options.level[item].value === grade[char]){\r\n                  grades.push(options.level[item].label)\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n         \r\n         for(const j in grades){\r\n            if(grades[j] === choice.lev && choice.loc.toUpperCase() === comps[i].site.toUpperCase()){\r\n               id = i;\r\n               break comp_loop;\r\n            }\r\n         }\r\n      }\r\n      return id;\r\n   }\r\n\r\n   //Setting error if something is not filled out.\r\n   const setError = (choice) => {\r\n      var err = false;\r\n      for (const item in choice){\r\n         if((choice[item] === null || choice[item] === \"\") && item !== \"email\"){\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               error: true,\r\n            }));\r\n            err = true;\r\n            break;\r\n         }\r\n      }\r\n      return err;\r\n   }\r\n\r\n   //sets iframe url for filling google form\r\n   const setURL = (choice, schoolData) => {\r\n      const uid = fire.auth().currentUser.uid; //!might need to do something with this, since it might not be fast enough.\r\n      url = `https://docs.google.com/forms/d/e/1FAIpQLSf8UTjphTqcOHwmrdGEG8Jsbjz4eVz7d6XVlgW7AlnM28vq_g/viewform?usp=pp_url&entry.1951055040=${choice.coach}&entry.74786596=${uid}&entry.62573940=${choice.loc}&entry.1929366142=${choice.lev}&entry.680121242=${choice.team}&entry.641937550=${choice.indiv}&entry.1389254068=${schoolData.value + \" \" + schoolData.label + \" - \" + schoolData.div}&entry.1720714498=${user.email + \", \" + choice.email}&entry.1445326839=${compId}`\r\n   }\r\n\r\n   //Getting all the data for that school\r\n   const setSchoolData = () => {\r\n      for(option in options.school){\r\n         if(options.school[option].label === choice.school){\r\n            schoolData = {\r\n               value: options.school[option].value,\r\n               label: options.school[option].label,\r\n               div: options.school[option].div,\r\n            }\r\n            break;\r\n         }\r\n      }\r\n   }\r\n   \r\n   return(\r\n      <div className={classes.tTop}>\r\n         <div className={classes.tSecond}>\r\n            <div className={classes.tBottom}>\r\n               <h1>Team Registration</h1>\r\n               <p>\r\n                  <b>Rules for Individuals:</b> Any student may compete as an individual \r\n                  in their grade level or any higher grade; however, a student may \r\n                  compete as a team at one grade level only. This applies to both \r\n                  Championships and Masters.<br/><br/>\r\n\r\n                  Also note each team includes four students in addition to \r\n                  two alternates per school that can compete as individuals. So \r\n                  when registering n teams, you get to bring 4n+2 students along. \r\n                  These students don't need to be registered as individuals separately.\r\n               </p>\r\n               <form className={classes.tRoot} noValidate autoComplete=\"off\">\r\n\r\n                  <Auto\r\n                     title=\"Competition Level\"\r\n                     options={options.level}\r\n                     text=\"Select Your Grade Level\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"level\")}\r\n                     width={longest}\r\n                     value={choice.lev}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"School Registering\"\r\n                     options={options.school}\r\n                     text=\"Select Your School\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"school\")}\r\n                     width={longest}\r\n                     value={choice.school}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Competition Location\"\r\n                     disabled={options.locations.length === 0}\r\n                     options={options.locations}\r\n                     text={options.locations.length === 0 ? \r\n                              \"No locations for this competition level.\" : \r\n                              \"Select Competition Location\"\r\n                           }\r\n                     onChange={(event, newValue) => onChange(newValue, \"location\")}\r\n                     width={longest}\r\n                     value={choice.loc}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number Teams\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Teams\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"team\")}\r\n                     width={longest}\r\n                     value={choice.team}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number Individuals\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Individuals\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"indiv\")}\r\n                     width={longest}\r\n                     value={choice.indiv}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <div style={{display:\"flex\"}}>\r\n                     <Grid item sm={3}>\r\n                        <p>Coach Name(s)</p>\r\n                     </Grid>\r\n                     <TextField\r\n                        error={choice.error && choice.coach === \"\"}\r\n                        helperText={choice.error && choice.coach === \"\" ? \r\n                                       \"Please fill out to continue\" : null\r\n                                    }\r\n                        variant=\"outlined\" \r\n                        margin=\"normal\" \r\n                        required\r\n                        label=\"Coach Name(s)\"\r\n                        value={choice.coach}\r\n                        onChange={(event) => onChange(event, \"coach\")}\r\n                        style={{ width: longest, maxWidth: \"65vw\", marginRight: 0 }}\r\n                     >\r\n                     </TextField>\r\n                  </div>\r\n\r\n                  <div style={{display:\"flex\"}}>\r\n                     <Grid item sm={3}>\r\n                        <p>Additional Emails</p>\r\n                     </Grid>\r\n                     <TextField\r\n                        error={choice.error && choice.email === \"\"}\r\n                        helperText={choice.error && choice.email === \"\" ? \r\n                                       \"Please fill out to continue\" : \r\n                                       \"Example: notyour@email.com, another@coach.com\"\r\n                                    }\r\n                        variant=\"outlined\" \r\n                        margin=\"normal\"\r\n                        label=\"Other Emails\"\r\n                        value={choice.email}\r\n                        onChange={(event) => onChange(event, \"email\")}\r\n                        style={{ width: longest, maxWidth: \"65vw\", marginRight: 0 }}\r\n                     >\r\n                     </TextField>\r\n                  </div>\r\n\r\n                  <Grid container>\r\n                     <Grid item sm={3}></Grid>\r\n                     <Grid item sm={3} width={longest}>\r\n                        <Button\r\n                           fullWidth\r\n                           variant=\"contained\"\r\n                           color=\"primary\"\r\n                           onClick={onSubmit}\r\n                        >\r\n                           Continue\r\n                        </Button>\r\n                     </Grid>\r\n                  </Grid>\r\n\r\n               </form>\r\n               <p>\r\n                  A school's division level is assigned based on past performance at \r\n                  Math is Cool contests. For more details and a current list of \r\n                  schools and assignments, see&nbsp;\r\n                  <a href={divisions} target=\"_blank\" rel=\"noreferrer\">2018-19 Divisions</a>.\r\n               </p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\Page.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\ProtectedRoute.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getWeb.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\FrontBack.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\CoachTools.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\Admin.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignUp.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ProfilePage.js",["182"],"import React from \"react\";\r\nimport { makeStyles, CssBaseline, Button, Avatar, Container, Typography } from '@material-ui/core';\r\n\r\nimport SignIn from \"./SignIn\";\r\nimport useStyles from \"../style\";\r\n\r\nimport fire from \"../fire\";\r\n\r\nexport default function ProfilePage () {\r\n  const classes = useStyles();\r\n\r\n  const username = sessionStorage.getItem(\"username\")\r\n  const email = sessionStorage.getItem(\"email\")\r\n\r\n  return(\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline/>\r\n      <div className={classes.paper}>\r\n        { username !== null && username !== undefined ?\r\n          <Avatar className={classes.pAvatar}>\r\n            {username.match(/(\\b\\S)?/g).join(\"\").toUpperCase()}\r\n          </Avatar>:\r\n          <SignIn/>\r\n        }\r\n        { username !== null && username !== undefined ? \r\n          <>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              {username}\r\n            </Typography>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              {email}\r\n            </Typography>\r\n            <Button onClick={() => {\r\n                      fire.auth().signOut()\r\n                        .then((user) => {\r\n                            window.location.reload();\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(\"An error occured \", error)\r\n                        });\r\n                      sessionStorage.removeItem(\"username\")\r\n                      sessionStorage.removeItem(\"email\")\r\n                  }\r\n                }\r\n            >\r\n                Logout\r\n            </Button> \r\n          </>\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\ForgotPass.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\profile\\SignIn.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Form.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Auto.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Profile.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\back\\Names.js",["183","184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Table from \"../custom/Table\";\r\nimport useStyles from \"../style\";\r\nimport fire from \"../fire\";\r\n\r\nimport options from \"./options.json\";\r\n\r\n//returns the values of #individuals and #teams for each competition where the current user\r\n//signed up the chosen school\r\nasync function getComps(){\r\n  try{\r\n    const comps = await fire.firestore().collection(\"competitions\").get();\r\n    var competitions = [];\r\n    if(comps.empty){\r\n      return;\r\n    } else {\r\n      comps.forEach(doc => {\r\n        const register = doc.data().registration;\r\n\r\n        //gets the proper grade level displays\r\n        var grade = doc.data().grade.substr(1)\r\n        var grades = []\r\n        for(const item in options.level){\r\n          for(const char in grade){\r\n            if(options.level[item].value === grade[char]){\r\n              grades.push(options.level[item].label)\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        const title = \"Grade \" + `${grades.length > 2 ? grades.join(\", \"): grades.join(\" and \")}` + \" Competition on \" + doc.data().compDate;\r\n\r\n        //adds the competitions that current user has signed up for\r\n        for(const sign in register){\r\n          if(register[sign].uid === fire.auth().currentUser.uid){\r\n            competitions.push({\r\n              regID: sign, \r\n              compID: doc.id, \r\n              title: title, \r\n              teams: register[sign].numTeams, \r\n              indiv: register[sign].numIndividuals,\r\n              schoolID: register[sign].schoolID,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      return(competitions)\r\n    }\r\n  } catch(err){\r\n    console.log(\"ERROR:\", err)\r\n  }\r\n}\r\n\r\nexport default function Names() {\r\n  const classes = useStyles();\r\n  var schoolData = []; //used to store the schools current user has registered for\r\n  const [compData, setComp] = useState([]); //registration data that current user has submitted\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //gets registrations\r\n    getComps().then(vals => {\r\n      for(const val in vals){\r\n        if(vals[val] !== undefined){\r\n          setComp((prevState) => [\r\n            ...prevState,\r\n            {\r\n              regId:vals[val].regID,\r\n              compId:vals[val].compID,\r\n              title:vals[val].title,\r\n              teams:vals[val].teams,\r\n              indivs:vals[val].indiv,\r\n              schoolID:vals[val].schoolID,\r\n            }\r\n          ]);\r\n        }\r\n        \r\n        //checks if there are teams/individuals signed up for a competition\r\n        if(vals[val].teams !== 0 || vals[val].indiv !== 0){\r\n          setLoading(false);\r\n        }\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  //gets school names\r\n  if(!loading && schoolData.length === 0){\r\n    for(const item in compData){\r\n      for(const option in options.school){\r\n        if(compData[item].schoolID === options.school[option].value){\r\n          schoolData.push(options.school[option].label)\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.page}>\r\n      <div className={classes.top}>\r\n        <div className={classes.middle}>\r\n          { !loading ?\r\n            <div className={classes.bottom}>\r\n              {\r\n                compData.map((comp, index) => {\r\n                  return(\r\n                    <div key={index}>\r\n                      <Table  \r\n                        title={comp.title + \" for \" + schoolData[index]} \r\n                        teams={comp.teams} \r\n                        individuals={comp.indivs} \r\n                        id={comp.compId}\r\n                        regId={comp.regId}\r\n                      />\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>:\r\n            !loading ? \r\n              null:\r\n              <Typography style={{opacity:\"50%\"}}>\r\n                You have no registrations.\r\n              </Typography>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Table.js",["185","186"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Button, Typography, Divider, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport useStyles from \"../style\";\r\nimport Student from \"./Student\"\r\nimport fire from \"../fire\";\r\n\r\n//Used for Enter Names table\r\n\r\n//adds names to registration\r\nasync function submitNames(id, regId, students){\r\n  const comps = fire.firestore().collection(\"competitions\").doc(id);\r\n  const res = await comps.get()\r\n    .then((doc) => {\r\n      comps.update({\r\n        ...doc.data(),\r\n        registration: {\r\n          ...doc.data().registration,\r\n          [regId]: {\r\n            ...doc.data().registration[regId],\r\n            names: students,\r\n          }\r\n        }\r\n      })\r\n      return(true)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      return(false)\r\n    })\r\n  return(res)\r\n}\r\n\r\n/**\r\n * @param  {integer} teams \r\n * @param  {integer} individuals\r\n */\r\nexport default function Table(props) {\r\n  const classes = useStyles();\r\n  const [students, setStudents] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [alert, setAlert] = useState(false);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  if(props.teams > 10)\r\n    props.teams = 10;\r\n  if(props.individuals > 10)\r\n    props.individuals = 10;\r\n\r\n  //number of spots to fill in people\r\n  const fills = Array.from({length: props.teams * 4 + props.individuals + 2}, (_, i) => i + 1);\r\n  \r\n  //array to hold options for what position the person has\r\n  var options = [{value:\"Individual\", label:\"Individual\"}, {value:\"Alternate\", label:\"Alternate\"}]\r\n\r\n  //filling in the teams\r\n  for(let i = 1; i <= props.teams; i++){\r\n    options.push({value:`Team ${i}`, label:`Team ${i}`});\r\n  }\r\n\r\n  //TODO: might need to change this\r\n  const callback = (result) => {\r\n    setStudents(result)\r\n  }\r\n\r\n  //gets current names\r\n  const getComps = async (call) => {\r\n    const comps = fire.firestore().collection(\"competitions\").doc(props.id);\r\n\r\n    const names = await comps.get()\r\n      .then((doc) => {\r\n        if(doc.data().registration[props.regId] !== undefined && doc.data().registration[props.regId].names !== undefined)\r\n          sessionStorage.setItem(\"students\", JSON.stringify(doc.data().registration[props.regId].names));\r\n          call(doc.data().registration[props.regId].names)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(students === 1){\r\n      getComps(callback)\r\n      setLoading(false)\r\n    }\r\n  },[])\r\n\r\n  const onSubmit = () => {\r\n    submitNames(props.id, props.regId, students)\r\n      .then((result) => {\r\n        setAlert(result);\r\n        setClicked(true);\r\n      })\r\n  }\r\n\r\n  if(!loading && students === undefined){\r\n    var studs = {};\r\n    for(const i in fills){\r\n      studs[i] = {\r\n        name:\"\",\r\n        grade:null,\r\n        level:null,\r\n        pos:null,\r\n      }\r\n    }\r\n    setStudents(studs)\r\n  }\r\n\r\n  const onChange = (newValue, index, type) => {\r\n    setStudents((prevState) => ({\r\n      ...prevState,\r\n      [index]:{\r\n        ...prevState[index],\r\n        [type]: newValue,\r\n      }\r\n    }))\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway')\r\n      return;\r\n    setClicked(false);\r\n  }\r\n  \r\n  return(\r\n    <div className={classes.tableTop}>\r\n      <Snackbar open={clicked} autoHideDuration={3000} onClose={handleClose} anchorOrigin={{vertical:'top', horizontal:'center'}}>\r\n        <Alert onClose={handleClose} severity={alert ? \"success\" : \"error\"} variant=\"filled\">\r\n          Names {alert ? \"successfully submitted\" : \"failed to submit, contact web master for help if you can't resolve the issue\"}.\r\n        </Alert>\r\n      </Snackbar>\r\n      { students !== undefined && students !== 1 ?\r\n        <>\r\n          <Typography>\r\n            {props.title}\r\n          </Typography>\r\n          <div className={classes.table}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Student Name\r\n                  </th>\r\n                  <th>\r\n                    Student Grade\r\n                  </th>\r\n                  <th>\r\n                    Student Math Level\r\n                  </th>\r\n                  <th>\r\n                    Student Position\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {fills.map((doc, index) => {\r\n                  return(\r\n                      <Student\r\n                        ops={options}\r\n                        key={doc}\r\n                        index={index}\r\n                        onChange={onChange}\r\n                        stud={students[index]}\r\n                      />\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <Grid container>\r\n              <Grid item sm={2}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={onSubmit}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <br/><Divider/><br/>\r\n        </>:\r\n        !loading ? \r\n          null:\r\n          <div style={{position:\"fixed\", top:\"45%\", left:\"45%\"}}>\r\n            <ReactLoading type=\"spinningBubbles\" color=\"#000\" style={{width:\"50px\", height:\"50px\"}}/>\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\front\\getPage.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Accord.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\style.js",["187"],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\ImportContent.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\assets.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\navigation\\AdminRoute.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\AddAdmin.js",[],"C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\custom\\Student.js",["188"],"import React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\"\r\nimport options from \"../back/options.json\";\r\nimport Auto from \"./Auto\";\r\nimport useStyles from \"../style\";\r\n\r\nexport default function Student(props){\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <tr className={classes.main}>\r\n      <td>\r\n        <TextField \r\n          value={props.stud.name}\r\n          onChange={(event) => props.onChange(event.target.value, props.index, \"name\")}\r\n          variant=\"outlined\"\r\n        >\r\n        </TextField>\r\n      </td>\r\n      <td>\r\n        <Auto\r\n          options={options.grade}\r\n          value={props.stud.grade}\r\n          className={classes.field}\r\n          onChange={(event, newValue) => props.onChange(newValue, props.index, \"grade\")}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Auto\r\n          options={options.stlev}\r\n          value={props.stud.level}\r\n          className={classes.field}\r\n          onChange={(event, newValue) => props.onChange(newValue, props.index, \"level\")}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Auto\r\n          options={props.ops}\r\n          value={props.stud.pos}\r\n          className={classes.field}\r\n          onChange={(event, newValue) => props.onChange(newValue, props.index, \"pos\")}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}","C:\\Users\\ethan\\OneDrive\\Desktop\\Files\\Coding\\Websites\\MathIsCool\\MIC\\src\\components\\admin\\MarkMasters.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"193","severity":1,"message":"197","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"189","replacedBy":"198"},{"ruleId":"191","replacedBy":"199"},{"ruleId":"193","severity":1,"message":"200","line":1,"column":29,"nodeType":"195","messageId":"196","endLine":1,"endColumn":39},{"ruleId":"193","severity":1,"message":"200","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":33,"column":32,"nodeType":"203","messageId":"204","endLine":33,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":33,"column":99,"nodeType":"203","messageId":"204","endLine":33,"endColumn":100},{"ruleId":"193","severity":1,"message":"205","line":72,"column":11,"nodeType":"195","messageId":"196","endLine":72,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":88,"column":5,"nodeType":"208","endLine":88,"endColumn":7,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":140,"column":7,"nodeType":"212","messageId":"213","endLine":140,"endColumn":15},{"ruleId":"193","severity":1,"message":"214","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'comp' is assigned a value but never used.","Identifier","unusedVar","'map' is defined but never used.",["215"],["216"],"'makeStyles' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'names' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComps' and 'students'. Either include them or remove the dependency array.","ArrayExpression",["217"],"no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [getComps, students]",{"range":"220","text":"221"},[2603,2605],"[getComps, students]"]