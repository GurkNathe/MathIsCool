{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\nmodule.exports = PseudoMap;\n\nfunction PseudoMap(set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\");\n  this.clear();\n\n  if (set) {\n    if (set instanceof PseudoMap || typeof Map === 'function' && set instanceof Map) set.forEach(function (value, key) {\n      this.set(key, value);\n    }, this);else if (Array.isArray(set)) set.forEach(function (kv) {\n      this.set(kv[0], kv[1]);\n    }, this);else throw new TypeError('invalid argument');\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this;\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size') fn.call(thisp, this._data[k].value, this._data[k].key);\n  }, this);\n};\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k);\n};\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k);\n  return res && res.value;\n};\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v);\n};\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k);\n\n  if (res) {\n    delete this._data[res._index];\n    this._data.size--;\n  }\n};\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null);\n  data.size = 0;\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  });\n};\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size;\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n});\n\nPseudoMap.prototype.values = PseudoMap.prototype.keys = PseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version');\n}; // Either identical, or both NaN\n\n\nfunction same(a, b) {\n  return a === b || a !== a && b !== b;\n}\n\nfunction Entry(k, v, i) {\n  this.key = k;\n  this.value = v;\n  this._index = i;\n}\n\nfunction find(data, k) {\n  for (var i = 0, s = '_' + k, key = s; hasOwnProperty.call(data, key); key = s + i++) {\n    if (same(data[key].key, k)) return data[key];\n  }\n}\n\nfunction set(data, k, v) {\n  for (var i = 0, s = '_' + k, key = s; hasOwnProperty.call(data, key); key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v;\n      return;\n    }\n  }\n\n  data.size++;\n  data[key] = new Entry(k, v, key);\n}","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/node_modules/pseudomap/pseudomap.js"],"names":["hasOwnProperty","Object","prototype","module","exports","PseudoMap","set","TypeError","clear","Map","forEach","value","key","Array","isArray","kv","fn","thisp","keys","_data","k","call","has","find","get","res","v","delete","_index","size","data","create","defineProperty","enumerable","configurable","writable","n","values","entries","Error","same","a","b","Entry","i","s"],"mappings":"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","sourcesContent":["var hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\nmodule.exports = PseudoMap\r\n\r\nfunction PseudoMap (set) {\r\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\r\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\r\n\r\n  this.clear()\r\n\r\n  if (set) {\r\n    if ((set instanceof PseudoMap) ||\r\n        (typeof Map === 'function' && set instanceof Map))\r\n      set.forEach(function (value, key) {\r\n        this.set(key, value)\r\n      }, this)\r\n    else if (Array.isArray(set))\r\n      set.forEach(function (kv) {\r\n        this.set(kv[0], kv[1])\r\n      }, this)\r\n    else\r\n      throw new TypeError('invalid argument')\r\n  }\r\n}\r\n\r\nPseudoMap.prototype.forEach = function (fn, thisp) {\r\n  thisp = thisp || this\r\n  Object.keys(this._data).forEach(function (k) {\r\n    if (k !== 'size')\r\n      fn.call(thisp, this._data[k].value, this._data[k].key)\r\n  }, this)\r\n}\r\n\r\nPseudoMap.prototype.has = function (k) {\r\n  return !!find(this._data, k)\r\n}\r\n\r\nPseudoMap.prototype.get = function (k) {\r\n  var res = find(this._data, k)\r\n  return res && res.value\r\n}\r\n\r\nPseudoMap.prototype.set = function (k, v) {\r\n  set(this._data, k, v)\r\n}\r\n\r\nPseudoMap.prototype.delete = function (k) {\r\n  var res = find(this._data, k)\r\n  if (res) {\r\n    delete this._data[res._index]\r\n    this._data.size--\r\n  }\r\n}\r\n\r\nPseudoMap.prototype.clear = function () {\r\n  var data = Object.create(null)\r\n  data.size = 0\r\n\r\n  Object.defineProperty(this, '_data', {\r\n    value: data,\r\n    enumerable: false,\r\n    configurable: true,\r\n    writable: false\r\n  })\r\n}\r\n\r\nObject.defineProperty(PseudoMap.prototype, 'size', {\r\n  get: function () {\r\n    return this._data.size\r\n  },\r\n  set: function (n) {},\r\n  enumerable: true,\r\n  configurable: true\r\n})\r\n\r\nPseudoMap.prototype.values =\r\nPseudoMap.prototype.keys =\r\nPseudoMap.prototype.entries = function () {\r\n  throw new Error('iterators are not implemented in this version')\r\n}\r\n\r\n// Either identical, or both NaN\r\nfunction same (a, b) {\r\n  return a === b || a !== a && b !== b\r\n}\r\n\r\nfunction Entry (k, v, i) {\r\n  this.key = k\r\n  this.value = v\r\n  this._index = i\r\n}\r\n\r\nfunction find (data, k) {\r\n  for (var i = 0, s = '_' + k, key = s;\r\n       hasOwnProperty.call(data, key);\r\n       key = s + i++) {\r\n    if (same(data[key].key, k))\r\n      return data[key]\r\n  }\r\n}\r\n\r\nfunction set (data, k, v) {\r\n  for (var i = 0, s = '_' + k, key = s;\r\n       hasOwnProperty.call(data, key);\r\n       key = s + i++) {\r\n    if (same(data[key].key, k)) {\r\n      data[key].value = v\r\n      return\r\n    }\r\n  }\r\n  data.size++\r\n  data[key] = new Entry(k, v, key)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}