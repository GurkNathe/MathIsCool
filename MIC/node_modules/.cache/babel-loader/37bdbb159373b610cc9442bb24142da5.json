{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIs = require(\"react-is\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _isValueSelected = _interopRequireDefault(require(\"./isValueSelected\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _utils = require(\"@material-ui/core/utils\");\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\n\nexports.styles = styles;\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", (0, _extends2.default)({\n    role: \"group\",\n    className: (0, _clsx.default)(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if ((0, _reactIs.isFragment)(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: (0, _clsx.default)(classes.grouped, classes[\"grouped\".concat((0, _utils.capitalize)(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? (0, _isValueSelected.default)(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the button.\r\n   */\n  children: _propTypes.default.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: _propTypes.default.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: _propTypes.default.string,\n\n  /**\r\n   * If `true`, only allow one of the child ToggleButton values to be selected.\r\n   */\n  exclusive: _propTypes.default.bool,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {any} value of the selected buttons. When `exclusive` is true\r\n   * this is a single value; when false an array of selected values. If no value\r\n   * is selected and `exclusive` is true the value is null; when false an empty array.\r\n   */\n  onChange: _propTypes.default.func,\n\n  /**\r\n   * The group orientation (layout flow direction).\r\n   */\n  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The size of the buttons.\r\n   */\n  size: _propTypes.default.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * The currently selected value within the group or an array of selected\r\n   * values when `exclusive` is false.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/node_modules/@material-ui/lab/ToggleButtonGroup/ToggleButtonGroup.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","styles","_extends2","_objectWithoutProperties2","React","_reactIs","_propTypes","_clsx","_isValueSelected","_styles","_utils","theme","root","display","borderRadius","shape","vertical","flexDirection","grouped","groupedHorizontal","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","ToggleButtonGroup","forwardRef","ToggleButton","props","ref","children","classes","className","_props$exclusive","exclusive","onChange","_props$orientation","orientation","_props$size","size","other","handleChange","event","buttonValue","index","indexOf","newValue","slice","splice","concat","handleExclusiveChange","createElement","role","Children","map","child","isValidElement","process","env","NODE_ENV","isFragment","console","error","join","cloneElement","capitalize","selected","undefined","propTypes","node","object","string","bool","func","oneOf","any","_default","withStyles","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIs = require(\"react-is\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _isValueSelected = _interopRequireDefault(require(\"./isValueSelected\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _utils = require(\"@material-ui/core/utils\");\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\n\nexports.styles = styles;\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", (0, _extends2.default)({\n    role: \"group\",\n    className: (0, _clsx.default)(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if ((0, _reactIs.isFragment)(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: (0, _clsx.default)(classes.grouped, classes[\"grouped\".concat((0, _utils.capitalize)(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? (0, _isValueSelected.default)(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the button.\r\n   */\n  children: _propTypes.default.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: _propTypes.default.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: _propTypes.default.string,\n\n  /**\r\n   * If `true`, only allow one of the child ToggleButton values to be selected.\r\n   */\n  exclusive: _propTypes.default.bool,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {any} value of the selected buttons. When `exclusive` is true\r\n   * this is a single value; when false an array of selected values. If no value\r\n   * is selected and `exclusive` is true the value is null; when false an empty array.\r\n   */\n  onChange: _propTypes.default.func,\n\n  /**\r\n   * The group orientation (layout flow direction).\r\n   */\n  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The size of the buttons.\r\n   */\n  size: _propTypes.default.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * The currently selected value within the group or an array of selected\r\n   * values when `exclusive` is false.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}