{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\Files\\\\Coding\\\\Websites\\\\MathIsCool\\\\MIC\\\\src\\\\components\\\\back\\\\TeamRegister.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, MenuItem, makeStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\"; //Options for each dropdown. Probably use JSON for them\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"test1\",\n  label: \"test1\"\n}, {\n  value: \"test2\",\n  label: \"test2\"\n}, {\n  value: \"test3\",\n  label: \"test3\"\n}, {\n  value: \"test4\",\n  label: \"test4\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\n\nfunction TeamRegister() {\n  _s();\n\n  const classes = useStyles();\n  const [choice, setChoice] = useState({\n    loc: \"\",\n    lev: \"\",\n    school: \"\",\n    coach: \"\"\n  });\n\n  const onChange = (event, type) => {\n    switch (type) {\n      case \"location\":\n        setChoice(prevState => ({ ...prevState,\n          loc: event.target.value\n        }));\n        break;\n\n      case \"level\":\n        setChoice(prevState => ({ ...prevState,\n          lev: event.target.value\n        }));\n        break;\n\n      case \"school\":\n        setChoice(prevState => ({ ...prevState,\n          school: event.target.value\n        }));\n        break;\n\n      case \"coach\":\n        setChoice(prevState => ({ ...prevState,\n          coach: event.target.value\n        }));\n        break;\n\n      default:\n        console.log(event, type);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Rules for Individuals:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), \" Any student may compete as an individual in their grade level or any higher grade; however, a student may compete as a team at one grade level only. This applies to both Championships and Masters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 39\n      }, this), \"Also note each team includes four students in addition to two alternates per school that can compete as individuals. So when registering n teams , you get to bring 4n+2 students along. These students don't need to be registered as individuals separately.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Competition Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          variant: \"outlined\",\n          label: \"Please Select Location\",\n          value: choice.loc,\n          onChange: event => onChange(event, \"location\"),\n          children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Competition Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          variant: \"outlined\",\n          label: \"Please Select Grade Level\",\n          value: choice.lev,\n          onChange: event => onChange(event, \"level\"),\n          children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"School Registering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          search: true,\n          variant: \"outlined\",\n          label: \"Please Select School\",\n          value: choice.school,\n          onChange: event => onChange(event, \"school\"),\n          children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Coach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          label: \"Coach\",\n          value: choice.coach,\n          onChange: event => onChange(event, \"coach\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TeamRegister, \"rSoxZZ/KLnVvV7qRvYAhkXGqCaY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TeamRegister;\nexport default TeamRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamRegister\");","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/src/components/back/TeamRegister.js"],"names":["TextField","MenuItem","makeStyles","React","useState","options","value","label","useStyles","theme","root","margin","spacing","width","TeamRegister","classes","choice","setChoice","loc","lev","school","coach","onChange","event","type","prevState","target","console","log","paddingLeft","display","map","option"],"mappings":"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","sourcesContent":["import { TextField, MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nconst options = [\r\n   {\r\n      value: \"test1\",\r\n      label: \"test1\",\r\n   },\r\n   {\r\n      value: \"test2\",\r\n      label: \"test2\",\r\n   },\r\n   {\r\n      value: \"test3\",\r\n      label: \"test3\",\r\n   },\r\n   {\r\n      value: \"test4\",\r\n      label: \"test4\",\r\n   },\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n }));\r\n\r\nfunction TeamRegister(){\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({loc: \"\", lev: \"\", school: \"\", coach: \"\"});\r\n\r\n   const onChange = (event, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               loc: event.target.value,\r\n            }));\r\n            break;\r\n         case \"level\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               lev: event.target.value,\r\n            }));\r\n            break;\r\n         case \"school\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               school: event.target.value,\r\n            }));\r\n            break;\r\n         case \"coach\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               coach: event.target.value,\r\n            }));\r\n            break;\r\n         default:\r\n            console.log(event, type)\r\n      }\r\n   };\r\n\r\n   return(\r\n      <div style={{paddingLeft:\"50px\"}}>\r\n         <p>\r\n            <b>Rules for Individuals:</b> Any student may compete as an individual \r\n            in their grade level or any higher grade; however, a student may \r\n            compete as a team at one grade level only. This applies to both \r\n            Championships and Masters.<br/>\r\n\r\n            Also note each team includes four students in addition to \r\n            two alternates per school that can compete as individuals. So \r\n            when registering n teams , you get to bring 4n+2 students along. \r\n            These students don't need to be registered as individuals separately.\r\n         </p>\r\n         <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div style={{display:\"flex\"}}>\r\n               <p>Competition Location</p>\r\n               <TextField\r\n                  select\r\n                  variant=\"outlined\"\r\n                  label=\"Please Select Location\"\r\n                  value={choice.loc}\r\n                  onChange={(event) => onChange(event, \"location\")}\r\n               >\r\n                  {options.map((option) => (\r\n                     <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                     </MenuItem>\r\n                  ))}\r\n               </TextField>\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <p>Competition Level</p>\r\n               <TextField\r\n                  select\r\n                  variant=\"outlined\"\r\n                  label=\"Please Select Grade Level\"\r\n                  value={choice.lev}\r\n                  onChange={(event) => onChange(event, \"level\")}\r\n               >\r\n                  {options.map((option) => (\r\n                     <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                     </MenuItem>\r\n                  ))}\r\n               </TextField>\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <p>School Registering</p>\r\n               <TextField\r\n                  search\r\n                  variant=\"outlined\"\r\n                  label=\"Please Select School\"\r\n                  value={choice.school}\r\n                  onChange={(event) => onChange(event, \"school\")}\r\n               >\r\n                  {options.map((option) => (\r\n                     <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                     </MenuItem>\r\n                  ))}\r\n               </TextField>\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <p>Coach</p>\r\n               <TextField\r\n                  variant=\"outlined\" \r\n                  margin=\"normal\" \r\n                  required\r\n                  label=\"Coach\"\r\n                  value={choice.coach}\r\n                  onChange={(event) => onChange(event, \"coach\")}\r\n               >\r\n\r\n               </TextField>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TeamRegister;"]},"metadata":{},"sourceType":"module"}