{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\Files\\\\Coding\\\\Websites\\\\MathIsCool\\\\MIC\\\\src\\\\components\\\\back\\\\TeamRegister.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, MenuItem, makeStyles, Grid } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState } from \"react\"; //Options for each dropdown. Probably use JSON for them\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet options = require(\"./options\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\n\nfunction TeamRegister() {\n  _s();\n\n  const classes = useStyles();\n  const [choice, setChoice] = useState({\n    loc: \"\",\n    lev: \"\",\n    school: \"\",\n    coach: \"\"\n  });\n\n  const onChange = (event, type) => {\n    switch (type) {\n      case \"location\":\n        setChoice(prevState => ({ ...prevState,\n          loc: event.target.value\n        }));\n        console.log(choice);\n        break;\n\n      case \"level\":\n        setChoice(prevState => ({ ...prevState,\n          lev: event.target.value\n        }));\n        console.log(choice);\n        break;\n\n      case \"school\":\n        // setChoice((prevState) => ({\n        //    ...prevState,\n        //    school: event.target.value,\n        // }));\n        console.log(choice);\n        break;\n\n      case \"coach\":\n        setChoice(prevState => ({ ...prevState,\n          coach: event.target.value\n        }));\n        break;\n\n      default:\n        console.log(event, type);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Rules for Individuals:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), \" Any student may compete as an individual in their grade level or any higher grade; however, a student may compete as a team at one grade level only. This applies to both Championships and Masters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this), \"Also note each team includes four students in addition to two alternates per school that can compete as individuals. So when registering n teams , you get to bring 4n+2 students along. These students don't need to be registered as individuals separately.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Competition Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          variant: \"outlined\",\n          label: \"Please Select Location\",\n          value: choice.loc,\n          onChange: event => onChange(event, \"location\"),\n          children: options.locations.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Competition Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          variant: \"outlined\",\n          label: \"Please Select Grade Level\",\n          value: choice.lev,\n          onChange: event => onChange(event, \"level\"),\n          children: options.level.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"School Registering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: options.locations,\n          getOptionLabel: option => option.label,\n          value: choice.school,\n          onChange: newValue => onChange(newValue, \"school\"),\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Select Your School\",\n            variant: \"outlined\",\n            inputProps: { ...params.inputProps,\n              autoComplete: 'new-password'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Coach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          label: \"Coach\",\n          value: choice.coach,\n          onChange: event => onChange(event, \"coach\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TeamRegister, \"rSoxZZ/KLnVvV7qRvYAhkXGqCaY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TeamRegister;\nexport default TeamRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamRegister\");","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/src/components/back/TeamRegister.js"],"names":["TextField","MenuItem","makeStyles","Grid","Autocomplete","React","useState","options","require","useStyles","theme","root","margin","spacing","width","TeamRegister","classes","choice","setChoice","loc","lev","school","coach","onChange","event","type","prevState","target","value","console","log","paddingLeft","display","locations","map","option","label","level","newValue","params","inputProps","autoComplete"],"mappings":"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","sourcesContent":["import { TextField, MenuItem, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n }));\r\n\r\nfunction TeamRegister(){\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({loc: \"\", lev: \"\", school: \"\", coach: \"\"});\r\n\r\n   const onChange = (event, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               loc: event.target.value,\r\n            }));\r\n            console.log(choice)\r\n            break;\r\n         case \"level\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               lev: event.target.value,\r\n            }));\r\n            console.log(choice)\r\n            break;\r\n         case \"school\":\r\n            // setChoice((prevState) => ({\r\n            //    ...prevState,\r\n            //    school: event.target.value,\r\n            // }));\r\n            console.log(choice)\r\n            break;\r\n         case \"coach\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               coach: event.target.value,\r\n            }));\r\n            break;\r\n         default:\r\n            console.log(event, type)\r\n      }\r\n   };\r\n\r\n   return(\r\n      <div style={{paddingLeft:\"10px\"}}>\r\n         <p>\r\n            <b>Rules for Individuals:</b> Any student may compete as an individual \r\n            in their grade level or any higher grade; however, a student may \r\n            compete as a team at one grade level only. This applies to both \r\n            Championships and Masters.<br/>\r\n\r\n            Also note each team includes four students in addition to \r\n            two alternates per school that can compete as individuals. So \r\n            when registering n teams , you get to bring 4n+2 students along. \r\n            These students don't need to be registered as individuals separately.\r\n         </p>\r\n         <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Competition Location</p>\r\n               </Grid>\r\n               <TextField\r\n                  select\r\n                  variant=\"outlined\"\r\n                  label=\"Please Select Location\"\r\n                  value={choice.loc}\r\n                  onChange={(event) => onChange(event, \"location\")}\r\n               >\r\n                  {options.locations.map((option) => (\r\n                     <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                     </MenuItem>\r\n                  ))}\r\n               </TextField>\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Competition Level</p>\r\n               </Grid>\r\n               <TextField\r\n                  select\r\n                  variant=\"outlined\"\r\n                  label=\"Please Select Grade Level\"\r\n                  value={choice.lev}\r\n                  onChange={(event) => onChange(event, \"level\")}\r\n               >\r\n                  {options.level.map((option) => (\r\n                     <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                     </MenuItem>\r\n                  ))}\r\n               </TextField>\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>School Registering</p>\r\n               </Grid>\r\n\r\n               <Autocomplete\r\n                  options={options.locations}\r\n                  getOptionLabel={(option) => option.label}\r\n                  value={choice.school}\r\n                  onChange={(newValue) => onChange(newValue, \"school\")}\r\n                  style={{ width: 300 }}\r\n                  renderInput={(params) => \r\n                                 <TextField \r\n                                    {...params} \r\n                                    label=\"Select Your School\" \r\n                                    variant=\"outlined\"\r\n                                    inputProps={{\r\n                                       ...params.inputProps,\r\n                                       autoComplete: 'new-password',\r\n                                    }}\r\n                                 />\r\n                              }\r\n               />\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Coach</p>\r\n               </Grid>\r\n               <TextField\r\n                  variant=\"outlined\" \r\n                  margin=\"normal\" \r\n                  required\r\n                  label=\"Coach\"\r\n                  value={choice.coach}\r\n                  onChange={(event) => onChange(event, \"coach\")}\r\n               >\r\n\r\n               </TextField>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TeamRegister;"]},"metadata":{},"sourceType":"module"}