{"ast":null,"code":"/*! firebase-admin v9.10.0 */\n\"use strict\";\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceId = void 0;\n\nvar error_1 = require(\"../utils/error\");\n\nvar validator = require(\"../utils/validator\");\n/**\r\n * Gets the {@link InstanceId `InstanceId`} service for the\r\n * current app.\r\n *\r\n * @example\r\n * ```javascript\r\n * var instanceId = app.instanceId();\r\n * // The above is shorthand for:\r\n * // var instanceId = admin.instanceId(app);\r\n * ```\r\n *\r\n * @return The `InstanceId` service for the\r\n *   current app.\r\n */\n\n\nvar InstanceId =\n/** @class */\nfunction () {\n  /**\r\n   * @param app The app for this InstanceId service.\r\n   * @constructor\r\n   */\n  function InstanceId(app) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.instanceId() must be a valid Firebase app instance.');\n    }\n\n    this.app_ = app;\n  }\n  /**\r\n   * Deletes the specified instance ID and the associated data from Firebase.\r\n   *\r\n   * Note that Google Analytics for Firebase uses its own form of Instance ID to\r\n   * keep track of analytics data. Therefore deleting a Firebase Instance ID does\r\n   * not delete Analytics data. See\r\n   * [Delete an Instance ID](/support/privacy/manage-iids#delete_an_instance_id)\r\n   * for more information.\r\n   *\r\n   * @param instanceId The instance ID to be deleted.\r\n   *\r\n   * @return A promise fulfilled when the instance ID is deleted.\r\n   */\n\n\n  InstanceId.prototype.deleteInstanceId = function (instanceId) {\n    return this.app.installations().deleteInstallation(instanceId).catch(function (err) {\n      if (err instanceof error_1.FirebaseInstallationsError) {\n        var code = err.code.replace('installations/', '');\n\n        if (code === error_1.InstallationsClientErrorCode.INVALID_INSTALLATION_ID.code) {\n          code = error_1.InstanceIdClientErrorCode.INVALID_INSTANCE_ID.code;\n        }\n\n        throw new error_1.FirebaseInstanceIdError({\n          code: code,\n          message: err.message\n        });\n      }\n\n      throw err;\n    });\n  };\n\n  Object.defineProperty(InstanceId.prototype, \"app\", {\n    /**\r\n     * Returns the app associated with this InstanceId instance.\r\n     *\r\n     * @return The app associated with this InstanceId instance.\r\n     */\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return InstanceId;\n}();\n\nexports.InstanceId = InstanceId;","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/node_modules/firebase-admin/lib/instance-id/instance-id.js"],"names":["Object","defineProperty","exports","value","InstanceId","error_1","require","validator","app","isNonNullObject","FirebaseInstanceIdError","InstanceIdClientErrorCode","INVALID_ARGUMENT","app_","prototype","deleteInstanceId","instanceId","installations","deleteInstallation","catch","err","FirebaseInstallationsError","code","replace","InstallationsClientErrorCode","INVALID_INSTALLATION_ID","INVALID_INSTANCE_ID","message","get","enumerable","configurable"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,UAAU;AAAG;AAAe,YAAY;AACxC;AACJ;AACA;AACA;AACI,WAASA,UAAT,CAAoBI,GAApB,EAAyB;AACrB,QAAI,CAACD,SAAS,CAACE,eAAV,CAA0BD,GAA1B,CAAD,IAAmC,EAAE,aAAaA,GAAf,CAAvC,EAA4D;AACxD,YAAM,IAAIH,OAAO,CAACK,uBAAZ,CAAoCL,OAAO,CAACM,yBAAR,CAAkCC,gBAAtE,EAAwF,oFAAxF,CAAN;AACH;;AACD,SAAKC,IAAL,GAAYL,GAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIJ,EAAAA,UAAU,CAACU,SAAX,CAAqBC,gBAArB,GAAwC,UAAUC,UAAV,EAAsB;AAC1D,WAAO,KAAKR,GAAL,CAASS,aAAT,GAAyBC,kBAAzB,CAA4CF,UAA5C,EACFG,KADE,CACI,UAAUC,GAAV,EAAe;AACtB,UAAIA,GAAG,YAAYf,OAAO,CAACgB,0BAA3B,EAAuD;AACnD,YAAIC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,gBAAjB,EAAmC,EAAnC,CAAX;;AACA,YAAID,IAAI,KAAKjB,OAAO,CAACmB,4BAAR,CAAqCC,uBAArC,CAA6DH,IAA1E,EAAgF;AAC5EA,UAAAA,IAAI,GAAGjB,OAAO,CAACM,yBAAR,CAAkCe,mBAAlC,CAAsDJ,IAA7D;AACH;;AACD,cAAM,IAAIjB,OAAO,CAACK,uBAAZ,CAAoC;AAAEY,UAAAA,IAAI,EAAEA,IAAR;AAAcK,UAAAA,OAAO,EAAEP,GAAG,CAACO;AAA3B,SAApC,CAAN;AACH;;AACD,YAAMP,GAAN;AACH,KAVM,CAAP;AAWH,GAZD;;AAaApB,EAAAA,MAAM,CAACC,cAAP,CAAsBG,UAAU,CAACU,SAAjC,EAA4C,KAA5C,EAAmD;AAC/C;AACR;AACA;AACA;AACA;AACQc,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKf,IAAZ;AACH,KAR8C;AAS/CgB,IAAAA,UAAU,EAAE,KATmC;AAU/CC,IAAAA,YAAY,EAAE;AAViC,GAAnD;AAYA,SAAO1B,UAAP;AACH,CAlD+B,EAAhC;;AAmDAF,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["/*! firebase-admin v9.10.0 */\r\n\"use strict\";\r\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InstanceId = void 0;\r\nvar error_1 = require(\"../utils/error\");\r\nvar validator = require(\"../utils/validator\");\r\n/**\r\n * Gets the {@link InstanceId `InstanceId`} service for the\r\n * current app.\r\n *\r\n * @example\r\n * ```javascript\r\n * var instanceId = app.instanceId();\r\n * // The above is shorthand for:\r\n * // var instanceId = admin.instanceId(app);\r\n * ```\r\n *\r\n * @return The `InstanceId` service for the\r\n *   current app.\r\n */\r\nvar InstanceId = /** @class */ (function () {\r\n    /**\r\n     * @param app The app for this InstanceId service.\r\n     * @constructor\r\n     */\r\n    function InstanceId(app) {\r\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\r\n            throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.instanceId() must be a valid Firebase app instance.');\r\n        }\r\n        this.app_ = app;\r\n    }\r\n    /**\r\n     * Deletes the specified instance ID and the associated data from Firebase.\r\n     *\r\n     * Note that Google Analytics for Firebase uses its own form of Instance ID to\r\n     * keep track of analytics data. Therefore deleting a Firebase Instance ID does\r\n     * not delete Analytics data. See\r\n     * [Delete an Instance ID](/support/privacy/manage-iids#delete_an_instance_id)\r\n     * for more information.\r\n     *\r\n     * @param instanceId The instance ID to be deleted.\r\n     *\r\n     * @return A promise fulfilled when the instance ID is deleted.\r\n     */\r\n    InstanceId.prototype.deleteInstanceId = function (instanceId) {\r\n        return this.app.installations().deleteInstallation(instanceId)\r\n            .catch(function (err) {\r\n            if (err instanceof error_1.FirebaseInstallationsError) {\r\n                var code = err.code.replace('installations/', '');\r\n                if (code === error_1.InstallationsClientErrorCode.INVALID_INSTALLATION_ID.code) {\r\n                    code = error_1.InstanceIdClientErrorCode.INVALID_INSTANCE_ID.code;\r\n                }\r\n                throw new error_1.FirebaseInstanceIdError({ code: code, message: err.message });\r\n            }\r\n            throw err;\r\n        });\r\n    };\r\n    Object.defineProperty(InstanceId.prototype, \"app\", {\r\n        /**\r\n         * Returns the app associated with this InstanceId instance.\r\n         *\r\n         * @return The app associated with this InstanceId instance.\r\n         */\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return InstanceId;\r\n}());\r\nexports.InstanceId = InstanceId;\r\n"]},"metadata":{},"sourceType":"script"}