{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\Files\\\\Coding\\\\Websites\\\\MathIsCool\\\\MIC\\\\src\\\\components\\\\back\\\\TeamRegister.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport Auto from \"../random/Auto.js\";\nimport fire from \"../fire\"; //Options for each dropdown. Probably use JSON for them\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet options = require(\"./options\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\n\nfunction TeamRegister() {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  const [choice, setChoice] = useState({\n    loc: null,\n    lev: null,\n    school: null,\n    team: null,\n    indiv: null,\n    coach: \"\",\n    error: false\n  });\n  let longest = 0;\n  var schoolData = {\n    value: null,\n    label: null,\n    div: null\n  };\n  const user = {\n    email: fire.auth().currentUser.email,\n    name: fire.auth().currentUser.displayName\n  };\n  var url = \"\"; //finding length of longest string in options and resize search box accordingly\n\n  for (var option in options) {\n    for (let i = 0; i < Object.keys(options[option]).length; i++) {\n      if (options[option][i].label.length > longest) longest = options[option][i].label.length;\n    }\n  } //don't know if there is a good way to do this, couldn't find anything\n\n\n  longest *= 10;\n\n  const onChange = (newValue, type) => {\n    switch (type) {\n      case \"location\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            loc: newValue,\n            error: false\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            loc: null,\n            error: false\n          }));\n        }\n\n        break;\n\n      case \"level\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            lev: newValue,\n            error: false\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            lev: null,\n            error: false\n          }));\n        }\n\n        break;\n\n      case \"school\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            school: newValue,\n            error: false\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            school: null,\n            error: false\n          }));\n        }\n\n        break;\n\n      case \"team\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            team: newValue,\n            error: false\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            team: null,\n            error: false\n          }));\n        }\n\n        break;\n\n      case \"indiv\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            indiv: newValue,\n            error: false\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            indiv: null,\n            error: false\n          }));\n        }\n\n        break;\n\n      case \"coach\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            coach: newValue.target.value,\n            error: false\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            coach: \"\",\n            error: false\n          }));\n        }\n\n        break;\n\n      default:\n        console.log(newValue, type);\n    }\n  };\n\n  const onSubmit = () => {\n    setError(choice);\n    setSchoolData();\n\n    for (const item in choice) {\n      choice[item] = choice[item].trim();\n    }\n\n    setURL(choice, schoolData); // if(!choice.error){\n    //    history.push({\n    //       pathname: `/team-register/confirm/`,\n    //       state:{\n    //          key: url\n    //       }\n    //    });\n    // }\n  }; //Setting error if something is not filled out.\n\n\n  const setError = choice => {\n    for (const item in choice) {\n      if (choice[item] === null || choice[item] === \"\") {\n        console.log(\"ERROR :\", item);\n        setChoice(prevState => ({ ...prevState,\n          error: true\n        }));\n        break;\n      }\n    }\n  };\n\n  const setURL = (choice, schoolData) => {\n    url = `https://docs.google.com/forms/d/e/1FAIpQLSf8UTjphTqcOHwmrdGEG8Jsbjz4eVz7d6XVlgW7AlnM28vq_g/viewform?usp=pp_url\n               &entry.1015404157=${user.email}\n               &entry.1951055040=${user.name}\n               &entry.62573940=${choice.loc}\n               &entry.1929366142=${choice.lev}\n               &entry.680121242=${choice.team}\n               &entry.641937550=${choice.indiv}\n               &entry.1389254068=${schoolData.value}\n               &entry.1720714498=${choice.coach}`;\n  }; //Getting all the data for that school\n\n\n  const setSchoolData = () => {\n    for (option in options.school) {\n      if (options.school[option].label === choice.school) {\n        schoolData = {\n          value: options.school[option].value,\n          label: options.school[option].label,\n          div: options.school[option].div\n        };\n        break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        borderRadius: \"4px\",\n        margin: \"2%\",\n        boxShadow: \"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"1%\",\n          marginRight: \"1%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Rules for Individuals:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this), \" Any student may compete as an individual in their grade level or any higher grade; however, a student may compete as a team at one grade level only. This applies to both Championships and Masters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 50\n          }, this), \"Also note each team includes four students in addition to two alternates per school that can compete as individuals. So when registering n teams , you get to bring 4n+2 students along. These students don't need to be registered as individuals separately.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Competition Location\",\n            options: options.locations,\n            text: \"Select Competition Location\",\n            onChange: (event, newValue) => onChange(newValue, \"location\"),\n            width: longest,\n            value: choice.loc,\n            error: choice.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Competition Level\",\n            options: options.level,\n            text: \"Select Your Grade Level\",\n            onChange: (event, newValue) => onChange(newValue, \"level\"),\n            width: longest,\n            value: choice.lev,\n            error: choice.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"School Registering\",\n            options: options.school,\n            text: \"Select Your School\",\n            onChange: (event, newValue) => onChange(newValue, \"school\"),\n            width: longest,\n            value: choice.school,\n            error: choice.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Number Teams\",\n            options: options.numteam,\n            text: \"Select Number of Teams\",\n            onChange: (event, newValue) => onChange(newValue, \"team\"),\n            width: longest,\n            value: choice.team,\n            error: choice.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Number Individuals\",\n            options: options.numteam,\n            text: \"Select Number of Individuals\",\n            onChange: (event, newValue) => onChange(newValue, \"indiv\"),\n            width: longest,\n            value: choice.indiv,\n            error: choice.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Additional Emails & Coach Names\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: choice.error && choice.coach === \"\",\n              helperText: choice.error && choice.coach === \"\" ? \"Please fill out to continue\" : \"Example: someone@gmail.com, John Doe\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              label: \"Emails and Coaches\",\n              value: choice.coach,\n              onChange: event => onChange(event, \"coach\"),\n              style: {\n                width: longest\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 3,\n              width: longest,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: onSubmit,\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A school's division level is assigned based on past performance at Math is Cool contests. For more details and a current list of schools and assignments, see\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"../../assets/divisions.pdf\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"2018-19 Divisions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TeamRegister, \"kODacVeaME5DQDwuL7ZDJbrRrSM=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = TeamRegister;\nexport default TeamRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamRegister\");","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/src/components/back/TeamRegister.js"],"names":["TextField","Button","makeStyles","Grid","useHistory","React","useState","Auto","fire","options","require","useStyles","theme","root","margin","spacing","width","TeamRegister","history","classes","choice","setChoice","loc","lev","school","team","indiv","coach","error","longest","schoolData","value","label","div","user","email","auth","currentUser","name","displayName","url","option","i","Object","keys","length","onChange","newValue","type","prevState","target","console","log","onSubmit","setError","setSchoolData","item","trim","setURL","display","flexDirection","borderRadius","boxShadow","marginLeft","marginRight","locations","event","level","numteam"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,IAAxC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;;;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACtCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AADgC,CAAZ,CAAD,CAA5B;;AASA,SAASC,YAAT,GAAuB;AAAA;;AACpB,QAAMC,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC;AAAEgB,IAAAA,GAAG,EAAE,IAAP;AACEC,IAAAA,GAAG,EAAE,IADP;AAEEC,IAAAA,MAAM,EAAE,IAFV;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,KAAK,EAAE,IAJT;AAKEC,IAAAA,KAAK,EAAE,EALT;AAMEC,IAAAA,KAAK,EAAE;AANT,GAAD,CAApC;AASA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,UAAU,GAAG;AAACC,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE,IAArB;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GAAjB;AACA,QAAMC,IAAI,GAAG;AAACC,IAAAA,KAAK,EAAE3B,IAAI,CAAC4B,IAAL,GAAYC,WAAZ,CAAwBF,KAAhC;AAAuCG,IAAAA,IAAI,EAAE9B,IAAI,CAAC4B,IAAL,GAAYC,WAAZ,CAAwBE;AAArE,GAAb;AAEA,MAAIC,GAAG,GAAG,EAAV,CAhBoB,CAkBpB;;AACA,OAAI,IAAIC,MAAR,IAAkBhC,OAAlB,EAA0B;AACvB,SAAI,IAAIiC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYnC,OAAO,CAACgC,MAAD,CAAnB,EAA6BI,MAAhD,EAAwDH,CAAC,EAAzD,EAA4D;AACzD,UAAGjC,OAAO,CAACgC,MAAD,CAAP,CAAgBC,CAAhB,EAAmBV,KAAnB,CAAyBa,MAAzB,GAAkChB,OAArC,EACGA,OAAO,GAAGpB,OAAO,CAACgC,MAAD,CAAP,CAAgBC,CAAhB,EAAmBV,KAAnB,CAAyBa,MAAnC;AACL;AACH,GAxBmB,CA0BpB;;;AACAhB,EAAAA,OAAO,IAAI,EAAX;;AAEA,QAAMiB,QAAQ,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAClC,YAAQA,IAAR;AACG,WAAK,UAAL;AACG,YAAGD,QAAQ,IAAI,IAAf,EAAoB;AACjB1B,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB3B,YAAAA,GAAG,EAAEyB,QAFkB;AAGvBnB,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF,SAND,MAMO;AACJP,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB3B,YAAAA,GAAG,EAAE,IAFkB;AAGvBM,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF;;AACD;;AACH,WAAK,OAAL;AACG,YAAGmB,QAAQ,IAAI,IAAf,EAAoB;AACjB1B,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB1B,YAAAA,GAAG,EAAEwB,QAFkB;AAGvBnB,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF,SAND,MAMO;AACJP,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB1B,YAAAA,GAAG,EAAE,IAFkB;AAGvBK,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF;;AACD;;AACH,WAAK,QAAL;AACG,YAAGmB,QAAQ,IAAI,IAAf,EAAoB;AACjB1B,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBzB,YAAAA,MAAM,EAAEuB,QAFe;AAGvBnB,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF,SAND,MAMO;AACJP,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBzB,YAAAA,MAAM,EAAE,IAFe;AAGvBI,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF;;AACD;;AACH,WAAK,MAAL;AACG,YAAGmB,QAAQ,IAAI,IAAf,EAAoB;AACjB1B,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBxB,YAAAA,IAAI,EAAEsB,QAFiB;AAGvBnB,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF,SAND,MAMO;AACJP,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBxB,YAAAA,IAAI,EAAE,IAFiB;AAGvBG,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF;;AACD;;AACH,WAAK,OAAL;AACG,YAAGmB,QAAQ,IAAI,IAAf,EAAoB;AACjB1B,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBvB,YAAAA,KAAK,EAAEqB,QAFgB;AAGvBnB,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF,SAND,MAMO;AACJP,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBvB,YAAAA,KAAK,EAAE,IAFgB;AAGvBE,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF;;AACD;;AACH,WAAK,OAAL;AACG,YAAGmB,QAAQ,IAAI,IAAf,EAAoB;AACjB1B,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBtB,YAAAA,KAAK,EAAEoB,QAAQ,CAACG,MAAT,CAAgBnB,KAFA;AAGvBH,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF,SAND,MAMO;AACJP,UAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBtB,YAAAA,KAAK,EAAE,EAFgB;AAGvBC,YAAAA,KAAK,EAAE;AAHgB,WAAhB,CAAD,CAAT;AAKF;;AACD;;AACH;AACGuB,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBC,IAAtB;AA5FN;AA8FF,GA/FD;;AAiGA,QAAMK,QAAQ,GAAG,MAAM;AAEpBC,IAAAA,QAAQ,CAAClC,MAAD,CAAR;AACAmC,IAAAA,aAAa;;AACb,SAAI,MAAMC,IAAV,IAAkBpC,MAAlB,EAAyB;AACtBA,MAAAA,MAAM,CAACoC,IAAD,CAAN,GAAepC,MAAM,CAACoC,IAAD,CAAN,CAAaC,IAAb,EAAf;AACF;;AACDC,IAAAA,MAAM,CAACtC,MAAD,EAASU,UAAT,CAAN,CAPoB,CAWpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,GAnBD,CA9HoB,CAmJpB;;;AACA,QAAMwB,QAAQ,GAAIlC,MAAD,IAAY;AAC1B,SAAK,MAAMoC,IAAX,IAAmBpC,MAAnB,EAA0B;AACvB,UAAGA,MAAM,CAACoC,IAAD,CAAN,KAAiB,IAAjB,IAAyBpC,MAAM,CAACoC,IAAD,CAAN,KAAiB,EAA7C,EAAgD;AAC7CL,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,IAAvB;AACAnC,QAAAA,SAAS,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBrB,UAAAA,KAAK,EAAE;AAFgB,SAAhB,CAAD,CAAT;AAIA;AACF;AACH;AACH,GAXD;;AAaA,QAAM8B,MAAM,GAAG,CAACtC,MAAD,EAASU,UAAT,KAAwB;AACpCU,IAAAA,GAAG,GAAI;AACb,mCAAmCN,IAAI,CAACC,KAAM;AAC9C,mCAAmCD,IAAI,CAACI,IAAK;AAC7C,iCAAiClB,MAAM,CAACE,GAAI;AAC5C,mCAAmCF,MAAM,CAACG,GAAI;AAC9C,kCAAkCH,MAAM,CAACK,IAAK;AAC9C,kCAAkCL,MAAM,CAACM,KAAM;AAC/C,mCAAmCI,UAAU,CAACC,KAAM;AACpD,mCAAmCX,MAAM,CAACO,KAAM,EAR1C;AASF,GAVD,CAjKoB,CA6KpB;;;AACA,QAAM4B,aAAa,GAAG,MAAM;AACzB,SAAId,MAAJ,IAAchC,OAAO,CAACe,MAAtB,EAA6B;AAC1B,UAAGf,OAAO,CAACe,MAAR,CAAeiB,MAAf,EAAuBT,KAAvB,KAAiCZ,MAAM,CAACI,MAA3C,EAAkD;AAC/CM,QAAAA,UAAU,GAAG;AACVC,UAAAA,KAAK,EAAEtB,OAAO,CAACe,MAAR,CAAeiB,MAAf,EAAuBV,KADpB;AAEVC,UAAAA,KAAK,EAAEvB,OAAO,CAACe,MAAR,CAAeiB,MAAf,EAAuBT,KAFpB;AAGVC,UAAAA,GAAG,EAAExB,OAAO,CAACe,MAAR,CAAeiB,MAAf,EAAuBR;AAHlB,SAAb;AAKA;AACF;AACH;AACH,GAXD;;AAaA,sBACG;AAAK,IAAA,KAAK,EAAE;AAAC0B,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAC;AAAhC,KAAZ;AAAA,2BACG;AAAK,MAAA,KAAK,EAAE;AAAC5C,QAAAA,KAAK,EAAC,MAAP;AAAe6C,QAAAA,YAAY,EAAE,KAA7B;AAAoC/C,QAAAA,MAAM,EAAC,IAA3C;AAAiDgD,QAAAA,SAAS,EAAC;AAA3D,OAAZ;AAAA,6BACG;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,IAAZ;AAAkBC,UAAAA,WAAW,EAAC;AAA9B,SAAZ;AAAA,gCACG;AAAA,kCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,wNAI6B;AAAA;AAAA;AAAA;AAAA,kBAJ7B,eAIkC;AAAA;AAAA;AAAA;AAAA,kBAJlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAYG;AAAM,UAAA,SAAS,EAAE7C,OAAO,CAACN,IAAzB;AAA+B,UAAA,UAAU,MAAzC;AAA0C,UAAA,YAAY,EAAC,KAAvD;AAAA,kCAEG,QAAC,IAAD;AACG,YAAA,KAAK,EAAC,sBADT;AAEG,YAAA,OAAO,EAAEJ,OAAO,CAACwD,SAFpB;AAGG,YAAA,IAAI,EAAC,6BAHR;AAIG,YAAA,QAAQ,EAAE,CAACC,KAAD,EAAQnB,QAAR,KAAqBD,QAAQ,CAACC,QAAD,EAAW,UAAX,CAJ1C;AAKG,YAAA,KAAK,EAAElB,OALV;AAMG,YAAA,KAAK,EAAET,MAAM,CAACE,GANjB;AAOG,YAAA,KAAK,EAAEF,MAAM,CAACQ;AAPjB;AAAA;AAAA;AAAA;AAAA,kBAFH,eAYG,QAAC,IAAD;AACG,YAAA,KAAK,EAAC,mBADT;AAEG,YAAA,OAAO,EAAEnB,OAAO,CAAC0D,KAFpB;AAGG,YAAA,IAAI,EAAC,yBAHR;AAIG,YAAA,QAAQ,EAAE,CAACD,KAAD,EAAQnB,QAAR,KAAqBD,QAAQ,CAACC,QAAD,EAAW,OAAX,CAJ1C;AAKG,YAAA,KAAK,EAAElB,OALV;AAMG,YAAA,KAAK,EAAET,MAAM,CAACG,GANjB;AAOG,YAAA,KAAK,EAAEH,MAAM,CAACQ;AAPjB;AAAA;AAAA;AAAA;AAAA,kBAZH,eAsBG,QAAC,IAAD;AACG,YAAA,KAAK,EAAC,oBADT;AAEG,YAAA,OAAO,EAAEnB,OAAO,CAACe,MAFpB;AAGG,YAAA,IAAI,EAAC,oBAHR;AAIG,YAAA,QAAQ,EAAE,CAAC0C,KAAD,EAAQnB,QAAR,KAAqBD,QAAQ,CAACC,QAAD,EAAW,QAAX,CAJ1C;AAKG,YAAA,KAAK,EAAElB,OALV;AAMG,YAAA,KAAK,EAAET,MAAM,CAACI,MANjB;AAOG,YAAA,KAAK,EAAEJ,MAAM,CAACQ;AAPjB;AAAA;AAAA;AAAA;AAAA,kBAtBH,eAgCG,QAAC,IAAD;AACG,YAAA,KAAK,EAAC,cADT;AAEG,YAAA,OAAO,EAAEnB,OAAO,CAAC2D,OAFpB;AAGG,YAAA,IAAI,EAAC,wBAHR;AAIG,YAAA,QAAQ,EAAE,CAACF,KAAD,EAAQnB,QAAR,KAAqBD,QAAQ,CAACC,QAAD,EAAW,MAAX,CAJ1C;AAKG,YAAA,KAAK,EAAElB,OALV;AAMG,YAAA,KAAK,EAAET,MAAM,CAACK,IANjB;AAOG,YAAA,KAAK,EAAEL,MAAM,CAACQ;AAPjB;AAAA;AAAA;AAAA;AAAA,kBAhCH,eA0CG,QAAC,IAAD;AACG,YAAA,KAAK,EAAC,oBADT;AAEG,YAAA,OAAO,EAAEnB,OAAO,CAAC2D,OAFpB;AAGG,YAAA,IAAI,EAAC,8BAHR;AAIG,YAAA,QAAQ,EAAE,CAACF,KAAD,EAAQnB,QAAR,KAAqBD,QAAQ,CAACC,QAAD,EAAW,OAAX,CAJ1C;AAKG,YAAA,KAAK,EAAElB,OALV;AAMG,YAAA,KAAK,EAAET,MAAM,CAACM,KANjB;AAOG,YAAA,KAAK,EAAEN,MAAM,CAACQ;AAPjB;AAAA;AAAA;AAAA;AAAA,kBA1CH,eAoDG;AAAK,YAAA,KAAK,EAAE;AAAC+B,cAAAA,OAAO,EAAC;AAAT,aAAZ;AAAA,oCACG,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,oBADH,eAIG,QAAC,SAAD;AACG,cAAA,KAAK,EAAEvC,MAAM,CAACQ,KAAP,IAAgBR,MAAM,CAACO,KAAP,KAAiB,EAD3C;AAEG,cAAA,UAAU,EAAEP,MAAM,CAACQ,KAAP,IAAgBR,MAAM,CAACO,KAAP,KAAiB,EAAjC,GACG,6BADH,GAEG,sCAJlB;AAMG,cAAA,OAAO,EAAC,UANX;AAOG,cAAA,MAAM,EAAC,QAPV;AAQG,cAAA,QAAQ,MARX;AASG,cAAA,KAAK,EAAC,oBATT;AAUG,cAAA,KAAK,EAAEP,MAAM,CAACO,KAVjB;AAWG,cAAA,QAAQ,EAAGuC,KAAD,IAAWpB,QAAQ,CAACoB,KAAD,EAAQ,OAAR,CAXhC;AAYG,cAAA,KAAK,EAAE;AAAElD,gBAAAA,KAAK,EAAEa;AAAT;AAZV;AAAA;AAAA;AAAA;AAAA,oBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,kBApDH,eAyEG,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACG,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,KAAK,EAAEA,OAAzB;AAAA,qCACG,QAAC,MAAD;AACG,gBAAA,SAAS,MADZ;AAEG,gBAAA,OAAO,EAAC,WAFX;AAGG,gBAAA,KAAK,EAAC,SAHT;AAIG,gBAAA,OAAO,EAAEwB,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,oBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzEH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZH,eAoGG;AAAA,uMAIG;AAAG,YAAA,IAAI,EAAC,4BAAR;AAAqC,YAAA,MAAM,EAAC,QAA5C;AAAqD,YAAA,GAAG,EAAC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBApGH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAiHF;;GA5SQpC,Y;UACUb,U,EACAO,S;;;KAFVM,Y;AA8ST,eAAeA,YAAf","sourcesContent":["import { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport Auto from \"../random/Auto.js\";\r\nimport fire from \"../fire\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n }));\r\n\r\nfunction TeamRegister(){\r\n   const history = useHistory();\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({ loc: null, \r\n                                          lev: null, \r\n                                          school: null,\r\n                                          team: null,\r\n                                          indiv: null,\r\n                                          coach: \"\",\r\n                                          error: false,\r\n                                       });\r\n\r\n   let longest = 0;\r\n   var schoolData = {value: null, label: null, div: null}\r\n   const user = {email: fire.auth().currentUser.email, name: fire.auth().currentUser.displayName};\r\n\r\n   var url = \"\";\r\n\r\n   //finding length of longest string in options and resize search box accordingly\r\n   for(var option in options){\r\n      for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n         if(options[option][i].label.length > longest)\r\n            longest = options[option][i].label.length;\r\n      }\r\n   }\r\n\r\n   //don't know if there is a good way to do this, couldn't find anything\r\n   longest *= 10;\r\n\r\n   const onChange = (newValue, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"indiv\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  indiv: newValue,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  indiv: null,\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         case \"coach\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: newValue.target.value,\r\n                  error: false,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: \"\",\r\n                  error: false,\r\n               }));\r\n            }\r\n            break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n   const onSubmit = () => {\r\n      \r\n      setError(choice);\r\n      setSchoolData();\r\n      for(const item in choice){\r\n         choice[item] = choice[item].trim();\r\n      }\r\n      setURL(choice, schoolData);\r\n\r\n\r\n\r\n      // if(!choice.error){\r\n      //    history.push({\r\n      //       pathname: `/team-register/confirm/`,\r\n      //       state:{\r\n      //          key: url\r\n      //       }\r\n      //    });\r\n      // }\r\n   }\r\n\r\n   //Setting error if something is not filled out.\r\n   const setError = (choice) => {\r\n      for (const item in choice){\r\n         if(choice[item] === null || choice[item] === \"\"){\r\n            console.log(\"ERROR :\", item)\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               error: true,\r\n            }));\r\n            break;\r\n         }\r\n      }\r\n   }\r\n\r\n   const setURL = (choice, schoolData) => {\r\n      url = `https://docs.google.com/forms/d/e/1FAIpQLSf8UTjphTqcOHwmrdGEG8Jsbjz4eVz7d6XVlgW7AlnM28vq_g/viewform?usp=pp_url\r\n               &entry.1015404157=${user.email}\r\n               &entry.1951055040=${user.name}\r\n               &entry.62573940=${choice.loc}\r\n               &entry.1929366142=${choice.lev}\r\n               &entry.680121242=${choice.team}\r\n               &entry.641937550=${choice.indiv}\r\n               &entry.1389254068=${schoolData.value}\r\n               &entry.1720714498=${choice.coach}`\r\n   }\r\n\r\n   //Getting all the data for that school\r\n   const setSchoolData = () => {\r\n      for(option in options.school){\r\n         if(options.school[option].label === choice.school){\r\n            schoolData = {\r\n               value: options.school[option].value,\r\n               label: options.school[option].label,\r\n               div: options.school[option].div,\r\n            }\r\n            break;\r\n         }\r\n      }\r\n   }\r\n\r\n   return(\r\n      <div style={{display: \"flex\", flexDirection:\"row\"}}>\r\n         <div style={{width:\"100%\", borderRadius: \"4px\", margin:\"2%\", boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\"}}>\r\n            <div style={{marginLeft:\"1%\", marginRight:\"1%\",}}>\r\n               <p>\r\n                  <b>Rules for Individuals:</b> Any student may compete as an individual \r\n                  in their grade level or any higher grade; however, a student may \r\n                  compete as a team at one grade level only. This applies to both \r\n                  Championships and Masters.<br/><br/>\r\n\r\n                  Also note each team includes four students in addition to \r\n                  two alternates per school that can compete as individuals. So \r\n                  when registering n teams , you get to bring 4n+2 students along. \r\n                  These students don't need to be registered as individuals separately.\r\n               </p>\r\n               <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                  <Auto\r\n                     title=\"Competition Location\"\r\n                     options={options.locations}\r\n                     text=\"Select Competition Location\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"location\")}\r\n                     width={longest}\r\n                     value={choice.loc}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Competition Level\"\r\n                     options={options.level}\r\n                     text=\"Select Your Grade Level\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"level\")}\r\n                     width={longest}\r\n                     value={choice.lev}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"School Registering\"\r\n                     options={options.school}\r\n                     text=\"Select Your School\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"school\")}\r\n                     width={longest}\r\n                     value={choice.school}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number Teams\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Teams\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"team\")}\r\n                     width={longest}\r\n                     value={choice.team}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number Individuals\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Individuals\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"indiv\")}\r\n                     width={longest}\r\n                     value={choice.indiv}\r\n                     error={choice.error}\r\n                  />\r\n\r\n                  <div style={{display:\"flex\"}}>\r\n                     <Grid item sm={3}>\r\n                        <p>Additional Emails & Coach Names</p>\r\n                     </Grid>\r\n                     <TextField\r\n                        error={choice.error && choice.coach === \"\"}\r\n                        helperText={choice.error && choice.coach === \"\" ? \r\n                                       \"Please fill out to continue\" : \r\n                                       \"Example: someone@gmail.com, John Doe\"\r\n                                    }\r\n                        variant=\"outlined\" \r\n                        margin=\"normal\" \r\n                        required\r\n                        label=\"Emails and Coaches\"\r\n                        value={choice.coach}\r\n                        onChange={(event) => onChange(event, \"coach\")}\r\n                        style={{ width: longest }}\r\n                     >\r\n                     </TextField>\r\n                  </div>\r\n\r\n                  <Grid container>\r\n                     <Grid item sm={3}></Grid>\r\n                     <Grid item sm={3} width={longest}>\r\n                        <Button\r\n                           fullWidth\r\n                           variant=\"contained\"\r\n                           color=\"primary\"\r\n                           onClick={onSubmit}\r\n                        >\r\n                           Continue\r\n                        </Button>\r\n                     </Grid>\r\n                  </Grid>\r\n\r\n               </form>\r\n               <p>\r\n                  A school's division level is assigned based on past performance at \r\n                  Math is Cool contests. For more details and a current list of \r\n                  schools and assignments, see&nbsp;\r\n                  <a href=\"../../assets/divisions.pdf\" target=\"_blank\" rel=\"noreferrer\">2018-19 Divisions</a>.\r\n               </p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TeamRegister;"]},"metadata":{},"sourceType":"module"}