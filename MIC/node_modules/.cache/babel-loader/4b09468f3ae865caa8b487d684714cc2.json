{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\Files\\\\Coding\\\\Websites\\\\MathIsCool\\\\MIC\\\\src\\\\components\\\\back\\\\TeamRegister.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState } from \"react\"; //Options for each dropdown. Probably use JSON for them\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet options = require(\"./options\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n})); //json\n//value\n//onChange\n//text\n//width\n\nfunction Auto(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: props.options.map(option => option.label),\n      value: props.value,\n      onChange: props.onChange,\n      freeSolo: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: props.text,\n        variant: \"outlined\",\n        style: {\n          width: props.width\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Auto;\n\nfunction TeamRegister() {\n  _s();\n\n  const classes = useStyles();\n  const [choice, setChoice] = useState({\n    loc: null,\n    lev: null,\n    school: null,\n    team1: null,\n    team2: null,\n    coach: \"\"\n  });\n  let longest = 0; //finding length of longest string in options and resize search box accordingly\n\n  for (var option in options) {\n    for (let i = 0; i < Object.keys(options[option]).length; i++) {\n      if (options[option][i].label.length > longest) longest = options[option][i].label.length;\n    }\n  } //don't know if there is a good way to do this, couldn't find anything\n\n\n  longest *= 11;\n\n  const onChange = (newValue, type) => {\n    switch (type) {\n      case \"location\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            loc: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            loc: null\n          }));\n        }\n\n        break;\n\n      case \"level\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            lev: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            lev: null\n          }));\n        }\n\n        break;\n\n      case \"school\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            school: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            school: null\n          }));\n        }\n\n        break;\n\n      case \"team1\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            team1: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            team1: null\n          }));\n        }\n\n        break;\n\n      case \"team2\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            team2: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            team2: null\n          }));\n        }\n\n        break;\n\n      case \"coach\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            coach: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            coach: \"\"\n          }));\n        }\n\n        break;\n\n      default:\n        console.log(newValue, type);\n    }\n  };\n\n  const onSubmit = event => {\n    console.log(event);\n    console.log(choice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRadius: \"4px\",\n        margin: \"2%\",\n        boxShadow: \"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"1%\",\n          marginRight: \"1%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Rules for Individuals:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this), \" Any student may compete as an individual in their grade level or any higher grade; however, a student may compete as a team at one grade level only. This applies to both Championships and Masters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 50\n          }, this), \"Also note each team includes four students in addition to two alternates per school that can compete as individuals. So when registering n teams , you get to bring 4n+2 students along. These students don't need to be registered as individuals separately.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Competition Location\",\n            options: options.locations,\n            text: \"Select Competition Location\",\n            onChange: (event, newValue) => onChange(newValue, \"location\"),\n            width: longest,\n            value: choice.loc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Competition Level\",\n            options: options.level,\n            text: \"Select Your Grade Level\",\n            onChange: (event, newValue) => onChange(newValue, \"level\"),\n            width: longest,\n            value: choice.lev\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"School Registering\",\n            options: options.school,\n            text: \"Select Your School\",\n            onChange: (event, newValue) => onChange(newValue, \"school\"),\n            width: longest,\n            value: choice.school\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Number of 4, 5, 6, 7, or 9-10th Teams\",\n            options: options.numteam,\n            text: \"Select Number of Teams\",\n            onChange: (event, newValue) => onChange(newValue, \"team1\"),\n            width: longest,\n            value: choice.team1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Auto, {\n            title: \"Number of 8 or 11-12th Teams\",\n            options: options.numteam,\n            text: \"Select Number of Teams\",\n            onChange: (event, newValue) => onChange(newValue, \"team2\"),\n            width: longest,\n            value: choice.team2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Person Bringing Students to Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              label: \"Coach\",\n              value: choice.coach,\n              onChange: event => onChange(event, \"coach\"),\n              style: {\n                width: longest\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sm: 3,\n              width: longest,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: onSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A school's division level is assigned based on past performance at Math is Cool contests. For more details and a current list of schools and assignments, see\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"../../../public.divisions.pdf\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"2018-19 Divisions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TeamRegister, \"hKCbLZ97VTSDfDMs+8FnChstPIE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TeamRegister;\nexport default TeamRegister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auto\");\n$RefreshReg$(_c2, \"TeamRegister\");","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/src/components/back/TeamRegister.js"],"names":["TextField","Button","makeStyles","Grid","Autocomplete","React","useState","options","require","useStyles","theme","root","margin","spacing","width","Auto","props","display","title","map","option","label","value","onChange","params","text","TeamRegister","classes","choice","setChoice","loc","lev","school","team1","team2","coach","longest","i","Object","keys","length","newValue","type","prevState","console","log","onSubmit","event","flexDirection","borderRadius","boxShadow","marginLeft","marginRight","locations","level","numteam"],"mappings":"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","sourcesContent":["import { TextField, Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n }));\r\n\r\n//json\r\n//value\r\n//onChange\r\n//text\r\n//width\r\nfunction Auto(props){\r\n   return(\r\n      <div style={{display:\"flex\"}}>\r\n         <Grid item sm={3}>\r\n            <p>{props.title}</p>\r\n         </Grid>\r\n         <Autocomplete\r\n            options={props.options.map((option) => option.label)}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            freeSolo\r\n            renderInput={(params) => \r\n                           <TextField \r\n                              {...params} \r\n                              label={props.text} \r\n                              variant=\"outlined\"\r\n                              style={{ width: props.width }}\r\n                           />\r\n                        }\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction TeamRegister(){\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({ loc: null, \r\n                                          lev: null, \r\n                                          school: null,\r\n                                          team1: null,\r\n                                          team2: null,\r\n                                          coach: \"\",\r\n                                       });\r\n\r\n   let longest = 0;\r\n\r\n   //finding length of longest string in options and resize search box accordingly\r\n   for(var option in options){\r\n      for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n         if(options[option][i].label.length > longest)\r\n            longest = options[option][i].label.length;\r\n      }\r\n   }\r\n\r\n   //don't know if there is a good way to do this, couldn't find anything\r\n   longest *= 11;\r\n\r\n   const onChange = (newValue, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: null,\r\n               }));\r\n            }\r\n            break;\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: null,\r\n               }));\r\n            }\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: null,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team1\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team1: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team1: null,\r\n               }));\r\n            }\r\n            break;\r\n         case \"team2\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team2: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  team2: null,\r\n               }));\r\n            }\r\n            break;\r\n         case \"coach\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  coach: \"\",\r\n               }));\r\n            }\r\n            break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n   const onSubmit = (event) => {\r\n      console.log(event)\r\n      console.log(choice)\r\n   }\r\n\r\n   return(\r\n      <div style={{display: \"flex\", flexDirection:\"row\"}}>\r\n         <div style={{borderRadius: \"4px\", margin:\"2%\", boxShadow:\"0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%)\"}}>\r\n            <div style={{marginLeft:\"1%\", marginRight:\"1%\",}}>\r\n               <p>\r\n                  <b>Rules for Individuals:</b> Any student may compete as an individual \r\n                  in their grade level or any higher grade; however, a student may \r\n                  compete as a team at one grade level only. This applies to both \r\n                  Championships and Masters.<br/><br/>\r\n\r\n                  Also note each team includes four students in addition to \r\n                  two alternates per school that can compete as individuals. So \r\n                  when registering n teams , you get to bring 4n+2 students along. \r\n                  These students don't need to be registered as individuals separately.\r\n               </p>\r\n               <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                  <Auto\r\n                     title=\"Competition Location\"\r\n                     options={options.locations}\r\n                     text=\"Select Competition Location\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"location\")}\r\n                     width={longest}\r\n                     value={choice.loc}\r\n                  />\r\n                  \r\n                  <Auto\r\n                     title=\"Competition Level\"\r\n                     options={options.level}\r\n                     text=\"Select Your Grade Level\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"level\")}\r\n                     width={longest}\r\n                     value={choice.lev}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"School Registering\"\r\n                     options={options.school}\r\n                     text=\"Select Your School\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"school\")}\r\n                     width={longest}\r\n                     value={choice.school}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number of 4, 5, 6, 7, or 9-10th Teams\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Teams\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"team1\")}\r\n                     width={longest}\r\n                     value={choice.team1}\r\n                  />\r\n\r\n                  <Auto\r\n                     title=\"Number of 8 or 11-12th Teams\"\r\n                     options={options.numteam}\r\n                     text=\"Select Number of Teams\"\r\n                     onChange={(event, newValue) => onChange(newValue, \"team2\")}\r\n                     width={longest}\r\n                     value={choice.team2}\r\n                  />\r\n                  \r\n                  <div style={{display:\"flex\"}}>\r\n                        <Grid item sm={3}>\r\n                           <p>Person Bringing Students to Event</p>\r\n                        </Grid>\r\n                        <TextField\r\n                           variant=\"outlined\" \r\n                           margin=\"normal\" \r\n                           required\r\n                           label=\"Coach\"\r\n                           value={choice.coach}\r\n                           onChange={(event) => onChange(event, \"coach\")}\r\n                           style={{ width: longest }}\r\n                        >\r\n                        </TextField>\r\n                     </div>\r\n\r\n                  <Grid container>\r\n                     <Grid item sm={3}></Grid>\r\n                     <Grid item sm={3} width={longest}>\r\n                        <Button\r\n                           fullWidth\r\n                           variant=\"contained\"\r\n                           color=\"primary\"\r\n                           onClick={onSubmit}\r\n                        >\r\n                           Submit\r\n                        </Button>\r\n                     </Grid>\r\n                  </Grid>\r\n                  \r\n               </form>\r\n               <p>\r\n                  A school's division level is assigned based on past performance at \r\n                  Math is Cool contests. For more details and a current list of \r\n                  schools and assignments, see&nbsp;\r\n                  <a href=\"../../../public.divisions.pdf\" target=\"_blank\" rel=\"noreferrer\">2018-19 Divisions</a>.\r\n               </p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TeamRegister;"]},"metadata":{},"sourceType":"module"}