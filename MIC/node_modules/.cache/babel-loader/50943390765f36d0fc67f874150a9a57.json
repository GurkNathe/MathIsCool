{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _utils = require(\"@material-ui/core/utils\");\n\nvar _TreeViewContext = _interopRequireDefault(require(\"./TreeViewContext\"));\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\nexports.styles = styles;\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = (0, _utils.useControlled)({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = (0, _slicedToArray2.default)(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = (0, _utils.useControlled)({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = (0, _slicedToArray2.default)(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\r\n   * Status Helpers\r\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\r\n   * Node Helpers\r\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\r\n   * Focus Helpers\r\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\r\n   * Expansion Helpers\r\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\r\n   * Selection Helpers\r\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\r\n   * Mapping Helpers\r\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = (0, _extends2.default)({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = (0, _extends2.default)({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = (0, _extends2.default)({}, firstCharMap.current);\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n    var newMap = (0, _extends2.default)({}, nodeMap.current);\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = (0, _extends2.default)({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(_TreeViewContext.default.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", (0, _extends2.default)({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: (0, _clsx.default)(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: _propTypes.default.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: _propTypes.default.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: _propTypes.default.string,\n\n  /**\r\n   * The default icon used to collapse the node.\r\n   */\n  defaultCollapseIcon: _propTypes.default.node,\n\n  /**\r\n   * The default icon displayed next to a end node. This is applied to all\r\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\r\n   */\n  defaultEndIcon: _propTypes.default.node,\n\n  /**\r\n   * Expanded node ids. (Uncontrolled)\r\n   */\n  defaultExpanded: _propTypes.default.arrayOf(_propTypes.default.string),\n\n  /**\r\n   * The default icon used to expand the node.\r\n   */\n  defaultExpandIcon: _propTypes.default.node,\n\n  /**\r\n   * The default icon displayed next to a parent node. This is applied to all\r\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\r\n   */\n  defaultParentIcon: _propTypes.default.node,\n\n  /**\r\n   * Selected node ids. (Uncontrolled)\r\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\r\n   */\n  defaultSelected: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string]),\n\n  /**\r\n   * If `true` selection is disabled.\r\n   */\n  disableSelection: _propTypes.default.bool,\n\n  /**\r\n   * Expanded node ids. (Controlled)\r\n   */\n  expanded: _propTypes.default.arrayOf(_propTypes.default.string),\n\n  /**\r\n   * If true `ctrl` and `shift` will trigger multiselect.\r\n   */\n  multiSelect: _propTypes.default.bool,\n\n  /**\r\n   * Callback fired when tree items are selected/unselected.\r\n   *\r\n   * @param {object} event The event source of the callback\r\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\r\n   * this is an array of strings; when false (default) a string.\r\n   */\n  onNodeSelect: _propTypes.default.func,\n\n  /**\r\n   * Callback fired when tree items are expanded/collapsed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {array} nodeIds The ids of the expanded nodes.\r\n   */\n  onNodeToggle: _propTypes.default.func,\n\n  /**\r\n   * Selected node ids. (Controlled)\r\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\r\n   */\n  selected: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string])\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiTreeView'\n})(TreeView);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/node_modules/@material-ui/lab/TreeView/TreeView.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","styles","_extends2","_slicedToArray2","_objectWithoutProperties2","React","_clsx","_propTypes","_styles","_utils","_TreeViewContext","root","padding","margin","listStyle","arrayDiff","arr1","arr2","length","i","findNextFirstChar","firstChars","startIndex","char","defaultExpandedDefault","defaultSelectedDefault","TreeView","forwardRef","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_React$useState","useState","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","useRef","firstCharMap","visibleNodes","_useControlled","useControlled","controlled","name","state","_useControlled2","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","useCallback","id","Array","isArray","indexOf","isSelected","isTabbable","isFocused","getNextNode","nodeIndex","current","getPreviousNode","getLastNode","getFirstNode","getParent","parent","getNodesInRange","a","b","aIndex","bIndex","start","Math","min","end","max","slice","focus","focusNextNode","focusPreviousNode","focusFirstNode","focusLastNode","focusByFirstCharacter","index","lowercaseChar","toLowerCase","firstCharIds","keys","forEach","nodeId","firstChar","map","visible","push","toggleExpansion","event","arguments","undefined","newExpanded","filter","oldTabbable","concat","expandAllSiblings","diff","child","topLevelNodes","node","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","nodes","base","next","handleRangeSelect","range","newSelected","handleMultipleSelect","handleSingleSelect","selectNode","multiple","selectRange","stacked","_nodes$start","rangeSelectToFirst","rangeSelectToLast","selectNextNode","selectPreviousNode","selectAllNodes","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","getNodesToRemove","cleanUpFirstCharMap","newMap","removeNodeFromNodeMap","parentMap","parentChildren","c","oldFocusedNodeId","mapFirstChar","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","useEffect","childIds","Children","isValidElement","buildVisible","list","item","childs","noopSelection","createElement","Provider","icons","role","process","env","NODE_ENV","propTypes","object","string","arrayOf","oneOfType","bool","func","_default","withStyles"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _utils = require(\"@material-ui/core/utils\");\n\nvar _TreeViewContext = _interopRequireDefault(require(\"./TreeViewContext\"));\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\nexports.styles = styles;\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = (0, _utils.useControlled)({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = (0, _slicedToArray2.default)(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = (0, _utils.useControlled)({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = (0, _slicedToArray2.default)(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\r\n   * Status Helpers\r\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\r\n   * Node Helpers\r\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\r\n   * Focus Helpers\r\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\r\n   * Expansion Helpers\r\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\r\n   * Selection Helpers\r\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\r\n   * Mapping Helpers\r\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = (0, _extends2.default)({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = (0, _extends2.default)({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = (0, _extends2.default)({}, firstCharMap.current);\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n    var newMap = (0, _extends2.default)({}, nodeMap.current);\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = (0, _extends2.default)({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(_TreeViewContext.default.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", (0, _extends2.default)({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: (0, _clsx.default)(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: _propTypes.default.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: _propTypes.default.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: _propTypes.default.string,\n\n  /**\r\n   * The default icon used to collapse the node.\r\n   */\n  defaultCollapseIcon: _propTypes.default.node,\n\n  /**\r\n   * The default icon displayed next to a end node. This is applied to all\r\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\r\n   */\n  defaultEndIcon: _propTypes.default.node,\n\n  /**\r\n   * Expanded node ids. (Uncontrolled)\r\n   */\n  defaultExpanded: _propTypes.default.arrayOf(_propTypes.default.string),\n\n  /**\r\n   * The default icon used to expand the node.\r\n   */\n  defaultExpandIcon: _propTypes.default.node,\n\n  /**\r\n   * The default icon displayed next to a parent node. This is applied to all\r\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\r\n   */\n  defaultParentIcon: _propTypes.default.node,\n\n  /**\r\n   * Selected node ids. (Uncontrolled)\r\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\r\n   */\n  defaultSelected: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string]),\n\n  /**\r\n   * If `true` selection is disabled.\r\n   */\n  disableSelection: _propTypes.default.bool,\n\n  /**\r\n   * Expanded node ids. (Controlled)\r\n   */\n  expanded: _propTypes.default.arrayOf(_propTypes.default.string),\n\n  /**\r\n   * If true `ctrl` and `shift` will trigger multiselect.\r\n   */\n  multiSelect: _propTypes.default.bool,\n\n  /**\r\n   * Callback fired when tree items are selected/unselected.\r\n   *\r\n   * @param {object} event The event source of the callback\r\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\r\n   * this is an array of strings; when false (default) a string.\r\n   */\n  onNodeSelect: _propTypes.default.func,\n\n  /**\r\n   * Callback fired when tree items are expanded/collapsed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {array} nodeIds The ids of the expanded nodes.\r\n   */\n  onNodeToggle: _propTypes.default.func,\n\n  /**\r\n   * Selected node ids. (Controlled)\r\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\r\n   */\n  selected: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string])\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiTreeView'\n})(TreeView);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}