{"ast":null,"code":"module.exports = LRUCache; // This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\n\nvar Map = require('pseudomap');\n\nvar util = require('util'); // A linked list to keep track of recently-used-ness\n\n\nvar Yallist = require('yallist'); // use symbols if possible, otherwise just _props\n\n\nvar symbols = {};\nvar hasSymbol = typeof Symbol === 'function';\nvar makeSymbol;\n/* istanbul ignore if */\n\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol.for(key);\n  };\n} else {\n  makeSymbol = function (key) {\n    return '_' + key;\n  };\n}\n\nfunction priv(obj, key, val) {\n  var sym;\n\n  if (symbols[key]) {\n    sym = symbols[key];\n  } else {\n    sym = makeSymbol(key);\n    symbols[key] = sym;\n  }\n\n  if (arguments.length === 2) {\n    return obj[sym];\n  } else {\n    obj[sym] = val;\n    return val;\n  }\n}\n\nfunction naiveLength() {\n  return 1;\n} // lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\n\n\nfunction LRUCache(options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options);\n  }\n\n  if (typeof options === 'number') {\n    options = {\n      max: options\n    };\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  var max = priv(this, 'max', options.max); // Kind of weird to have a default max of Infinity, but oh well.\n\n  if (!max || !(typeof max === 'number') || max <= 0) {\n    priv(this, 'max', Infinity);\n  }\n\n  var lc = options.length || naiveLength;\n\n  if (typeof lc !== 'function') {\n    lc = naiveLength;\n  }\n\n  priv(this, 'lengthCalculator', lc);\n  priv(this, 'allowStale', options.stale || false);\n  priv(this, 'maxAge', options.maxAge || 0);\n  priv(this, 'dispose', options.dispose);\n  this.reset();\n} // resize the cache when the max changes.\n\n\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity;\n    }\n\n    priv(this, 'max', mL);\n    trim(this);\n  },\n  get: function () {\n    return priv(this, 'max');\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    priv(this, 'allowStale', !!allowStale);\n  },\n  get: function () {\n    return priv(this, 'allowStale');\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0;\n    }\n\n    priv(this, 'maxAge', mA);\n    trim(this);\n  },\n  get: function () {\n    return priv(this, 'maxAge');\n  },\n  enumerable: true\n}); // resize the cache when the lengthCalculator changes.\n\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength;\n    }\n\n    if (lC !== priv(this, 'lengthCalculator')) {\n      priv(this, 'lengthCalculator', lC);\n      priv(this, 'length', 0);\n      priv(this, 'lruList').forEach(function (hit) {\n        hit.length = priv(this, 'lengthCalculator').call(this, hit.value, hit.key);\n        priv(this, 'length', priv(this, 'length') + hit.length);\n      }, this);\n    }\n\n    trim(this);\n  },\n  get: function () {\n    return priv(this, 'lengthCalculator');\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () {\n    return priv(this, 'length');\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () {\n    return priv(this, 'lruList').length;\n  },\n  enumerable: true\n});\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this;\n\n  for (var walker = priv(this, 'lruList').tail; walker !== null;) {\n    var prev = walker.prev;\n    forEachStep(this, fn, walker, thisp);\n    walker = prev;\n  }\n};\n\nfunction forEachStep(self, fn, node, thisp) {\n  var hit = node.value;\n\n  if (isStale(self, hit)) {\n    del(self, node);\n\n    if (!priv(self, 'allowStale')) {\n      hit = undefined;\n    }\n  }\n\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self);\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this;\n\n  for (var walker = priv(this, 'lruList').head; walker !== null;) {\n    var next = walker.next;\n    forEachStep(this, fn, walker, thisp);\n    walker = next;\n  }\n};\n\nLRUCache.prototype.keys = function () {\n  return priv(this, 'lruList').toArray().map(function (k) {\n    return k.key;\n  }, this);\n};\n\nLRUCache.prototype.values = function () {\n  return priv(this, 'lruList').toArray().map(function (k) {\n    return k.value;\n  }, this);\n};\n\nLRUCache.prototype.reset = function () {\n  if (priv(this, 'dispose') && priv(this, 'lruList') && priv(this, 'lruList').length) {\n    priv(this, 'lruList').forEach(function (hit) {\n      priv(this, 'dispose').call(this, hit.key, hit.value);\n    }, this);\n  }\n\n  priv(this, 'cache', new Map()); // hash of items by key\n\n  priv(this, 'lruList', new Yallist()); // list of items in order of use recency\n\n  priv(this, 'length', 0); // length of items in the list\n};\n\nLRUCache.prototype.dump = function () {\n  return priv(this, 'lruList').map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      };\n    }\n  }, this).toArray().filter(function (h) {\n    return h;\n  });\n};\n\nLRUCache.prototype.dumpLru = function () {\n  return priv(this, 'lruList');\n};\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {';\n  var extras = false;\n  var as = priv(this, 'allowStale');\n\n  if (as) {\n    str += '\\n  allowStale: true';\n    extras = true;\n  }\n\n  var max = priv(this, 'max');\n\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ',';\n    }\n\n    str += '\\n  max: ' + util.inspect(max, opts);\n    extras = true;\n  }\n\n  var maxAge = priv(this, 'maxAge');\n\n  if (maxAge) {\n    if (extras) {\n      str += ',';\n    }\n\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts);\n    extras = true;\n  }\n\n  var lc = priv(this, 'lengthCalculator');\n\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ',';\n    }\n\n    str += '\\n  length: ' + util.inspect(priv(this, 'length'), opts);\n    extras = true;\n  }\n\n  var didFirst = false;\n  priv(this, 'lruList').forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  ';\n    } else {\n      if (extras) {\n        str += ',\\n';\n      }\n\n      didFirst = true;\n      str += '\\n  ';\n    }\n\n    var key = util.inspect(item.key).split('\\n').join('\\n  ');\n    var val = {\n      value: item.value\n    };\n\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge;\n    }\n\n    if (lc !== naiveLength) {\n      val.length = item.length;\n    }\n\n    if (isStale(this, item)) {\n      val.stale = true;\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ');\n    str += key + ' => ' + val;\n  });\n\n  if (didFirst || extras) {\n    str += '\\n';\n  }\n\n  str += '}';\n  return str;\n};\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || priv(this, 'maxAge');\n  var now = maxAge ? Date.now() : 0;\n  var len = priv(this, 'lengthCalculator').call(this, value, key);\n\n  if (priv(this, 'cache').has(key)) {\n    if (len > priv(this, 'max')) {\n      del(this, priv(this, 'cache').get(key));\n      return false;\n    }\n\n    var node = priv(this, 'cache').get(key);\n    var item = node.value; // dispose of the old one before overwriting\n\n    if (priv(this, 'dispose')) {\n      priv(this, 'dispose').call(this, key, item.value);\n    }\n\n    item.now = now;\n    item.maxAge = maxAge;\n    item.value = value;\n    priv(this, 'length', priv(this, 'length') + (len - item.length));\n    item.length = len;\n    this.get(key);\n    trim(this);\n    return true;\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge); // oversized objects fall out of cache automatically.\n\n  if (hit.length > priv(this, 'max')) {\n    if (priv(this, 'dispose')) {\n      priv(this, 'dispose').call(this, key, value);\n    }\n\n    return false;\n  }\n\n  priv(this, 'length', priv(this, 'length') + hit.length);\n  priv(this, 'lruList').unshift(hit);\n  priv(this, 'cache').set(key, priv(this, 'lruList').head);\n  trim(this);\n  return true;\n};\n\nLRUCache.prototype.has = function (key) {\n  if (!priv(this, 'cache').has(key)) return false;\n  var hit = priv(this, 'cache').get(key).value;\n\n  if (isStale(this, hit)) {\n    return false;\n  }\n\n  return true;\n};\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true);\n};\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false);\n};\n\nLRUCache.prototype.pop = function () {\n  var node = priv(this, 'lruList').tail;\n  if (!node) return null;\n  del(this, node);\n  return node.value;\n};\n\nLRUCache.prototype.del = function (key) {\n  del(this, priv(this, 'cache').get(key));\n};\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset();\n  var now = Date.now(); // A previous serialized cache has the most recent items first\n\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l];\n    var expiresAt = hit.e || 0;\n\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v);\n    } else {\n      var maxAge = expiresAt - now; // dont add already expired items\n\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge);\n      }\n    }\n  }\n};\n\nLRUCache.prototype.prune = function () {\n  var self = this;\n  priv(this, 'cache').forEach(function (value, key) {\n    get(self, key, false);\n  });\n};\n\nfunction get(self, key, doUse) {\n  var node = priv(self, 'cache').get(key);\n\n  if (node) {\n    var hit = node.value;\n\n    if (isStale(self, hit)) {\n      del(self, node);\n      if (!priv(self, 'allowStale')) hit = undefined;\n    } else {\n      if (doUse) {\n        priv(self, 'lruList').unshiftNode(node);\n      }\n    }\n\n    if (hit) hit = hit.value;\n  }\n\n  return hit;\n}\n\nfunction isStale(self, hit) {\n  if (!hit || !hit.maxAge && !priv(self, 'maxAge')) {\n    return false;\n  }\n\n  var stale = false;\n  var diff = Date.now() - hit.now;\n\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge;\n  } else {\n    stale = priv(self, 'maxAge') && diff > priv(self, 'maxAge');\n  }\n\n  return stale;\n}\n\nfunction trim(self) {\n  if (priv(self, 'length') > priv(self, 'max')) {\n    for (var walker = priv(self, 'lruList').tail; priv(self, 'length') > priv(self, 'max') && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev;\n      del(self, walker);\n      walker = prev;\n    }\n  }\n}\n\nfunction del(self, node) {\n  if (node) {\n    var hit = node.value;\n\n    if (priv(self, 'dispose')) {\n      priv(self, 'dispose').call(this, hit.key, hit.value);\n    }\n\n    priv(self, 'length', priv(self, 'length') - hit.length);\n    priv(self, 'cache').delete(hit.key);\n    priv(self, 'lruList').removeNode(node);\n  }\n} // classy, since V8 prefers predictable objects.\n\n\nfunction Entry(key, value, length, now, maxAge) {\n  this.key = key;\n  this.value = value;\n  this.length = length;\n  this.now = now;\n  this.maxAge = maxAge || 0;\n}","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/node_modules/lru-memoizer/node_modules/lru-cache/lib/lru-cache.js"],"names":["module","exports","LRUCache","Map","require","util","Yallist","symbols","hasSymbol","Symbol","makeSymbol","key","for","priv","obj","val","sym","arguments","length","naiveLength","options","max","Infinity","lc","stale","maxAge","dispose","reset","Object","defineProperty","prototype","set","mL","trim","get","enumerable","allowStale","mA","lC","forEach","hit","call","value","rforEach","fn","thisp","walker","tail","prev","forEachStep","self","node","isStale","del","undefined","head","next","keys","toArray","map","k","values","dump","v","e","now","filter","h","dumpLru","inspect","n","opts","str","extras","as","didFirst","item","split","join","Date","len","has","Entry","unshift","peek","pop","load","arr","l","expiresAt","prune","doUse","unshiftNode","diff","delete","removeNode"],"mappings":"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","sourcesContent":["module.exports = LRUCache\r\n\r\n// This will be a proper iterable 'Map' in engines that support it,\r\n// or a fakey-fake PseudoMap in older versions.\r\nvar Map = require('pseudomap')\r\nvar util = require('util')\r\n\r\n// A linked list to keep track of recently-used-ness\r\nvar Yallist = require('yallist')\r\n\r\n// use symbols if possible, otherwise just _props\r\nvar symbols = {}\r\nvar hasSymbol = typeof Symbol === 'function'\r\nvar makeSymbol\r\n/* istanbul ignore if */\r\nif (hasSymbol) {\r\n  makeSymbol = function (key) {\r\n    return Symbol.for(key)\r\n  }\r\n} else {\r\n  makeSymbol = function (key) {\r\n    return '_' + key\r\n  }\r\n}\r\n\r\nfunction priv (obj, key, val) {\r\n  var sym\r\n  if (symbols[key]) {\r\n    sym = symbols[key]\r\n  } else {\r\n    sym = makeSymbol(key)\r\n    symbols[key] = sym\r\n  }\r\n  if (arguments.length === 2) {\r\n    return obj[sym]\r\n  } else {\r\n    obj[sym] = val\r\n    return val\r\n  }\r\n}\r\n\r\nfunction naiveLength () { return 1 }\r\n\r\n// lruList is a yallist where the head is the youngest\r\n// item, and the tail is the oldest.  the list contains the Hit\r\n// objects as the entries.\r\n// Each Hit object has a reference to its Yallist.Node.  This\r\n// never changes.\r\n//\r\n// cache is a Map (or PseudoMap) that matches the keys to\r\n// the Yallist.Node object.\r\nfunction LRUCache (options) {\r\n  if (!(this instanceof LRUCache)) {\r\n    return new LRUCache(options)\r\n  }\r\n\r\n  if (typeof options === 'number') {\r\n    options = { max: options }\r\n  }\r\n\r\n  if (!options) {\r\n    options = {}\r\n  }\r\n\r\n  var max = priv(this, 'max', options.max)\r\n  // Kind of weird to have a default max of Infinity, but oh well.\r\n  if (!max ||\r\n      !(typeof max === 'number') ||\r\n      max <= 0) {\r\n    priv(this, 'max', Infinity)\r\n  }\r\n\r\n  var lc = options.length || naiveLength\r\n  if (typeof lc !== 'function') {\r\n    lc = naiveLength\r\n  }\r\n  priv(this, 'lengthCalculator', lc)\r\n\r\n  priv(this, 'allowStale', options.stale || false)\r\n  priv(this, 'maxAge', options.maxAge || 0)\r\n  priv(this, 'dispose', options.dispose)\r\n  this.reset()\r\n}\r\n\r\n// resize the cache when the max changes.\r\nObject.defineProperty(LRUCache.prototype, 'max', {\r\n  set: function (mL) {\r\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\r\n      mL = Infinity\r\n    }\r\n    priv(this, 'max', mL)\r\n    trim(this)\r\n  },\r\n  get: function () {\r\n    return priv(this, 'max')\r\n  },\r\n  enumerable: true\r\n})\r\n\r\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\r\n  set: function (allowStale) {\r\n    priv(this, 'allowStale', !!allowStale)\r\n  },\r\n  get: function () {\r\n    return priv(this, 'allowStale')\r\n  },\r\n  enumerable: true\r\n})\r\n\r\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\r\n  set: function (mA) {\r\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\r\n      mA = 0\r\n    }\r\n    priv(this, 'maxAge', mA)\r\n    trim(this)\r\n  },\r\n  get: function () {\r\n    return priv(this, 'maxAge')\r\n  },\r\n  enumerable: true\r\n})\r\n\r\n// resize the cache when the lengthCalculator changes.\r\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\r\n  set: function (lC) {\r\n    if (typeof lC !== 'function') {\r\n      lC = naiveLength\r\n    }\r\n    if (lC !== priv(this, 'lengthCalculator')) {\r\n      priv(this, 'lengthCalculator', lC)\r\n      priv(this, 'length', 0)\r\n      priv(this, 'lruList').forEach(function (hit) {\r\n        hit.length = priv(this, 'lengthCalculator').call(this, hit.value, hit.key)\r\n        priv(this, 'length', priv(this, 'length') + hit.length)\r\n      }, this)\r\n    }\r\n    trim(this)\r\n  },\r\n  get: function () { return priv(this, 'lengthCalculator') },\r\n  enumerable: true\r\n})\r\n\r\nObject.defineProperty(LRUCache.prototype, 'length', {\r\n  get: function () { return priv(this, 'length') },\r\n  enumerable: true\r\n})\r\n\r\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\r\n  get: function () { return priv(this, 'lruList').length },\r\n  enumerable: true\r\n})\r\n\r\nLRUCache.prototype.rforEach = function (fn, thisp) {\r\n  thisp = thisp || this\r\n  for (var walker = priv(this, 'lruList').tail; walker !== null;) {\r\n    var prev = walker.prev\r\n    forEachStep(this, fn, walker, thisp)\r\n    walker = prev\r\n  }\r\n}\r\n\r\nfunction forEachStep (self, fn, node, thisp) {\r\n  var hit = node.value\r\n  if (isStale(self, hit)) {\r\n    del(self, node)\r\n    if (!priv(self, 'allowStale')) {\r\n      hit = undefined\r\n    }\r\n  }\r\n  if (hit) {\r\n    fn.call(thisp, hit.value, hit.key, self)\r\n  }\r\n}\r\n\r\nLRUCache.prototype.forEach = function (fn, thisp) {\r\n  thisp = thisp || this\r\n  for (var walker = priv(this, 'lruList').head; walker !== null;) {\r\n    var next = walker.next\r\n    forEachStep(this, fn, walker, thisp)\r\n    walker = next\r\n  }\r\n}\r\n\r\nLRUCache.prototype.keys = function () {\r\n  return priv(this, 'lruList').toArray().map(function (k) {\r\n    return k.key\r\n  }, this)\r\n}\r\n\r\nLRUCache.prototype.values = function () {\r\n  return priv(this, 'lruList').toArray().map(function (k) {\r\n    return k.value\r\n  }, this)\r\n}\r\n\r\nLRUCache.prototype.reset = function () {\r\n  if (priv(this, 'dispose') &&\r\n      priv(this, 'lruList') &&\r\n      priv(this, 'lruList').length) {\r\n    priv(this, 'lruList').forEach(function (hit) {\r\n      priv(this, 'dispose').call(this, hit.key, hit.value)\r\n    }, this)\r\n  }\r\n\r\n  priv(this, 'cache', new Map()) // hash of items by key\r\n  priv(this, 'lruList', new Yallist()) // list of items in order of use recency\r\n  priv(this, 'length', 0) // length of items in the list\r\n}\r\n\r\nLRUCache.prototype.dump = function () {\r\n  return priv(this, 'lruList').map(function (hit) {\r\n    if (!isStale(this, hit)) {\r\n      return {\r\n        k: hit.key,\r\n        v: hit.value,\r\n        e: hit.now + (hit.maxAge || 0)\r\n      }\r\n    }\r\n  }, this).toArray().filter(function (h) {\r\n    return h\r\n  })\r\n}\r\n\r\nLRUCache.prototype.dumpLru = function () {\r\n  return priv(this, 'lruList')\r\n}\r\n\r\nLRUCache.prototype.inspect = function (n, opts) {\r\n  var str = 'LRUCache {'\r\n  var extras = false\r\n\r\n  var as = priv(this, 'allowStale')\r\n  if (as) {\r\n    str += '\\n  allowStale: true'\r\n    extras = true\r\n  }\r\n\r\n  var max = priv(this, 'max')\r\n  if (max && max !== Infinity) {\r\n    if (extras) {\r\n      str += ','\r\n    }\r\n    str += '\\n  max: ' + util.inspect(max, opts)\r\n    extras = true\r\n  }\r\n\r\n  var maxAge = priv(this, 'maxAge')\r\n  if (maxAge) {\r\n    if (extras) {\r\n      str += ','\r\n    }\r\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\r\n    extras = true\r\n  }\r\n\r\n  var lc = priv(this, 'lengthCalculator')\r\n  if (lc && lc !== naiveLength) {\r\n    if (extras) {\r\n      str += ','\r\n    }\r\n    str += '\\n  length: ' + util.inspect(priv(this, 'length'), opts)\r\n    extras = true\r\n  }\r\n\r\n  var didFirst = false\r\n  priv(this, 'lruList').forEach(function (item) {\r\n    if (didFirst) {\r\n      str += ',\\n  '\r\n    } else {\r\n      if (extras) {\r\n        str += ',\\n'\r\n      }\r\n      didFirst = true\r\n      str += '\\n  '\r\n    }\r\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\r\n    var val = { value: item.value }\r\n    if (item.maxAge !== maxAge) {\r\n      val.maxAge = item.maxAge\r\n    }\r\n    if (lc !== naiveLength) {\r\n      val.length = item.length\r\n    }\r\n    if (isStale(this, item)) {\r\n      val.stale = true\r\n    }\r\n\r\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\r\n    str += key + ' => ' + val\r\n  })\r\n\r\n  if (didFirst || extras) {\r\n    str += '\\n'\r\n  }\r\n  str += '}'\r\n\r\n  return str\r\n}\r\n\r\nLRUCache.prototype.set = function (key, value, maxAge) {\r\n  maxAge = maxAge || priv(this, 'maxAge')\r\n\r\n  var now = maxAge ? Date.now() : 0\r\n  var len = priv(this, 'lengthCalculator').call(this, value, key)\r\n\r\n  if (priv(this, 'cache').has(key)) {\r\n    if (len > priv(this, 'max')) {\r\n      del(this, priv(this, 'cache').get(key))\r\n      return false\r\n    }\r\n\r\n    var node = priv(this, 'cache').get(key)\r\n    var item = node.value\r\n\r\n    // dispose of the old one before overwriting\r\n    if (priv(this, 'dispose')) {\r\n      priv(this, 'dispose').call(this, key, item.value)\r\n    }\r\n\r\n    item.now = now\r\n    item.maxAge = maxAge\r\n    item.value = value\r\n    priv(this, 'length', priv(this, 'length') + (len - item.length))\r\n    item.length = len\r\n    this.get(key)\r\n    trim(this)\r\n    return true\r\n  }\r\n\r\n  var hit = new Entry(key, value, len, now, maxAge)\r\n\r\n  // oversized objects fall out of cache automatically.\r\n  if (hit.length > priv(this, 'max')) {\r\n    if (priv(this, 'dispose')) {\r\n      priv(this, 'dispose').call(this, key, value)\r\n    }\r\n    return false\r\n  }\r\n\r\n  priv(this, 'length', priv(this, 'length') + hit.length)\r\n  priv(this, 'lruList').unshift(hit)\r\n  priv(this, 'cache').set(key, priv(this, 'lruList').head)\r\n  trim(this)\r\n  return true\r\n}\r\n\r\nLRUCache.prototype.has = function (key) {\r\n  if (!priv(this, 'cache').has(key)) return false\r\n  var hit = priv(this, 'cache').get(key).value\r\n  if (isStale(this, hit)) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nLRUCache.prototype.get = function (key) {\r\n  return get(this, key, true)\r\n}\r\n\r\nLRUCache.prototype.peek = function (key) {\r\n  return get(this, key, false)\r\n}\r\n\r\nLRUCache.prototype.pop = function () {\r\n  var node = priv(this, 'lruList').tail\r\n  if (!node) return null\r\n  del(this, node)\r\n  return node.value\r\n}\r\n\r\nLRUCache.prototype.del = function (key) {\r\n  del(this, priv(this, 'cache').get(key))\r\n}\r\n\r\nLRUCache.prototype.load = function (arr) {\r\n  // reset the cache\r\n  this.reset()\r\n\r\n  var now = Date.now()\r\n  // A previous serialized cache has the most recent items first\r\n  for (var l = arr.length - 1; l >= 0; l--) {\r\n    var hit = arr[l]\r\n    var expiresAt = hit.e || 0\r\n    if (expiresAt === 0) {\r\n      // the item was created without expiration in a non aged cache\r\n      this.set(hit.k, hit.v)\r\n    } else {\r\n      var maxAge = expiresAt - now\r\n      // dont add already expired items\r\n      if (maxAge > 0) {\r\n        this.set(hit.k, hit.v, maxAge)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nLRUCache.prototype.prune = function () {\r\n  var self = this\r\n  priv(this, 'cache').forEach(function (value, key) {\r\n    get(self, key, false)\r\n  })\r\n}\r\n\r\nfunction get (self, key, doUse) {\r\n  var node = priv(self, 'cache').get(key)\r\n  if (node) {\r\n    var hit = node.value\r\n    if (isStale(self, hit)) {\r\n      del(self, node)\r\n      if (!priv(self, 'allowStale')) hit = undefined\r\n    } else {\r\n      if (doUse) {\r\n        priv(self, 'lruList').unshiftNode(node)\r\n      }\r\n    }\r\n    if (hit) hit = hit.value\r\n  }\r\n  return hit\r\n}\r\n\r\nfunction isStale (self, hit) {\r\n  if (!hit || (!hit.maxAge && !priv(self, 'maxAge'))) {\r\n    return false\r\n  }\r\n  var stale = false\r\n  var diff = Date.now() - hit.now\r\n  if (hit.maxAge) {\r\n    stale = diff > hit.maxAge\r\n  } else {\r\n    stale = priv(self, 'maxAge') && (diff > priv(self, 'maxAge'))\r\n  }\r\n  return stale\r\n}\r\n\r\nfunction trim (self) {\r\n  if (priv(self, 'length') > priv(self, 'max')) {\r\n    for (var walker = priv(self, 'lruList').tail;\r\n         priv(self, 'length') > priv(self, 'max') && walker !== null;) {\r\n      // We know that we're about to delete this one, and also\r\n      // what the next least recently used key will be, so just\r\n      // go ahead and set it now.\r\n      var prev = walker.prev\r\n      del(self, walker)\r\n      walker = prev\r\n    }\r\n  }\r\n}\r\n\r\nfunction del (self, node) {\r\n  if (node) {\r\n    var hit = node.value\r\n    if (priv(self, 'dispose')) {\r\n      priv(self, 'dispose').call(this, hit.key, hit.value)\r\n    }\r\n    priv(self, 'length', priv(self, 'length') - hit.length)\r\n    priv(self, 'cache').delete(hit.key)\r\n    priv(self, 'lruList').removeNode(node)\r\n  }\r\n}\r\n\r\n// classy, since V8 prefers predictable objects.\r\nfunction Entry (key, value, length, now, maxAge) {\r\n  this.key = key\r\n  this.value = value\r\n  this.length = length\r\n  this.now = now\r\n  this.maxAge = maxAge || 0\r\n}\r\n"]},"metadata":{},"sourceType":"script"}