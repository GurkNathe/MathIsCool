{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\Files\\\\Coding\\\\Websites\\\\MathIsCool\\\\MIC\\\\src\\\\components\\\\back\\\\TeamRegister.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, MenuItem, makeStyles, Grid } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState } from \"react\"; //Options for each dropdown. Probably use JSON for them\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet options = require(\"./options\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n})); // <TextField\n// select\n// variant=\"outlined\"\n// label=\"Please Select Grade Level\"\n// value={choice.lev}\n// onChange={(event) => onChange(event, \"level\")}\n// >\n// {options.level.map((option) => (\n//    <MenuItem key={option.value} value={option.value}>\n//       {option.label}\n//    </MenuItem>\n// ))}\n// </TextField>\n//json\n//type\n//label\n\nfunction Auto(props) {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    options: props.options.map(option => option.label),\n    getOptionSelected: (option, value) => option.label === value.label,\n    value: props.value,\n    onChange: props.onChange,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: props.label,\n      variant: \"outlined\",\n      style: {\n        width: props.width\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Auto;\n\nfunction TeamRegister() {\n  _s();\n\n  const classes = useStyles();\n  const [choice, setChoice] = useState({\n    loc: \"\",\n    lev: \"\",\n    school: \"\",\n    coach: \"\"\n  });\n  let longest = 0;\n\n  for (var option in options) {\n    for (let i = 0; i < Object.keys(options[option]).length; i++) {\n      if (options[option][i].label.length > longest) longest = options[option][i].label.length;\n    }\n  }\n\n  longest *= 11;\n\n  const onChange = (newValue, type) => {\n    switch (type) {\n      case \"location\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            loc: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            loc: \"\"\n          }));\n        }\n\n        console.log(choice);\n        break;\n\n      case \"level\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            lev: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            lev: \"\"\n          }));\n        }\n\n        console.log(choice);\n        break;\n\n      case \"school\":\n        if (newValue != null) {\n          setChoice(prevState => ({ ...prevState,\n            school: newValue\n          }));\n        } else {\n          setChoice(prevState => ({ ...prevState,\n            school: \"\"\n          }));\n        }\n\n        console.log(choice);\n        break;\n\n      case \"coach\":\n        setChoice(prevState => ({ ...prevState,\n          coach: newValue.target.value\n        }));\n        break;\n\n      default:\n        console.log(newValue, type);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Rules for Individuals:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), \" Any student may compete as an individual in their grade level or any higher grade; however, a student may compete as a team at one grade level only. This applies to both Championships and Masters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 39\n      }, this), \"Also note each team includes four students in addition to two alternates per school that can compete as individuals. So when registering n teams , you get to bring 4n+2 students along. These students don't need to be registered as individuals separately.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Competition Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Auto, {\n          options: options.locations,\n          type: \"location\",\n          lable: \"Select Competition Location\",\n          onChange: (event, newValue) => onChange(newValue, \"location\"),\n          width: longest,\n          value: choice.loc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Competition Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: options.level.map(option => option.label),\n          getOptionSelected: (option, value) => option.label === value.label,\n          value: choice.lev,\n          onChange: (event, newValue) => onChange(newValue, \"level\"),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Select Your Grade Level\",\n            variant: \"outlined\",\n            style: {\n              width: longest\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"School Registering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: options.school.map(option => option.label),\n          getOptionSelected: (option, value) => option.label === value.label,\n          value: choice.school,\n          onChange: (event, newValue) => onChange(newValue, \"school\"),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Select Your School\",\n            variant: \"outlined\",\n            style: {\n              width: longest\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Coach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          label: \"Coach\",\n          value: choice.coach,\n          onChange: event => onChange(event, \"coach\"),\n          style: {\n            width: longest\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TeamRegister, \"rSoxZZ/KLnVvV7qRvYAhkXGqCaY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TeamRegister;\nexport default TeamRegister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auto\");\n$RefreshReg$(_c2, \"TeamRegister\");","map":{"version":3,"sources":["C:/Users/ethan/OneDrive/Desktop/Files/Coding/Websites/MathIsCool/MIC/src/components/back/TeamRegister.js"],"names":["TextField","MenuItem","makeStyles","Grid","Autocomplete","React","useState","options","require","useStyles","theme","root","margin","spacing","width","Auto","props","map","option","label","value","onChange","params","TeamRegister","classes","choice","setChoice","loc","lev","school","coach","longest","i","Object","keys","length","newValue","type","prevState","console","log","target","paddingLeft","display","locations","event","level"],"mappings":"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","sourcesContent":["import { TextField, MenuItem, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\n//Options for each dropdown. Probably use JSON for them\r\n\r\nlet options = require(\"./options\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     '& .MuiTextField-root': {\r\n       margin: theme.spacing(1),\r\n       width: '25ch',\r\n     },\r\n   },\r\n }));\r\n\r\n// <TextField\r\n// select\r\n// variant=\"outlined\"\r\n// label=\"Please Select Grade Level\"\r\n// value={choice.lev}\r\n// onChange={(event) => onChange(event, \"level\")}\r\n// >\r\n// {options.level.map((option) => (\r\n//    <MenuItem key={option.value} value={option.value}>\r\n//       {option.label}\r\n//    </MenuItem>\r\n// ))}\r\n// </TextField>\r\n\r\n//json\r\n//type\r\n//label\r\nfunction Auto(props){\r\n   return(\r\n      <Autocomplete\r\n         options={props.options.map((option) => option.label)}\r\n         getOptionSelected={(option, value) => option.label === value.label}\r\n         value={props.value}\r\n         onChange={props.onChange}\r\n         \r\n         renderInput={(params) => \r\n                        <TextField \r\n                           {...params} \r\n                           label={props.label} \r\n                           variant=\"outlined\"\r\n                           style={{ width: props.width }}\r\n                        />\r\n                     }\r\n      />\r\n   );\r\n}\r\n\r\nfunction TeamRegister(){\r\n   const classes = useStyles();\r\n   const [choice, setChoice] = useState({loc: \"\", lev: \"\", school: \"\", coach: \"\"});\r\n\r\n   let longest = 0;\r\n\r\n   for(var option in options){\r\n      for(let i = 0; i < Object.keys(options[option]).length; i++){\r\n         if(options[option][i].label.length > longest)\r\n            longest = options[option][i].label.length;\r\n      }\r\n   }\r\n\r\n   longest *= 11;\r\n\r\n   const onChange = (newValue, type) => {\r\n      switch (type) {\r\n         case \"location\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  loc: \"\",\r\n               }));\r\n            }\r\n            console.log(choice)\r\n            break;\r\n         case \"level\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  lev: \"\",\r\n               }));\r\n            }\r\n            console.log(choice)\r\n            break;\r\n         case \"school\":\r\n            if(newValue != null){\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: newValue,\r\n               }));\r\n            } else {\r\n               setChoice((prevState) => ({\r\n                  ...prevState,\r\n                  school: \"\",\r\n               }));\r\n            }\r\n            console.log(choice)\r\n            break;\r\n         case \"coach\":\r\n            setChoice((prevState) => ({\r\n               ...prevState,\r\n               coach: newValue.target.value,\r\n            }));\r\n            break;\r\n         default:\r\n            console.log(newValue, type)\r\n      }\r\n   };\r\n\r\n   return(\r\n      <div style={{paddingLeft:\"10px\"}}>\r\n         <p>\r\n            <b>Rules for Individuals:</b> Any student may compete as an individual \r\n            in their grade level or any higher grade; however, a student may \r\n            compete as a team at one grade level only. This applies to both \r\n            Championships and Masters.<br/>\r\n\r\n            Also note each team includes four students in addition to \r\n            two alternates per school that can compete as individuals. So \r\n            when registering n teams , you get to bring 4n+2 students along. \r\n            These students don't need to be registered as individuals separately.\r\n         </p>\r\n         <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Competition Location</p>\r\n               </Grid>\r\n               <Auto\r\n                  options={options.locations}\r\n                  type=\"location\"\r\n                  lable=\"Select Competition Location\"\r\n                  onChange={(event, newValue) => onChange(newValue, \"location\")}\r\n                  width={longest}\r\n                  value={choice.loc}\r\n\r\n               />\r\n               \r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Competition Level</p>\r\n               </Grid>\r\n               <Autocomplete\r\n                  options={options.level.map((option) => option.label)}\r\n                  getOptionSelected={(option, value) => option.label === value.label}\r\n                  value={choice.lev}\r\n                  onChange={(event, newValue) => onChange(newValue, \"level\")}\r\n                  renderInput={(params) => \r\n                                 <TextField \r\n                                    {...params} \r\n                                    label=\"Select Your Grade Level\" \r\n                                    variant=\"outlined\"\r\n                                    style={{ width: longest }}\r\n                                 />\r\n                              }\r\n               />\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>School Registering</p>\r\n               </Grid>\r\n\r\n               <Autocomplete\r\n                  options={options.school.map((option) => option.label)}\r\n                  getOptionSelected={(option, value) => option.label === value.label}\r\n                  value={choice.school}\r\n                  onChange={(event, newValue) => onChange(newValue, \"school\")}\r\n                  renderInput={(params) => \r\n                                 <TextField \r\n                                    {...params} \r\n                                    label=\"Select Your School\" \r\n                                    variant=\"outlined\"\r\n                                    style={{ width: longest }}\r\n                                 />\r\n                              }\r\n               />\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n               <Grid item sm={3}>\r\n                  <p>Coach</p>\r\n               </Grid>\r\n               <TextField\r\n                  variant=\"outlined\" \r\n                  margin=\"normal\" \r\n                  required\r\n                  label=\"Coach\"\r\n                  value={choice.coach}\r\n                  onChange={(event) => onChange(event, \"coach\")}\r\n                  style={{ width: longest }}\r\n               >\r\n\r\n               </TextField>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TeamRegister;"]},"metadata":{},"sourceType":"module"}