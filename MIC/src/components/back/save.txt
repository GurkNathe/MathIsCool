
          <div className={classes.table}>
            {
              props.teams !== 0 ?
              teams.map((team, index) => {
                return(
                  <div className={classes.table} key={index}>
                    <Typography>Team {team}</Typography>
                    { 
                      [1,2,3,4].map((num, ind) => {
                        return(
                          <div className={classes.table} key={ind}>
                            <TextField
                              variant="outlined" 
                              margin="normal"
                              label={`Student #${num}`}
                              value={students[team][`student${num}`]}
                              onChange={(event) => onChange(team, `student${num}`, event.target.value)}
                            />
                          </div>
                        );
                      })
                    }
                  </div>
                )
              }):
              <div className={classes.table}>
                <Typography>Teams</Typography>
                <Typography style={{opacity:"50%"}}>
                  No teams signed up for this competition.
                </Typography>
              </div>
            }
          </div>

          {/* display for individuals */}
          <div className={classes.table}>
            <Typography>Individuals</Typography>
            <div className={classes.indiv}>
              {
                props.individuals !== 0 ?
                indivs.map((indNum, index) => {
                  return(
                    <div className={classes.table} key={index}>
                      <TextField
                        variant="outlined" 
                        margin="normal"
                        label={`Individual #${indNum}`}
                        value={students[indNum][`indiv${indNum}`]}
                        onChange={(event) => onChange(indNum + props.teams + 1, `indiv${indNum}`, event.target.value)}
                      />
                    </div>
                  )
                }):
                <Typography style={{opacity:"50%"}}>
                  No individuals signed up for this competition.
                </Typography>
              }
            </div>
          </div>

          {/*display for the alternates*/}
          <div className={classes.table}>
            <Typography>Alternates</Typography>
            {
              props.teams !== 0 ?
              [1,2].map((num, index) => {
                return(
                  <div className={classes.table} key={index}>
                    <TextField
                      variant="outlined" 
                      margin="normal"
                      label={`Alternate #${num}`}
                      value={students[Object.keys(students).length][`alt${num}`]}
                      onChange={(event) => {onChange(props.teams + 1, `alt${num}`, event.target.value)}}
                    />
                  </div>
                );
              }):
              <Typography style={{opacity:"50%"}}>
                No teams signed up for this competition.
              </Typography>
            }
          </div>
          